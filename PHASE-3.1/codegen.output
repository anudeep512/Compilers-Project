Terminals unused in grammar

    LEXERROR


Grammar

    0 $accept: begin $end

    1 subroutine_token: ε

    2 subroutine_id: ε

    3 subroutine_intVal: ε

    4 subroutine_decVal: ε

    5 subroutine_charVal: ε

    6 subroutine_boolVal: ε

    7 subroutine_stringVal: ε

    8 subroutine_io: ε

    9 subroutine_rs: ε

   10 subroutine_fileH: ε

   11 subroutine_fio: ε

   12 subroutine_fileC: ε

   13 subroutine_array: ε

   14 subroutine_narray: ε

   15 subr_init: ε

   16 return_routine: ε

   17 subroutine: ε

   18 subroutine_roundopen: ε

   19 subroutine_roundclose: ε

   20 subroutine_openscope: ε

   21 subroutine_closescope: ε

   22 subr_this: ε

   23 subr_sleep: ε

   24 all_datatypes: NUDATATYPE subroutine_narray
   25              | AUDATATYPE subroutine_narray
   26              | ARRAY NARRUDATATYPE
   27              | ATOMIC ARRAY AARRUDATATYPE
   28              | NBOOL subroutine_narray
   29              | NDEC subroutine_narray
   30              | NNUM subroutine_narray
   31              | NTEXT subroutine_narray
   32              | NLET subroutine_narray
   33              | ABOOL subroutine_narray
   34              | ADEC subroutine_narray
   35              | ALET subroutine_narray
   36              | ATEXT subroutine_narray
   37              | ANUM subroutine_narray
   38              | subroutine_array nonAtomicArray
   39              | subroutine_array atomicArray

   40 expression_op: ASSN_DIV subroutine_token
   41              | ASSN_MODULO subroutine_token
   42              | ASSN_MUL subroutine_token
   43              | INCR subroutine_token
   44              | DECR subroutine_token

   45 comparison_op: LT subroutine_token
   46              | GT subroutine_token
   47              | GTEQ subroutine_token
   48              | LTEQ subroutine_token
   49              | NOT_EQ subroutine_token
   50              | EQUAL_TWO subroutine_token

   51 arithmetic_op: ADD subroutine_token
   52              | SUB subroutine_token
   53              | MUL subroutine_token
   54              | DIV subroutine_token
   55              | MODULO subroutine_token
   56              | EXPONENT

   57 logical_op: AND subroutine_token
   58           | OR subroutine_token

   59 nonAtomic_datatypes: nonAtomicArray
   60                    | nonAtomicSimple

   61 begin: ε
   62      | startdec begin
   63      | declaration begin
   64      | function begin
   65      | task begin
   66      | type_declaration begin

   67 E: subroutine

   68 $@1: ε

   69 E: SQUAREOPEN $@1 arr_access SQUARECLOSE

   70 T: IDENTIFIER subroutine_id E
   71  | func_invoke
   72  | access

   73 all_ops: arithmetic_op
   74        | comparison_op
   75        | logical_op
   76        | HASH

   77 constants: INTEGERLITERAL subroutine_intVal
   78          | CHARACTERLITERAL subroutine_charVal
   79          | FLOATLITERAL subroutine_decVal
   80          | BOOLEANLITERAL subroutine_boolVal
   81          | STRINGLITERAL subroutine_stringVal

   82 next: RHS all_ops next
   83     | RHS

   84 RHS: constants
   85    | T
   86    | TID subroutine_token
   87    | get_invoke
   88    | method_invoke
   89    | in_stmt
   90    | ROUNDOPEN subroutine_roundopen RHS all_ops next ROUNDCLOSE subroutine_roundclose
   91    | ROUNDOPEN subroutine_roundopen RHS ROUNDCLOSE subroutine_roundclose

   92 $@2: ε

   93 RHS: NEG $@2 ROUNDOPEN subroutine_roundopen RHS ROUNDCLOSE subroutine_roundclose

   94 nonAtomicSimple: NNUM
   95                | NDEC
   96                | NBOOL
   97                | NLET
   98                | NTEXT
   99                | NVOID

  100 atomicSimple: ANUM
  101             | ADEC
  102             | ABOOL
  103             | ALET
  104             | ATEXT

  105 nonAtomicArray: NARRNUM
  106               | NARRDEC
  107               | NARRBOOL
  108               | NARRLET
  109               | NARRTEXT

  110 atomicArray: AARRNUM
  111            | AARRDEC
  112            | AARRBOOL
  113            | AARRLET
  114            | AARRTEXT

  115 errorDatatypes: IDENTIFIER
  116               | ATOMIC IDENTIFIER
  117               | ARRAY IDENTIFIER
  118               | ATOMIC ARRAY IDENTIFIER

  119 declaration: declarationStmt SEMICOLON subroutine_token
  120            | errorDatatypes IDENTIFIER subroutine_token

  121 simpleDatatype: nonAtomicSimple
  122               | atomicSimple
  123               | NUDATATYPE
  124               | ATOMIC AUDATATYPE

  125 arrayDatatype: nonAtomicArray
  126              | atomicArray
  127              | ARRAY NARRUDATATYPE
  128              | ATOMIC ARRAY AARRUDATATYPE

  129 $@3: ε

  130 declarationStmt: simpleDatatype $@3 simpleList

  131 $@4: ε

  132 declarationStmt: arrayDatatype $@4 arrayList

  133 simpleList: IDENTIFIER subroutine_id
  134           | simpleList COMMA subroutine_token IDENTIFIER
  135           | IDENTIFIER subroutine_id EQ subroutine_token RHS
  136           | simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  138          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

  141 array_inValues: INTEGERLITERAL
  142               | IDENTIFIER

  143 $@5: ε

  144 dimlist: dimlist COMMA $@5 array_inValues
  145        | array_inValues

  146 LHS: IDENTIFIER subroutine_id
  147    | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token arr_access SQUARECLOSE subroutine_token
  148    | access

  149 arr_access: exprlist

  150 subroutine_dim: ε

  151 exprlist: arith_expr
  152         | exprlist COMMA subroutine_dim arith_expr

  153 arith_operand: IDENTIFIER
  154              | INTEGERLITERAL
  155              | FLOATLITERAL
  156              | ROUNDOPEN subroutine_token arith_expr ROUNDCLOSE subroutine_token

  157 arith_expr: arith_expr arithmetic_op arith_operand
  158           | arith_operand

  159 assignment_statement: LHS EQ subroutine_token RHS

  160 expression_statement: LHS expression_op RHS

  161 $@6: ε

  162 expression_statement: LHS ASSN_EXPONENT $@6 RHS subroutine_roundclose

  163 exprrr: expression_statement
  164       | ROUNDOPEN subroutine_token expression_statement ROUNDCLOSE subroutine_token

  165 log: assignment_statement SEMICOLON subroutine_token
  166    | expression_statement SEMICOLON subroutine_token

  167 g: IDENTIFIER subroutine_id EQ subroutine_token RHS
  168  | g COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS

  169 both_assignment: assignment_statement
  170                | ROUNDOPEN subroutine_token assignment_statement ROUNDCLOSE subroutine_token

  171 $@7: ε

  172 both_assignment: simpleDatatype $@7 g

  173 loop: for_loop
  174     | while_loop

  175 $@8: ε

  176 $@9: ε

  177 $@10: ε

  178 $@11: ε

  179 $@12: ε

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

  181 $@13: ε

  182 $@14: ε

  183 $@15: ε

  184 $@16: ε

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

  186 conditional: when_statement

  187 $@17: ε

  188 $@18: ε

  189 $@19: ε

  190 $@20: ε

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

  192 $@21: ε

  193 $@22: ε

  194 $@23: ε

  195 $@24: ε

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

  197 $@25: ε

  198 $@26: ε

  199 $@27: ε

  200 extend: DEFAULT $@25 SCOPEOPEN subroutine_openscope $@26 statements $@27 SCOPECLOSE subroutine_closescope
  201       | subroutine

  202 analyze_label: STRINGLITERAL subroutine_stringVal
  203              | IDENTIFIER subroutine_id

  204 $@28: ε

  205 $@29: ε

  206 $@30: ε

  207 $@31: ε

  208 $@32: ε

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

  210 func_invoke2: func_invoke SEMICOLON

  211 func_invoke: INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  212            | INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

  213 arguments: arguments COMMA subroutine_token RHS
  214          | RHS

  215 $@33: ε

  216 task_invoke_args: $@33 arguments
  217                 | NULL_ARGS

  218 $@34: ε

  219 $@35: ε

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER COLON $@34 task_invoke_args $@35 COLON SEMICOLON

  221 get_invoke: GET ARROW TIME

  222 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_token FLOATLITERAL subroutine_decVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token
  223      | SLEEP subr_sleep ROUNDOPEN subroutine_roundopen INTEGERLITERAL subroutine_intVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

  224 file_name: ARROW subroutine_fileH STRINGLITERAL subroutine_stringVal subroutine_roundclose subroutine_fio
  225          | ARROW subroutine_fileH IDENTIFIER subroutine_id subroutine_roundclose subroutine_fio
  226          | subroutine_io subr_init

  227 $@36: ε

  228 input: IP $@36 file_name COLON subroutine_rs IDENTIFIER subroutine_id nextip subroutine_fileC

  229 nextip: COMMA subroutine_rs IDENTIFIER subroutine_id nextip
  230       | SEMICOLON subroutine_token

  231 stringvalues: STRINGLITERAL subroutine_stringVal
  232             | IDENTIFIER subroutine_id

  233 return_statement: RETURN subroutine_token RHS SEMICOLON
  234                 | RETURN subroutine_token NVOID SEMICOLON subroutine_token

  235 $@37: ε

  236 output: OP $@37 file_name COLON opstring SEMICOLON subroutine_token subroutine_fileC

  237 opstring: subroutine_rs stringvalues nextop

  238 nextop: HASH subroutine_rs stringvalues nextop
  239       | subroutine

  240 function: func_decl func_body
  241         | atomic_func_decl func_body

  242 $@38: ε

  243 $@39: ε

  244 func_args: all_datatypes $@38 IDENTIFIER $@39

  245 $@40: ε

  246 $@41: ε

  247 $@42: ε

  248 func_args: func_args COMMA $@40 all_datatypes $@41 IDENTIFIER $@42

  249 args: func_args
  250     | NULL_ARGS

  251 func_return: nonAtomic_datatypes
  252            | NUDATATYPE
  253            | IDENTIFIER

  254 $@43: ε

  255 $@44: ε

  256 $@45: ε

  257 $@46: ε

  258 func_decl: FUNC $@43 IDENTIFIER $@44 COLON $@45 args COLON $@46 func_return

  259 $@47: ε

  260 $@48: ε

  261 $@49: ε

  262 $@50: ε

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER $@48 COLON $@49 args COLON $@50 func_return

  264 $@51: ε

  265 $@52: ε

  266 func_body: SCOPEOPEN subroutine_openscope $@51 func_statements $@52 SCOPECLOSE subroutine_closescope

  267 func_scope: declaration
  268           | log
  269           | task_invoke
  270           | func_invoke2
  271           | loop
  272           | return_routine return_statement
  273           | conditional
  274           | analyze_statement
  275           | input
  276           | output
  277           | sleep

  278 $@53: ε

  279 $@54: ε

  280 func_scope: SCOPEOPEN subroutine_openscope $@53 func_statements $@54 SCOPECLOSE subroutine_closescope
  281           | method_invoke2

  282 func_statements: func_scope func_statements
  283                | subroutine

  284 $@55: ε

  285 $@56: ε

  286 $@57: ε

  287 $@58: ε

  288 $@59: ε

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

  290 taskscope: declaration taskscope
  291          | log taskscope
  292          | conditional taskscope
  293          | loop taskscope
  294          | func_invoke2 taskscope
  295          | output taskscope

  296 $@60: ε

  297 $@61: ε

  298 taskscope: SCOPEOPEN subroutine_openscope $@60 taskscope $@61 SCOPECLOSE subroutine_closescope taskscope
  299          | sleep taskscope
  300          | method_invoke2 taskscope
  301          | subroutine

  302 statement: declaration
  303          | log
  304          | conditional
  305          | in_stmt EQ subroutine_token RHS SEMICOLON subroutine_token
  306          | loop
  307          | return_statement
  308          | func_invoke2
  309          | task_invoke
  310          | analyze_statement

  311 $@62: ε

  312 $@63: ε

  313 statement: SCOPEOPEN subroutine_openscope $@62 statements $@63 SCOPECLOSE subroutine_closescope
  314          | output
  315          | sleep
  316          | BREAK SEMICOLON subroutine_token
  317          | CONTINUE SEMICOLON subroutine_token
  318          | input
  319          | method_invoke2

  320 statements: statement statements
  321           | subroutine

  322 subroutine_arrow: ε

  323 access: IDENTIFIER subroutine_id ARROW subroutine_arrow id

  324 id: IDENTIFIER subroutine_id
  325   | id ARROW subroutine_arrow IDENTIFIER subroutine_id

  326 $@64: ε

  327 $@65: ε

  328 $@66: ε

  329 startdec: START $@64 SCOPEOPEN subroutine_openscope start $@65 $@66 SCOPECLOSE subroutine_closescope

  330 start: declaration start
  331      | log start
  332      | conditional start
  333      | loop start
  334      | func_invoke2 start
  335      | task_invoke start
  336      | analyze_statement start
  337      | output start
  338      | input start

  339 $@67: ε

  340 $@68: ε

  341 start: SCOPEOPEN subroutine_openscope $@67 start $@68 SCOPECLOSE subroutine_closescope start
  342      | sleep start
  343      | method_invoke2 start
  344      | subroutine

  345 subr_public: ε

  346 $@69: ε

  347 $@70: ε

  348 $@71: ε

  349 $@72: ε

  350 $@73: ε

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

  352 type_scope: declaration_t type_scope
  353           | subroutine

  354 declaration_t: declarationStmt_t SEMICOLON subroutine_token

  355 declarationStmt_t: simpleDatatype simpleList_t
  356                  | arrayDatatype arrayList_t

  357 simpleList_t: IDENTIFIER subroutine_id
  358             | simpleList COMMA subroutine_token IDENTIFIER subroutine_id
  359             | IDENTIFIER subroutine_id EQ subroutine_token RHS
  360             | simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS

  361 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  362            | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  363            | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  364            | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

  365 methods: methods method
  366        | subroutine

  367 $@74: ε

  368 method: func_decl_m SCOPEOPEN subroutine_openscope method_body $@74 SCOPECLOSE subroutine_closescope

  369 $@75: ε

  370 $@76: ε

  371 $@77: ε

  372 $@78: ε

  373 func_decl_m: FUNC $@75 IDENTIFIER $@76 COLON $@77 args COLON $@78 func_return

  374 method_invoke2: method_invoke SEMICOLON

  375 method_args: arguments
  376            | NULL_ARGS

  377 method_invoke: INVOKE id ARROW subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen method_args COLON subroutine_roundclose

  378 in_stmt: IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id
  379        | INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

  381 method_statements: declaration
  382                  | log
  383                  | task_invoke
  384                  | func_invoke2
  385                  | loop
  386                  | return_statement_m
  387                  | conditional
  388                  | in_stmt EQ subroutine_token RHS SEMICOLON subroutine_token
  389                  | analyze_statement
  390                  | input
  391                  | output
  392                  | sleep

  393 $@79: ε

  394 $@80: ε

  395 method_statements: SCOPEOPEN subroutine_openscope $@79 method_statements $@80 SCOPECLOSE subroutine_closescope
  396                  | method_invoke2

  397 return_statement_m: RETURN subroutine_token RHS SEMICOLON subroutine_token
  398                   | RETURN subroutine_token NVOID SEMICOLON subroutine_token

  399 method_body: method_statements method_body
  400            | subroutine


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN <attr> (258) 191
    REPEAT <attr> (259) 185
    ELSE_WHEN <attr> (260) 196
    DEFAULT <attr> (261) 200
    FOR <attr> (262) 180
    BREAK <attr> (263) 316
    CONTINUE <attr> (264) 317
    TASK <attr> (265) 289
    MAKE_PARALLEL <attr> (266) 220
    NULL_ARGS <attr> (267) 212 217 250 376 380
    TID <attr> (268) 86
    ANALYZE <attr> (269) 209
    GET <attr> (270) 221
    SLEEP <attr> (271) 222 223
    TIME <attr> (272) 221
    START <attr> (273) 329
    RETURN <attr> (274) 233 234 397 398
    TYPE <attr> (275) 351
    ATOMIC <attr> (276) 27 116 118 124 128 263
    ARRAY <attr> (277) 26 27 117 118 127 128
    IN <attr> (278) 378 379 380
    FUNC <attr> (279) 258 263 373
    INVOKE <attr> (280) 211 212 377 379 380
    IP <attr> (281) 228
    OP <attr> (282) 236
    DIV <attr> (283) 54
    ADD <attr> (284) 51
    SUB <attr> (285) 52
    MUL <attr> (286) 53
    EXPONENT <attr> (287) 56
    MODULO <attr> (288) 55
    ARROW <attr> (289) 221 224 225 323 325 377 378 379 380
    EQ <attr> (290) 135 136 139 140 159 167 168 305 359 360 363 364 388
    INCR <attr> (291) 43
    DECR <attr> (292) 44
    ASSN_MODULO <attr> (293) 41
    ASSN_EXPONENT <attr> (294) 162
    ASSN_DIV <attr> (295) 40
    ASSN_MUL <attr> (296) 42
    AND <attr> (297) 57
    OR <attr> (298) 58
    GT <attr> (299) 46
    LT <attr> (300) 45
    GTEQ <attr> (301) 47
    LTEQ <attr> (302) 48
    NOT_EQ <attr> (303) 49
    NEG <attr> (304) 93
    EQUAL_TWO <attr> (305) 50
    INTEGERLITERAL <attr> (306) 77 141 154 223
    STRINGLITERAL <attr> (307) 81 202 224 231
    CHARACTERLITERAL <attr> (308) 78
    BOOLEANLITERAL <attr> (309) 80
    FLOATLITERAL <attr> (310) 79 155 222
    PIPE <attr> (311) 180
    IDENTIFIER <attr> (312) 70 115 116 117 118 120 133 134 135 136 137 138 139 140 142 146 147 153 167 168 203 209 211 212 220 225 228 229 232 244 248 253 258 263 289 323 324 325 357 358 359 360 361 362 363 364 373 377 378 379 380
    COMMA <attr> (313) 134 136 138 140 144 152 168 213 229 248 358 360 362 364
    SEMICOLON <attr> (314) 119 165 166 209 210 220 222 223 230 233 234 236 305 316 317 354 374 388 397 398
    COLON <attr> (315) 209 211 212 220 228 236 258 263 289 373 377 379 380
    SCOPEOPEN <attr> (316) 180 185 191 196 200 266 280 289 298 313 329 341 351 368 395
    SCOPECLOSE <attr> (317) 180 185 191 196 200 266 280 289 298 313 329 341 351 368 395
    ROUNDOPEN <attr> (318) 90 91 93 156 164 170 222 223
    ROUNDCLOSE <attr> (319) 90 91 93 156 164 170 222 223
    SQUAREOPEN <attr> (320) 69 137 138 139 140 147 180 185 191 196 361 362 363 364
    SQUARECLOSE <attr> (321) 69 137 138 139 140 147 180 185 191 196 361 362 363 364
    HASH <attr> (322) 76 238
    LEXERROR <attr> (323)
    NNUM <attr> (324) 30 94
    NDEC <attr> (325) 29 95
    NBOOL <attr> (326) 28 96
    NLET <attr> (327) 32 97
    NTEXT <attr> (328) 31 98
    NVOID <attr> (329) 99 234 398
    NARRNUM <attr> (330) 105
    NARRDEC <attr> (331) 106
    NARRBOOL <attr> (332) 107
    NARRLET <attr> (333) 108
    NARRTEXT <attr> (334) 109
    ANUM <attr> (335) 37 100
    ADEC <attr> (336) 34 101
    ABOOL <attr> (337) 33 102
    ALET <attr> (338) 35 103
    ATEXT <attr> (339) 36 104
    AARRNUM <attr> (340) 110
    AARRDEC <attr> (341) 111
    AARRBOOL <attr> (342) 112
    AARRLET <attr> (343) 113
    AARRTEXT <attr> (344) 114
    TYPENAME <attr> (345) 351
    NUDATATYPE <attr> (346) 24 123 252
    AUDATATYPE <attr> (347) 25 124
    NARRUDATATYPE <attr> (348) 26 127
    AARRUDATATYPE <attr> (349) 27 128


Nonterminals, with rules where they appear

    $accept (95)
        on left: 0
    subroutine_token <attr> (96)
        on left: 1
        on right: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 86 119 120 134 135 136 137 138 139 140 147 156 159 164 165 166 167 168 170 209 213 222 223 230 233 234 236 305 316 317 354 358 359 360 361 362 363 364 378 379 380 388 397 398
    subroutine_id <attr> (97)
        on left: 2
        on right: 70 133 135 136 137 138 139 140 146 147 167 168 203 209 211 212 225 228 229 232 323 324 325 357 358 359 360 361 362 363 364 377 378 379 380
    subroutine_intVal <attr> (98)
        on left: 3
        on right: 77 223
    subroutine_decVal <attr> (99)
        on left: 4
        on right: 79 222
    subroutine_charVal <attr> (100)
        on left: 5
        on right: 78
    subroutine_boolVal <attr> (101)
        on left: 6
        on right: 80
    subroutine_stringVal <attr> (102)
        on left: 7
        on right: 81 202 224 231
    subroutine_io <attr> (103)
        on left: 8
        on right: 226
    subroutine_rs <attr> (104)
        on left: 9
        on right: 228 229 237 238
    subroutine_fileH (105)
        on left: 10
        on right: 224 225
    subroutine_fio (106)
        on left: 11
        on right: 224 225
    subroutine_fileC (107)
        on left: 12
        on right: 228 236
    subroutine_array <attr> (108)
        on left: 13
        on right: 38 39
    subroutine_narray <attr> (109)
        on left: 14
        on right: 24 25 28 29 30 31 32 33 34 35 36 37
    subr_init (110)
        on left: 15
        on right: 226
    return_routine <attr> (111)
        on left: 16
        on right: 272
    subroutine <attr> (112)
        on left: 17
        on right: 67 201 239 283 301 321 344 353 366 400
    subroutine_roundopen (113)
        on left: 18
        on right: 90 91 93 180 185 191 196 211 212 223 377 379 380
    subroutine_roundclose (114)
        on left: 19
        on right: 90 91 93 162 180 185 191 196 209 211 212 222 223 224 225 377 379 380
    subroutine_openscope (115)
        on left: 20
        on right: 180 185 191 196 200 266 280 289 298 313 329 341 351 368 395
    subroutine_closescope (116)
        on left: 21
        on right: 180 185 191 196 200 266 280 289 298 313 329 341 351 368 395
    subr_this (117)
        on left: 22
        on right: 378 379 380
    subr_sleep (118)
        on left: 23
        on right: 222 223
    all_datatypes <attr> (119)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 244 248
    expression_op <attr> (120)
        on left: 40 41 42 43 44
        on right: 160
    comparison_op <attr> (121)
        on left: 45 46 47 48 49 50
        on right: 74
    arithmetic_op <attr> (122)
        on left: 51 52 53 54 55 56
        on right: 73 157
    logical_op <attr> (123)
        on left: 57 58
        on right: 75
    nonAtomic_datatypes <attr> (124)
        on left: 59 60
        on right: 251
    begin (125)
        on left: 61 62 63 64 65 66
        on right: 0 62 63 64 65 66
    E <attr> (126)
        on left: 67 69
        on right: 70
    $@1 (127)
        on left: 68
        on right: 69
    T <attr> (128)
        on left: 70 71 72
        on right: 85
    all_ops <attr> (129)
        on left: 73 74 75 76
        on right: 82 90
    constants <attr> (130)
        on left: 77 78 79 80 81
        on right: 84
    next <attr> (131)
        on left: 82 83
        on right: 82 90
    RHS <attr> (132)
        on left: 84 85 86 87 88 89 90 91 93
        on right: 82 83 90 91 93 135 136 139 140 159 160 162 167 168 180 185 191 196 213 214 233 305 359 360 363 364 388 397
    $@2 (133)
        on left: 92
        on right: 93
    nonAtomicSimple <attr> (134)
        on left: 94 95 96 97 98 99
        on right: 60 121
    atomicSimple <attr> (135)
        on left: 100 101 102 103 104
        on right: 122
    nonAtomicArray <attr> (136)
        on left: 105 106 107 108 109
        on right: 38 59 125
    atomicArray <attr> (137)
        on left: 110 111 112 113 114
        on right: 39 126
    errorDatatypes (138)
        on left: 115 116 117 118
        on right: 120
    declaration <attr> (139)
        on left: 119 120
        on right: 63 267 290 302 330 381
    simpleDatatype <attr> (140)
        on left: 121 122 123 124
        on right: 130 172 355
    arrayDatatype <attr> (141)
        on left: 125 126 127 128
        on right: 132 356
    declarationStmt <attr> (142)
        on left: 130 132
        on right: 119
    $@3 (143)
        on left: 129
        on right: 130
    $@4 (144)
        on left: 131
        on right: 132
    simpleList <attr> (145)
        on left: 133 134 135 136
        on right: 130 134 136 358 360
    arrayList <attr> (146)
        on left: 137 138 139 140
        on right: 132 138 140 362 364
    array_inValues <attr> (147)
        on left: 141 142
        on right: 144 145
    dimlist <attr> (148)
        on left: 144 145
        on right: 137 138 139 140 144 361 362 363 364
    $@5 (149)
        on left: 143
        on right: 144
    LHS <attr> (150)
        on left: 146 147 148
        on right: 159 160 162
    arr_access <attr> (151)
        on left: 149
        on right: 69 147
    subroutine_dim <attr> (152)
        on left: 150
        on right: 152
    exprlist <attr> (153)
        on left: 151 152
        on right: 149 152
    arith_operand <attr> (154)
        on left: 153 154 155 156
        on right: 157 158
    arith_expr <attr> (155)
        on left: 157 158
        on right: 151 152 156 157
    assignment_statement <attr> (156)
        on left: 159
        on right: 165 169 170
    expression_statement <attr> (157)
        on left: 160 162
        on right: 163 164 166
    $@6 (158)
        on left: 161
        on right: 162
    exprrr <attr> (159)
        on left: 163 164
        on right: 180
    log <attr> (160)
        on left: 165 166
        on right: 268 291 303 331 382
    g <attr> (161)
        on left: 167 168
        on right: 168 172
    both_assignment <attr> (162)
        on left: 169 170 172
        on right: 180
    $@7 (163)
        on left: 171
        on right: 172
    loop <attr> (164)
        on left: 173 174
        on right: 271 293 306 333 385
    for_loop <attr> (165)
        on left: 180
        on right: 173
    $@8 (166)
        on left: 175
        on right: 180
    $@9 (167)
        on left: 176
        on right: 180
    $@10 (168)
        on left: 177
        on right: 180
    $@11 (169)
        on left: 178
        on right: 180
    $@12 (170)
        on left: 179
        on right: 180
    while_loop <attr> (171)
        on left: 185
        on right: 174
    $@13 (172)
        on left: 181
        on right: 185
    $@14 (173)
        on left: 182
        on right: 185
    $@15 (174)
        on left: 183
        on right: 185
    $@16 (175)
        on left: 184
        on right: 185
    conditional <attr> (176)
        on left: 186
        on right: 273 292 304 332 387
    when_statement <attr> (177)
        on left: 191
        on right: 186
    $@17 (178)
        on left: 187
        on right: 191
    $@18 (179)
        on left: 188
        on right: 191
    $@19 (180)
        on left: 189
        on right: 191
    $@20 (181)
        on left: 190
        on right: 191
    extend (182)
        on left: 196 200 201
        on right: 191 196
    $@21 (183)
        on left: 192
        on right: 196
    $@22 (184)
        on left: 193
        on right: 196
    $@23 (185)
        on left: 194
        on right: 196
    $@24 (186)
        on left: 195
        on right: 196
    $@25 (187)
        on left: 197
        on right: 200
    $@26 (188)
        on left: 198
        on right: 200
    $@27 (189)
        on left: 199
        on right: 200
    analyze_label <attr> (190)
        on left: 202 203
        on right: 209
    analyze_statement <attr> (191)
        on left: 209
        on right: 274 310 336 389
    $@28 (192)
        on left: 204
        on right: 209
    $@29 (193)
        on left: 205
        on right: 209
    $@30 (194)
        on left: 206
        on right: 209
    $@31 (195)
        on left: 207
        on right: 209
    $@32 (196)
        on left: 208
        on right: 209
    func_invoke2 <attr> (197)
        on left: 210
        on right: 270 294 308 334 384
    func_invoke <attr> (198)
        on left: 211 212
        on right: 71 210
    arguments <attr> (199)
        on left: 213 214
        on right: 211 213 216 375 379
    task_invoke_args (200)
        on left: 216 217
        on right: 220
    $@33 (201)
        on left: 215
        on right: 216
    task_invoke <attr> (202)
        on left: 220
        on right: 269 309 335 383
    $@34 (203)
        on left: 218
        on right: 220
    $@35 (204)
        on left: 219
        on right: 220
    get_invoke <attr> (205)
        on left: 221
        on right: 87
    sleep <attr> (206)
        on left: 222 223
        on right: 277 299 315 342 392
    file_name <attr> (207)
        on left: 224 225 226
        on right: 228 236
    input <attr> (208)
        on left: 228
        on right: 275 318 338 390
    $@36 (209)
        on left: 227
        on right: 228
    nextip <attr> (210)
        on left: 229 230
        on right: 228 229
    stringvalues <attr> (211)
        on left: 231 232
        on right: 237 238
    return_statement <attr> (212)
        on left: 233 234
        on right: 272 307
    output <attr> (213)
        on left: 236
        on right: 276 295 314 337 391
    $@37 (214)
        on left: 235
        on right: 236
    opstring <attr> (215)
        on left: 237
        on right: 236
    nextop <attr> (216)
        on left: 238 239
        on right: 237 238
    function (217)
        on left: 240 241
        on right: 64
    func_args (218)
        on left: 244 248
        on right: 248 249
    $@38 (219)
        on left: 242
        on right: 244
    $@39 (220)
        on left: 243
        on right: 244
    $@40 (221)
        on left: 245
        on right: 248
    $@41 (222)
        on left: 246
        on right: 248
    $@42 (223)
        on left: 247
        on right: 248
    args (224)
        on left: 249 250
        on right: 258 263 289 373
    func_return <attr> (225)
        on left: 251 252 253
        on right: 258 263 373
    func_decl <attr> (226)
        on left: 258
        on right: 240
    $@43 (227)
        on left: 254
        on right: 258
    $@44 (228)
        on left: 255
        on right: 258
    $@45 (229)
        on left: 256
        on right: 258
    $@46 (230)
        on left: 257
        on right: 258
    atomic_func_decl <attr> (231)
        on left: 263
        on right: 241
    $@47 (232)
        on left: 259
        on right: 263
    $@48 (233)
        on left: 260
        on right: 263
    $@49 (234)
        on left: 261
        on right: 263
    $@50 (235)
        on left: 262
        on right: 263
    func_body <attr> (236)
        on left: 266
        on right: 240 241
    $@51 (237)
        on left: 264
        on right: 266
    $@52 (238)
        on left: 265
        on right: 266
    func_scope <attr> (239)
        on left: 267 268 269 270 271 272 273 274 275 276 277 280 281
        on right: 282
    $@53 (240)
        on left: 278
        on right: 280
    $@54 (241)
        on left: 279
        on right: 280
    func_statements <attr> (242)
        on left: 282 283
        on right: 266 280 282
    task (243)
        on left: 289
        on right: 65
    $@55 (244)
        on left: 284
        on right: 289
    $@56 (245)
        on left: 285
        on right: 289
    $@57 (246)
        on left: 286
        on right: 289
    $@58 (247)
        on left: 287
        on right: 289
    $@59 (248)
        on left: 288
        on right: 289
    taskscope (249)
        on left: 290 291 292 293 294 295 298 299 300 301
        on right: 289 290 291 292 293 294 295 298 299 300
    $@60 (250)
        on left: 296
        on right: 298
    $@61 (251)
        on left: 297
        on right: 298
    statement <attr> (252)
        on left: 302 303 304 305 306 307 308 309 310 313 314 315 316 317 318 319
        on right: 320
    $@62 (253)
        on left: 311
        on right: 313
    $@63 (254)
        on left: 312
        on right: 313
    statements <attr> (255)
        on left: 320 321
        on right: 180 185 191 196 200 313 320
    subroutine_arrow (256)
        on left: 322
        on right: 323 325 377
    access <attr> (257)
        on left: 323
        on right: 72 148
    id <attr> (258)
        on left: 324 325
        on right: 323 325 377
    startdec <attr> (259)
        on left: 329
        on right: 62
    $@64 (260)
        on left: 326
        on right: 329
    $@65 (261)
        on left: 327
        on right: 329
    $@66 (262)
        on left: 328
        on right: 329
    start <attr> (263)
        on left: 330 331 332 333 334 335 336 337 338 341 342 343 344
        on right: 329 330 331 332 333 334 335 336 337 338 341 342 343
    $@67 (264)
        on left: 339
        on right: 341
    $@68 (265)
        on left: 340
        on right: 341
    subr_public (266)
        on left: 345
        on right: 351
    type_declaration <attr> (267)
        on left: 351
        on right: 66
    $@69 (268)
        on left: 346
        on right: 351
    $@70 (269)
        on left: 347
        on right: 351
    $@71 (270)
        on left: 348
        on right: 351
    $@72 (271)
        on left: 349
        on right: 351
    $@73 (272)
        on left: 350
        on right: 351
    type_scope <attr> (273)
        on left: 352 353
        on right: 351 352
    declaration_t <attr> (274)
        on left: 354
        on right: 352
    declarationStmt_t (275)
        on left: 355 356
        on right: 354
    simpleList_t (276)
        on left: 357 358 359 360
        on right: 355
    arrayList_t (277)
        on left: 361 362 363 364
        on right: 356
    methods <attr> (278)
        on left: 365 366
        on right: 351 365
    method <attr> (279)
        on left: 368
        on right: 365
    $@74 (280)
        on left: 367
        on right: 368
    func_decl_m <attr> (281)
        on left: 373
        on right: 368
    $@75 (282)
        on left: 369
        on right: 373
    $@76 (283)
        on left: 370
        on right: 373
    $@77 (284)
        on left: 371
        on right: 373
    $@78 (285)
        on left: 372
        on right: 373
    method_invoke2 <attr> (286)
        on left: 374
        on right: 281 300 319 343 396
    method_args <attr> (287)
        on left: 375 376
        on right: 377
    method_invoke <attr> (288)
        on left: 377
        on right: 88 374
    in_stmt <attr> (289)
        on left: 378 379 380
        on right: 89 305 388
    method_statements <attr> (290)
        on left: 381 382 383 384 385 386 387 388 389 390 391 392 395 396
        on right: 395 399
    $@79 (291)
        on left: 393
        on right: 395
    $@80 (292)
        on left: 394
        on right: 395
    return_statement_m <attr> (293)
        on left: 397 398
        on right: 386
    method_body <attr> (294)
        on left: 399 400
        on right: 368 399


State 0

    0 $accept: • begin $end

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 61 (begin)

    begin             go to state 30
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 1

  289 task: TASK • $@55 IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 284 ($@55)

    $@55  go to state 46


State 2

  329 startdec: START • $@64 SCOPEOPEN subroutine_openscope start $@65 $@66 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 326 ($@64)

    $@64  go to state 47


State 3

  351 type_declaration: TYPE • $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 346 ($@69)

    $@69  go to state 48


State 4

  116 errorDatatypes: ATOMIC • IDENTIFIER
  118               | ATOMIC • ARRAY IDENTIFIER
  124 simpleDatatype: ATOMIC • AUDATATYPE
  128 arrayDatatype: ATOMIC • ARRAY AARRUDATATYPE
  263 atomic_func_decl: ATOMIC • FUNC $@47 IDENTIFIER $@48 COLON $@49 args COLON $@50 func_return

    ARRAY       shift, and go to state 49
    FUNC        shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    AUDATATYPE  shift, and go to state 52


State 5

  117 errorDatatypes: ARRAY • IDENTIFIER
  127 arrayDatatype: ARRAY • NARRUDATATYPE

    IDENTIFIER     shift, and go to state 53
    NARRUDATATYPE  shift, and go to state 54


State 6

  258 func_decl: FUNC • $@43 IDENTIFIER $@44 COLON $@45 args COLON $@46 func_return

    $default  reduce using rule 254 ($@43)

    $@43  go to state 55


State 7

  115 errorDatatypes: IDENTIFIER •

    $default  reduce using rule 115 (errorDatatypes)


State 8

   94 nonAtomicSimple: NNUM •

    $default  reduce using rule 94 (nonAtomicSimple)


State 9

   95 nonAtomicSimple: NDEC •

    $default  reduce using rule 95 (nonAtomicSimple)


State 10

   96 nonAtomicSimple: NBOOL •

    $default  reduce using rule 96 (nonAtomicSimple)


State 11

   97 nonAtomicSimple: NLET •

    $default  reduce using rule 97 (nonAtomicSimple)


State 12

   98 nonAtomicSimple: NTEXT •

    $default  reduce using rule 98 (nonAtomicSimple)


State 13

   99 nonAtomicSimple: NVOID •

    $default  reduce using rule 99 (nonAtomicSimple)


State 14

  105 nonAtomicArray: NARRNUM •

    $default  reduce using rule 105 (nonAtomicArray)


State 15

  106 nonAtomicArray: NARRDEC •

    $default  reduce using rule 106 (nonAtomicArray)


State 16

  107 nonAtomicArray: NARRBOOL •

    $default  reduce using rule 107 (nonAtomicArray)


State 17

  108 nonAtomicArray: NARRLET •

    $default  reduce using rule 108 (nonAtomicArray)


State 18

  109 nonAtomicArray: NARRTEXT •

    $default  reduce using rule 109 (nonAtomicArray)


State 19

  100 atomicSimple: ANUM •

    $default  reduce using rule 100 (atomicSimple)


State 20

  101 atomicSimple: ADEC •

    $default  reduce using rule 101 (atomicSimple)


State 21

  102 atomicSimple: ABOOL •

    $default  reduce using rule 102 (atomicSimple)


State 22

  103 atomicSimple: ALET •

    $default  reduce using rule 103 (atomicSimple)


State 23

  104 atomicSimple: ATEXT •

    $default  reduce using rule 104 (atomicSimple)


State 24

  110 atomicArray: AARRNUM •

    $default  reduce using rule 110 (atomicArray)


State 25

  111 atomicArray: AARRDEC •

    $default  reduce using rule 111 (atomicArray)


State 26

  112 atomicArray: AARRBOOL •

    $default  reduce using rule 112 (atomicArray)


State 27

  113 atomicArray: AARRLET •

    $default  reduce using rule 113 (atomicArray)


State 28

  114 atomicArray: AARRTEXT •

    $default  reduce using rule 114 (atomicArray)


State 29

  123 simpleDatatype: NUDATATYPE •

    $default  reduce using rule 123 (simpleDatatype)


State 30

    0 $accept: begin • $end

    $end  shift, and go to state 56


State 31

  121 simpleDatatype: nonAtomicSimple •

    $default  reduce using rule 121 (simpleDatatype)


State 32

  122 simpleDatatype: atomicSimple •

    $default  reduce using rule 122 (simpleDatatype)


State 33

  125 arrayDatatype: nonAtomicArray •

    $default  reduce using rule 125 (arrayDatatype)


State 34

  126 arrayDatatype: atomicArray •

    $default  reduce using rule 126 (arrayDatatype)


State 35

  120 declaration: errorDatatypes • IDENTIFIER subroutine_token

    IDENTIFIER  shift, and go to state 57


State 36

   63 begin: declaration • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 61 (begin)

    begin             go to state 58
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 37

  130 declarationStmt: simpleDatatype • $@3 simpleList

    $default  reduce using rule 129 ($@3)

    $@3  go to state 59


State 38

  132 declarationStmt: arrayDatatype • $@4 arrayList

    $default  reduce using rule 131 ($@4)

    $@4  go to state 60


State 39

  119 declaration: declarationStmt • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 61


State 40

   64 begin: function • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 61 (begin)

    begin             go to state 62
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 41

  240 function: func_decl • func_body

    SCOPEOPEN  shift, and go to state 63

    func_body  go to state 64


State 42

  241 function: atomic_func_decl • func_body

    SCOPEOPEN  shift, and go to state 63

    func_body  go to state 65


State 43

   65 begin: task • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 61 (begin)

    begin             go to state 66
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 44

   62 begin: startdec • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 61 (begin)

    begin             go to state 67
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 45

   66 begin: type_declaration • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 61 (begin)

    begin             go to state 68
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 46

  289 task: TASK $@55 • IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    IDENTIFIER  shift, and go to state 69


State 47

  329 startdec: START $@64 • SCOPEOPEN subroutine_openscope start $@65 $@66 SCOPECLOSE subroutine_closescope

    SCOPEOPEN  shift, and go to state 70


State 48

  351 type_declaration: TYPE $@69 • TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

    TYPENAME  shift, and go to state 71


State 49

  118 errorDatatypes: ATOMIC ARRAY • IDENTIFIER
  128 arrayDatatype: ATOMIC ARRAY • AARRUDATATYPE

    IDENTIFIER     shift, and go to state 72
    AARRUDATATYPE  shift, and go to state 73


State 50

  263 atomic_func_decl: ATOMIC FUNC • $@47 IDENTIFIER $@48 COLON $@49 args COLON $@50 func_return

    $default  reduce using rule 259 ($@47)

    $@47  go to state 74


State 51

  116 errorDatatypes: ATOMIC IDENTIFIER •

    $default  reduce using rule 116 (errorDatatypes)


State 52

  124 simpleDatatype: ATOMIC AUDATATYPE •

    $default  reduce using rule 124 (simpleDatatype)


State 53

  117 errorDatatypes: ARRAY IDENTIFIER •

    $default  reduce using rule 117 (errorDatatypes)


State 54

  127 arrayDatatype: ARRAY NARRUDATATYPE •

    $default  reduce using rule 127 (arrayDatatype)


State 55

  258 func_decl: FUNC $@43 • IDENTIFIER $@44 COLON $@45 args COLON $@46 func_return

    IDENTIFIER  shift, and go to state 75


State 56

    0 $accept: begin $end •

    $default  accept


State 57

  120 declaration: errorDatatypes IDENTIFIER • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 76


State 58

   63 begin: declaration begin •

    $default  reduce using rule 63 (begin)


State 59

  130 declarationStmt: simpleDatatype $@3 • simpleList

    IDENTIFIER  shift, and go to state 77

    simpleList  go to state 78


State 60

  132 declarationStmt: arrayDatatype $@4 • arrayList

    IDENTIFIER  shift, and go to state 79

    arrayList  go to state 80


State 61

  119 declaration: declarationStmt SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 81


State 62

   64 begin: function begin •

    $default  reduce using rule 64 (begin)


State 63

  266 func_body: SCOPEOPEN • subroutine_openscope $@51 func_statements $@52 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 82


State 64

  240 function: func_decl func_body •

    $default  reduce using rule 240 (function)


State 65

  241 function: atomic_func_decl func_body •

    $default  reduce using rule 241 (function)


State 66

   65 begin: task begin •

    $default  reduce using rule 65 (begin)


State 67

   62 begin: startdec begin •

    $default  reduce using rule 62 (begin)


State 68

   66 begin: type_declaration begin •

    $default  reduce using rule 66 (begin)


State 69

  289 task: TASK $@55 IDENTIFIER • $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 285 ($@56)

    $@56  go to state 83


State 70

  329 startdec: START $@64 SCOPEOPEN • subroutine_openscope start $@65 $@66 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 84


State 71

  351 type_declaration: TYPE $@69 TYPENAME • $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 347 ($@70)

    $@70  go to state 85


State 72

  118 errorDatatypes: ATOMIC ARRAY IDENTIFIER •

    $default  reduce using rule 118 (errorDatatypes)


State 73

  128 arrayDatatype: ATOMIC ARRAY AARRUDATATYPE •

    $default  reduce using rule 128 (arrayDatatype)


State 74

  263 atomic_func_decl: ATOMIC FUNC $@47 • IDENTIFIER $@48 COLON $@49 args COLON $@50 func_return

    IDENTIFIER  shift, and go to state 86


State 75

  258 func_decl: FUNC $@43 IDENTIFIER • $@44 COLON $@45 args COLON $@46 func_return

    $default  reduce using rule 255 ($@44)

    $@44  go to state 87


State 76

  120 declaration: errorDatatypes IDENTIFIER subroutine_token •

    $default  reduce using rule 120 (declaration)


State 77

  133 simpleList: IDENTIFIER • subroutine_id
  135           | IDENTIFIER • subroutine_id EQ subroutine_token RHS

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 88


State 78

  130 declarationStmt: simpleDatatype $@3 simpleList •
  134 simpleList: simpleList • COMMA subroutine_token IDENTIFIER
  136           | simpleList • COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS

    COMMA  shift, and go to state 89

    $default  reduce using rule 130 (declarationStmt)


State 79

  137 arrayList: IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 90


State 80

  132 declarationStmt: arrayDatatype $@4 arrayList •
  138 arrayList: arrayList • COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList • COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    COMMA  shift, and go to state 91

    $default  reduce using rule 132 (declarationStmt)


State 81

  119 declaration: declarationStmt SEMICOLON subroutine_token •

    $default  reduce using rule 119 (declaration)


State 82

  266 func_body: SCOPEOPEN subroutine_openscope • $@51 func_statements $@52 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 264 ($@51)

    $@51  go to state 92


State 83

  289 task: TASK $@55 IDENTIFIER $@56 • COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    COLON  shift, and go to state 93


State 84

  329 startdec: START $@64 SCOPEOPEN subroutine_openscope • start $@65 $@66 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 125
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 85

  351 type_declaration: TYPE $@69 TYPENAME $@70 • SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

    SCOPEOPEN  shift, and go to state 128


State 86

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER • $@48 COLON $@49 args COLON $@50 func_return

    $default  reduce using rule 260 ($@48)

    $@48  go to state 129


State 87

  258 func_decl: FUNC $@43 IDENTIFIER $@44 • COLON $@45 args COLON $@46 func_return

    COLON  shift, and go to state 130


State 88

  133 simpleList: IDENTIFIER subroutine_id •
  135           | IDENTIFIER subroutine_id • EQ subroutine_token RHS

    EQ  shift, and go to state 131

    $default  reduce using rule 133 (simpleList)


State 89

  134 simpleList: simpleList COMMA • subroutine_token IDENTIFIER
  136           | simpleList COMMA • subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 132


State 90

  137 arrayList: IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    SQUAREOPEN  shift, and go to state 133


State 91

  138 arrayList: arrayList COMMA • subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA • subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 134


State 92

  266 func_body: SCOPEOPEN subroutine_openscope $@51 • func_statements $@52 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 135
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    SCOPECLOSE  reduce using rule 17 (subroutine)
    $default    reduce using rule 16 (return_routine)

    return_routine        go to state 136
    subroutine            go to state 137
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 138
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 139
    loop                  go to state 140
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 141
    when_statement        go to state 116
    analyze_statement     go to state 142
    func_invoke2          go to state 143
    func_invoke           go to state 119
    task_invoke           go to state 144
    sleep                 go to state 145
    input                 go to state 146
    output                go to state 147
    func_scope            go to state 148
    func_statements       go to state 149
    access                go to state 124
    method_invoke2        go to state 150
    method_invoke         go to state 127


State 93

  289 task: TASK $@55 IDENTIFIER $@56 COLON • $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 286 ($@57)

    $@57  go to state 151


State 94

  191 when_statement: WHEN • $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 187 ($@17)

    $@17  go to state 152


State 95

  185 while_loop: REPEAT • $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 181 ($@13)

    $@13  go to state 153


State 96

  180 for_loop: FOR • $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 175 ($@8)

    $@8  go to state 154


State 97

  220 task_invoke: MAKE_PARALLEL • IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER COLON $@34 task_invoke_args $@35 COLON SEMICOLON

    IDENTIFIER  shift, and go to state 155


State 98

  209 analyze_statement: ANALYZE • $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    $default  reduce using rule 204 ($@28)

    $@28  go to state 156


State 99

  222 sleep: SLEEP • subr_sleep ROUNDOPEN subroutine_token FLOATLITERAL subroutine_decVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token
  223      | SLEEP • subr_sleep ROUNDOPEN subroutine_roundopen INTEGERLITERAL subroutine_intVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    $default  reduce using rule 23 (subr_sleep)

    subr_sleep  go to state 157


State 100

  116 errorDatatypes: ATOMIC • IDENTIFIER
  118               | ATOMIC • ARRAY IDENTIFIER
  124 simpleDatatype: ATOMIC • AUDATATYPE
  128 arrayDatatype: ATOMIC • ARRAY AARRUDATATYPE

    ARRAY       shift, and go to state 49
    IDENTIFIER  shift, and go to state 51
    AUDATATYPE  shift, and go to state 52


State 101

  211 func_invoke: INVOKE • IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  212            | INVOKE • IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose
  377 method_invoke: INVOKE • id ARROW subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen method_args COLON subroutine_roundclose

    IDENTIFIER  shift, and go to state 158

    id  go to state 159


State 102

  228 input: IP • $@36 file_name COLON subroutine_rs IDENTIFIER subroutine_id nextip subroutine_fileC

    $default  reduce using rule 227 ($@36)

    $@36  go to state 160


State 103

  236 output: OP • $@37 file_name COLON opstring SEMICOLON subroutine_token subroutine_fileC

    $default  reduce using rule 235 ($@37)

    $@37  go to state 161


State 104

  115 errorDatatypes: IDENTIFIER •
  146 LHS: IDENTIFIER • subroutine_id
  147    | IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token arr_access SQUARECLOSE subroutine_token
  323 access: IDENTIFIER • subroutine_id ARROW subroutine_arrow id

    IDENTIFIER  reduce using rule 115 (errorDatatypes)
    $default    reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 162


State 105

  341 start: SCOPEOPEN • subroutine_openscope $@67 start $@68 SCOPECLOSE subroutine_closescope start

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 163


State 106

  344 start: subroutine •

    $default  reduce using rule 344 (start)


State 107

  330 start: declaration • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 164
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 108

  159 assignment_statement: LHS • EQ subroutine_token RHS
  160 expression_statement: LHS • expression_op RHS
  162                     | LHS • ASSN_EXPONENT $@6 RHS subroutine_roundclose

    EQ             shift, and go to state 165
    INCR           shift, and go to state 166
    DECR           shift, and go to state 167
    ASSN_MODULO    shift, and go to state 168
    ASSN_EXPONENT  shift, and go to state 169
    ASSN_DIV       shift, and go to state 170
    ASSN_MUL       shift, and go to state 171

    expression_op  go to state 172


State 109

  165 log: assignment_statement • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 173


State 110

  166 log: expression_statement • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 174


State 111

  331 start: log • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 175
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 112

  333 start: loop • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 176
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 113

  173 loop: for_loop •

    $default  reduce using rule 173 (loop)


State 114

  174 loop: while_loop •

    $default  reduce using rule 174 (loop)


State 115

  332 start: conditional • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 177
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 116

  186 conditional: when_statement •

    $default  reduce using rule 186 (conditional)


State 117

  336 start: analyze_statement • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 178
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 118

  334 start: func_invoke2 • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 179
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 119

  210 func_invoke2: func_invoke • SEMICOLON

    SEMICOLON  shift, and go to state 180


State 120

  335 start: task_invoke • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 181
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 121

  342 start: sleep • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 182
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 122

  338 start: input • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 183
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 123

  337 start: output • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 184
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 124

  148 LHS: access •

    $default  reduce using rule 148 (LHS)


State 125

  329 startdec: START $@64 SCOPEOPEN subroutine_openscope start • $@65 $@66 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 327 ($@65)

    $@65  go to state 185


State 126

  343 start: method_invoke2 • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 186
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 127

  374 method_invoke2: method_invoke • SEMICOLON

    SEMICOLON  shift, and go to state 187


State 128

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN • subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 188


State 129

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER $@48 • COLON $@49 args COLON $@50 func_return

    COLON  shift, and go to state 189


State 130

  258 func_decl: FUNC $@43 IDENTIFIER $@44 COLON • $@45 args COLON $@46 func_return

    $default  reduce using rule 256 ($@45)

    $@45  go to state 190


State 131

  135 simpleList: IDENTIFIER subroutine_id EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 191


State 132

  134 simpleList: simpleList COMMA subroutine_token • IDENTIFIER
  136           | simpleList COMMA subroutine_token • IDENTIFIER subroutine_id EQ subroutine_token RHS

    IDENTIFIER  shift, and go to state 192


State 133

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 193


State 134

  138 arrayList: arrayList COMMA subroutine_token • IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token • IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    IDENTIFIER  shift, and go to state 194


State 135

  280 func_scope: SCOPEOPEN • subroutine_openscope $@53 func_statements $@54 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 195


State 136

  272 func_scope: return_routine • return_statement

    RETURN  shift, and go to state 196

    return_statement  go to state 197


State 137

  283 func_statements: subroutine •

    $default  reduce using rule 283 (func_statements)


State 138

  267 func_scope: declaration •

    $default  reduce using rule 267 (func_scope)


State 139

  268 func_scope: log •

    $default  reduce using rule 268 (func_scope)


State 140

  271 func_scope: loop •

    $default  reduce using rule 271 (func_scope)


State 141

  273 func_scope: conditional •

    $default  reduce using rule 273 (func_scope)


State 142

  274 func_scope: analyze_statement •

    $default  reduce using rule 274 (func_scope)


State 143

  270 func_scope: func_invoke2 •

    $default  reduce using rule 270 (func_scope)


State 144

  269 func_scope: task_invoke •

    $default  reduce using rule 269 (func_scope)


State 145

  277 func_scope: sleep •

    $default  reduce using rule 277 (func_scope)


State 146

  275 func_scope: input •

    $default  reduce using rule 275 (func_scope)


State 147

  276 func_scope: output •

    $default  reduce using rule 276 (func_scope)


State 148

  282 func_statements: func_scope • func_statements

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 135
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    SCOPECLOSE  reduce using rule 17 (subroutine)
    $default    reduce using rule 16 (return_routine)

    return_routine        go to state 136
    subroutine            go to state 137
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 138
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 139
    loop                  go to state 140
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 141
    when_statement        go to state 116
    analyze_statement     go to state 142
    func_invoke2          go to state 143
    func_invoke           go to state 119
    task_invoke           go to state 144
    sleep                 go to state 145
    input                 go to state 146
    output                go to state 147
    func_scope            go to state 148
    func_statements       go to state 198
    access                go to state 124
    method_invoke2        go to state 150
    method_invoke         go to state 127


State 149

  266 func_body: SCOPEOPEN subroutine_openscope $@51 func_statements • $@52 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 265 ($@52)

    $@52  go to state 199


State 150

  281 func_scope: method_invoke2 •

    $default  reduce using rule 281 (func_scope)


State 151

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 • args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    NULL_ARGS   shift, and go to state 200
    ATOMIC      shift, and go to state 201
    ARRAY       shift, and go to state 202
    NNUM        shift, and go to state 203
    NDEC        shift, and go to state 204
    NBOOL       shift, and go to state 205
    NLET        shift, and go to state 206
    NTEXT       shift, and go to state 207
    ANUM        shift, and go to state 208
    ADEC        shift, and go to state 209
    ABOOL       shift, and go to state 210
    ALET        shift, and go to state 211
    ATEXT       shift, and go to state 212
    NUDATATYPE  shift, and go to state 213
    AUDATATYPE  shift, and go to state 214

    $default  reduce using rule 13 (subroutine_array)

    subroutine_array  go to state 215
    all_datatypes     go to state 216
    func_args         go to state 217
    args              go to state 218


State 152

  191 when_statement: WHEN $@17 • SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    SQUAREOPEN  shift, and go to state 219


State 153

  185 while_loop: REPEAT $@13 • SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    SQUAREOPEN  shift, and go to state 220


State 154

  180 for_loop: FOR $@8 • SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    SQUAREOPEN  shift, and go to state 221


State 155

  220 task_invoke: MAKE_PARALLEL IDENTIFIER • COLON IDENTIFIER COLON IDENTIFIER COLON $@34 task_invoke_args $@35 COLON SEMICOLON

    COLON  shift, and go to state 222


State 156

  209 analyze_statement: ANALYZE $@28 • analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    STRINGLITERAL  shift, and go to state 223
    IDENTIFIER     shift, and go to state 224

    analyze_label  go to state 225


State 157

  222 sleep: SLEEP subr_sleep • ROUNDOPEN subroutine_token FLOATLITERAL subroutine_decVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token
  223      | SLEEP subr_sleep • ROUNDOPEN subroutine_roundopen INTEGERLITERAL subroutine_intVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    ROUNDOPEN  shift, and go to state 226


State 158

  211 func_invoke: INVOKE IDENTIFIER • subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  212            | INVOKE IDENTIFIER • subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose
  324 id: IDENTIFIER • subroutine_id

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 227


State 159

  325 id: id • ARROW subroutine_arrow IDENTIFIER subroutine_id
  377 method_invoke: INVOKE id • ARROW subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen method_args COLON subroutine_roundclose

    ARROW  shift, and go to state 228


State 160

  228 input: IP $@36 • file_name COLON subroutine_rs IDENTIFIER subroutine_id nextip subroutine_fileC

    ARROW  shift, and go to state 229

    $default  reduce using rule 8 (subroutine_io)

    subroutine_io  go to state 230
    file_name      go to state 231


State 161

  236 output: OP $@37 • file_name COLON opstring SEMICOLON subroutine_token subroutine_fileC

    ARROW  shift, and go to state 229

    $default  reduce using rule 8 (subroutine_io)

    subroutine_io  go to state 230
    file_name      go to state 232


State 162

  146 LHS: IDENTIFIER subroutine_id •
  147    | IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token arr_access SQUARECLOSE subroutine_token
  323 access: IDENTIFIER subroutine_id • ARROW subroutine_arrow id

    ARROW       shift, and go to state 233
    SQUAREOPEN  shift, and go to state 234

    $default  reduce using rule 146 (LHS)


State 163

  341 start: SCOPEOPEN subroutine_openscope • $@67 start $@68 SCOPECLOSE subroutine_closescope start

    $default  reduce using rule 339 ($@67)

    $@67  go to state 235


State 164

  330 start: declaration start •

    $default  reduce using rule 330 (start)


State 165

  159 assignment_statement: LHS EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 236


State 166

   43 expression_op: INCR • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 237


State 167

   44 expression_op: DECR • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 238


State 168

   41 expression_op: ASSN_MODULO • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 239


State 169

  162 expression_statement: LHS ASSN_EXPONENT • $@6 RHS subroutine_roundclose

    $default  reduce using rule 161 ($@6)

    $@6  go to state 240


State 170

   40 expression_op: ASSN_DIV • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 241


State 171

   42 expression_op: ASSN_MUL • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 242


State 172

  160 expression_statement: LHS expression_op • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 257
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 173

  165 log: assignment_statement SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 263


State 174

  166 log: expression_statement SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 264


State 175

  331 start: log start •

    $default  reduce using rule 331 (start)


State 176

  333 start: loop start •

    $default  reduce using rule 333 (start)


State 177

  332 start: conditional start •

    $default  reduce using rule 332 (start)


State 178

  336 start: analyze_statement start •

    $default  reduce using rule 336 (start)


State 179

  334 start: func_invoke2 start •

    $default  reduce using rule 334 (start)


State 180

  210 func_invoke2: func_invoke SEMICOLON •

    $default  reduce using rule 210 (func_invoke2)


State 181

  335 start: task_invoke start •

    $default  reduce using rule 335 (start)


State 182

  342 start: sleep start •

    $default  reduce using rule 342 (start)


State 183

  338 start: input start •

    $default  reduce using rule 338 (start)


State 184

  337 start: output start •

    $default  reduce using rule 337 (start)


State 185

  329 startdec: START $@64 SCOPEOPEN subroutine_openscope start $@65 • $@66 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 328 ($@66)

    $@66  go to state 265


State 186

  343 start: method_invoke2 start •

    $default  reduce using rule 343 (start)


State 187

  374 method_invoke2: method_invoke SEMICOLON •

    $default  reduce using rule 374 (method_invoke2)


State 188

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope • $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 348 ($@71)

    $@71  go to state 266


State 189

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER $@48 COLON • $@49 args COLON $@50 func_return

    $default  reduce using rule 261 ($@49)

    $@49  go to state 267


State 190

  258 func_decl: FUNC $@43 IDENTIFIER $@44 COLON $@45 • args COLON $@46 func_return

    NULL_ARGS   shift, and go to state 200
    ATOMIC      shift, and go to state 201
    ARRAY       shift, and go to state 202
    NNUM        shift, and go to state 203
    NDEC        shift, and go to state 204
    NBOOL       shift, and go to state 205
    NLET        shift, and go to state 206
    NTEXT       shift, and go to state 207
    ANUM        shift, and go to state 208
    ADEC        shift, and go to state 209
    ABOOL       shift, and go to state 210
    ALET        shift, and go to state 211
    ATEXT       shift, and go to state 212
    NUDATATYPE  shift, and go to state 213
    AUDATATYPE  shift, and go to state 214

    $default  reduce using rule 13 (subroutine_array)

    subroutine_array  go to state 215
    all_datatypes     go to state 216
    func_args         go to state 217
    args              go to state 268


State 191

  135 simpleList: IDENTIFIER subroutine_id EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 269
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 192

  134 simpleList: simpleList COMMA subroutine_token IDENTIFIER •
  136           | simpleList COMMA subroutine_token IDENTIFIER • subroutine_id EQ subroutine_token RHS

    EQ        reduce using rule 2 (subroutine_id)
    $default  reduce using rule 134 (simpleList)

    subroutine_id  go to state 270


State 193

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    INTEGERLITERAL  shift, and go to state 271
    IDENTIFIER      shift, and go to state 272

    array_inValues  go to state 273
    dimlist         go to state 274


State 194

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 275


State 195

  280 func_scope: SCOPEOPEN subroutine_openscope • $@53 func_statements $@54 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 278 ($@53)

    $@53  go to state 276


State 196

  233 return_statement: RETURN • subroutine_token RHS SEMICOLON
  234                 | RETURN • subroutine_token NVOID SEMICOLON subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 277


State 197

  272 func_scope: return_routine return_statement •

    $default  reduce using rule 272 (func_scope)


State 198

  282 func_statements: func_scope func_statements •

    $default  reduce using rule 282 (func_statements)


State 199

  266 func_body: SCOPEOPEN subroutine_openscope $@51 func_statements $@52 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 278


State 200

  250 args: NULL_ARGS •

    $default  reduce using rule 250 (args)


State 201

   27 all_datatypes: ATOMIC • ARRAY AARRUDATATYPE

    ARRAY  shift, and go to state 279


State 202

   26 all_datatypes: ARRAY • NARRUDATATYPE

    NARRUDATATYPE  shift, and go to state 280


State 203

   30 all_datatypes: NNUM • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 281


State 204

   29 all_datatypes: NDEC • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 282


State 205

   28 all_datatypes: NBOOL • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 283


State 206

   32 all_datatypes: NLET • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 284


State 207

   31 all_datatypes: NTEXT • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 285


State 208

   37 all_datatypes: ANUM • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 286


State 209

   34 all_datatypes: ADEC • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 287


State 210

   33 all_datatypes: ABOOL • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 288


State 211

   35 all_datatypes: ALET • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 289


State 212

   36 all_datatypes: ATEXT • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 290


State 213

   24 all_datatypes: NUDATATYPE • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 291


State 214

   25 all_datatypes: AUDATATYPE • subroutine_narray

    $default  reduce using rule 14 (subroutine_narray)

    subroutine_narray  go to state 292


State 215

   38 all_datatypes: subroutine_array • nonAtomicArray
   39              | subroutine_array • atomicArray

    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18
    AARRNUM   shift, and go to state 24
    AARRDEC   shift, and go to state 25
    AARRBOOL  shift, and go to state 26
    AARRLET   shift, and go to state 27
    AARRTEXT  shift, and go to state 28

    nonAtomicArray  go to state 293
    atomicArray     go to state 294


State 216

  244 func_args: all_datatypes • $@38 IDENTIFIER $@39

    $default  reduce using rule 242 ($@38)

    $@38  go to state 295


State 217

  248 func_args: func_args • COMMA $@40 all_datatypes $@41 IDENTIFIER $@42
  249 args: func_args •

    COMMA  shift, and go to state 296

    $default  reduce using rule 249 (args)


State 218

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args • $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 287 ($@58)

    $@58  go to state 297


State 219

  191 when_statement: WHEN $@17 SQUAREOPEN • subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 298


State 220

  185 while_loop: REPEAT $@13 SQUAREOPEN • subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 299


State 221

  180 for_loop: FOR $@8 SQUAREOPEN • subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 300


State 222

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON • IDENTIFIER COLON IDENTIFIER COLON $@34 task_invoke_args $@35 COLON SEMICOLON

    IDENTIFIER  shift, and go to state 301


State 223

  202 analyze_label: STRINGLITERAL • subroutine_stringVal

    $default  reduce using rule 7 (subroutine_stringVal)

    subroutine_stringVal  go to state 302


State 224

  203 analyze_label: IDENTIFIER • subroutine_id

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 303


State 225

  209 analyze_statement: ANALYZE $@28 analyze_label • COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    COLON  shift, and go to state 304


State 226

  222 sleep: SLEEP subr_sleep ROUNDOPEN • subroutine_token FLOATLITERAL subroutine_decVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token
  223      | SLEEP subr_sleep ROUNDOPEN • subroutine_roundopen INTEGERLITERAL subroutine_intVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    INTEGERLITERAL  reduce using rule 18 (subroutine_roundopen)
    $default        reduce using rule 1 (subroutine_token)

    subroutine_token      go to state 305
    subroutine_roundopen  go to state 306


State 227

  211 func_invoke: INVOKE IDENTIFIER subroutine_id • COLON subroutine_roundopen arguments COLON subroutine_roundclose
  212            | INVOKE IDENTIFIER subroutine_id • COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose
  324 id: IDENTIFIER subroutine_id •

    COLON  shift, and go to state 307

    $default  reduce using rule 324 (id)


State 228

  325 id: id ARROW • subroutine_arrow IDENTIFIER subroutine_id
  377 method_invoke: INVOKE id ARROW • subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen method_args COLON subroutine_roundclose

    $default  reduce using rule 322 (subroutine_arrow)

    subroutine_arrow  go to state 308


State 229

  224 file_name: ARROW • subroutine_fileH STRINGLITERAL subroutine_stringVal subroutine_roundclose subroutine_fio
  225          | ARROW • subroutine_fileH IDENTIFIER subroutine_id subroutine_roundclose subroutine_fio

    $default  reduce using rule 10 (subroutine_fileH)

    subroutine_fileH  go to state 309


State 230

  226 file_name: subroutine_io • subr_init

    $default  reduce using rule 15 (subr_init)

    subr_init  go to state 310


State 231

  228 input: IP $@36 file_name • COLON subroutine_rs IDENTIFIER subroutine_id nextip subroutine_fileC

    COLON  shift, and go to state 311


State 232

  236 output: OP $@37 file_name • COLON opstring SEMICOLON subroutine_token subroutine_fileC

    COLON  shift, and go to state 312


State 233

  323 access: IDENTIFIER subroutine_id ARROW • subroutine_arrow id

    $default  reduce using rule 322 (subroutine_arrow)

    subroutine_arrow  go to state 313


State 234

  147 LHS: IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token arr_access SQUARECLOSE subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 314


State 235

  341 start: SCOPEOPEN subroutine_openscope $@67 • start $@68 SCOPECLOSE subroutine_closescope start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 315
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 236

  159 assignment_statement: LHS EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 316
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 237

   43 expression_op: INCR subroutine_token •

    $default  reduce using rule 43 (expression_op)


State 238

   44 expression_op: DECR subroutine_token •

    $default  reduce using rule 44 (expression_op)


State 239

   41 expression_op: ASSN_MODULO subroutine_token •

    $default  reduce using rule 41 (expression_op)


State 240

  162 expression_statement: LHS ASSN_EXPONENT $@6 • RHS subroutine_roundclose

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 317
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 241

   40 expression_op: ASSN_DIV subroutine_token •

    $default  reduce using rule 40 (expression_op)


State 242

   42 expression_op: ASSN_MUL subroutine_token •

    $default  reduce using rule 42 (expression_op)


State 243

   86 RHS: TID • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 318


State 244

  221 get_invoke: GET • ARROW TIME

    ARROW  shift, and go to state 319


State 245

  378 in_stmt: IN • subr_this ARROW subroutine_token IDENTIFIER subroutine_id

    $default  reduce using rule 22 (subr_this)

    subr_this  go to state 320


State 246

  211 func_invoke: INVOKE • IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  212            | INVOKE • IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose
  377 method_invoke: INVOKE • id ARROW subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen method_args COLON subroutine_roundclose
  379 in_stmt: INVOKE • IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE • IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    IN          shift, and go to state 321
    IDENTIFIER  shift, and go to state 158

    id  go to state 159


State 247

   93 RHS: NEG • $@2 ROUNDOPEN subroutine_roundopen RHS ROUNDCLOSE subroutine_roundclose

    $default  reduce using rule 92 ($@2)

    $@2  go to state 322


State 248

   77 constants: INTEGERLITERAL • subroutine_intVal

    $default  reduce using rule 3 (subroutine_intVal)

    subroutine_intVal  go to state 323


State 249

   81 constants: STRINGLITERAL • subroutine_stringVal

    $default  reduce using rule 7 (subroutine_stringVal)

    subroutine_stringVal  go to state 324


State 250

   78 constants: CHARACTERLITERAL • subroutine_charVal

    $default  reduce using rule 5 (subroutine_charVal)

    subroutine_charVal  go to state 325


State 251

   80 constants: BOOLEANLITERAL • subroutine_boolVal

    $default  reduce using rule 6 (subroutine_boolVal)

    subroutine_boolVal  go to state 326


State 252

   79 constants: FLOATLITERAL • subroutine_decVal

    $default  reduce using rule 4 (subroutine_decVal)

    subroutine_decVal  go to state 327


State 253

   70 T: IDENTIFIER • subroutine_id E
  323 access: IDENTIFIER • subroutine_id ARROW subroutine_arrow id

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 328


State 254

   90 RHS: ROUNDOPEN • subroutine_roundopen RHS all_ops next ROUNDCLOSE subroutine_roundclose
   91    | ROUNDOPEN • subroutine_roundopen RHS ROUNDCLOSE subroutine_roundclose

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 329


State 255

   85 RHS: T •

    $default  reduce using rule 85 (RHS)


State 256

   84 RHS: constants •

    $default  reduce using rule 84 (RHS)


State 257

  160 expression_statement: LHS expression_op RHS •

    $default  reduce using rule 160 (expression_statement)


State 258

   71 T: func_invoke •

    $default  reduce using rule 71 (T)


State 259

   87 RHS: get_invoke •

    $default  reduce using rule 87 (RHS)


State 260

   72 T: access •

    $default  reduce using rule 72 (T)


State 261

   88 RHS: method_invoke •

    $default  reduce using rule 88 (RHS)


State 262

   89 RHS: in_stmt •

    $default  reduce using rule 89 (RHS)


State 263

  165 log: assignment_statement SEMICOLON subroutine_token •

    $default  reduce using rule 165 (log)


State 264

  166 log: expression_statement SEMICOLON subroutine_token •

    $default  reduce using rule 166 (log)


State 265

  329 startdec: START $@64 SCOPEOPEN subroutine_openscope start $@65 $@66 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 330


State 266

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 • subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 345 (subr_public)

    subr_public  go to state 331


State 267

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER $@48 COLON $@49 • args COLON $@50 func_return

    NULL_ARGS   shift, and go to state 200
    ATOMIC      shift, and go to state 201
    ARRAY       shift, and go to state 202
    NNUM        shift, and go to state 203
    NDEC        shift, and go to state 204
    NBOOL       shift, and go to state 205
    NLET        shift, and go to state 206
    NTEXT       shift, and go to state 207
    ANUM        shift, and go to state 208
    ADEC        shift, and go to state 209
    ABOOL       shift, and go to state 210
    ALET        shift, and go to state 211
    ATEXT       shift, and go to state 212
    NUDATATYPE  shift, and go to state 213
    AUDATATYPE  shift, and go to state 214

    $default  reduce using rule 13 (subroutine_array)

    subroutine_array  go to state 215
    all_datatypes     go to state 216
    func_args         go to state 217
    args              go to state 332


State 268

  258 func_decl: FUNC $@43 IDENTIFIER $@44 COLON $@45 args • COLON $@46 func_return

    COLON  shift, and go to state 333


State 269

  135 simpleList: IDENTIFIER subroutine_id EQ subroutine_token RHS •

    $default  reduce using rule 135 (simpleList)


State 270

  136 simpleList: simpleList COMMA subroutine_token IDENTIFIER subroutine_id • EQ subroutine_token RHS

    EQ  shift, and go to state 334


State 271

  141 array_inValues: INTEGERLITERAL •

    $default  reduce using rule 141 (array_inValues)


State 272

  142 array_inValues: IDENTIFIER •

    $default  reduce using rule 142 (array_inValues)


State 273

  145 dimlist: array_inValues •

    $default  reduce using rule 145 (dimlist)


State 274

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token EQ subroutine_token RHS
  144 dimlist: dimlist • COMMA $@5 array_inValues

    COMMA        shift, and go to state 335
    SQUARECLOSE  shift, and go to state 336


State 275

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    SQUAREOPEN  shift, and go to state 337


State 276

  280 func_scope: SCOPEOPEN subroutine_openscope $@53 • func_statements $@54 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 135
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    SCOPECLOSE  reduce using rule 17 (subroutine)
    $default    reduce using rule 16 (return_routine)

    return_routine        go to state 136
    subroutine            go to state 137
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 138
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 139
    loop                  go to state 140
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 141
    when_statement        go to state 116
    analyze_statement     go to state 142
    func_invoke2          go to state 143
    func_invoke           go to state 119
    task_invoke           go to state 144
    sleep                 go to state 145
    input                 go to state 146
    output                go to state 147
    func_scope            go to state 148
    func_statements       go to state 338
    access                go to state 124
    method_invoke2        go to state 150
    method_invoke         go to state 127


State 277

  233 return_statement: RETURN subroutine_token • RHS SEMICOLON
  234                 | RETURN subroutine_token • NVOID SEMICOLON subroutine_token

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254
    NVOID             shift, and go to state 339

    T              go to state 255
    constants      go to state 256
    RHS            go to state 340
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 278

  266 func_body: SCOPEOPEN subroutine_openscope $@51 func_statements $@52 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 341


State 279

   27 all_datatypes: ATOMIC ARRAY • AARRUDATATYPE

    AARRUDATATYPE  shift, and go to state 342


State 280

   26 all_datatypes: ARRAY NARRUDATATYPE •

    $default  reduce using rule 26 (all_datatypes)


State 281

   30 all_datatypes: NNUM subroutine_narray •

    $default  reduce using rule 30 (all_datatypes)


State 282

   29 all_datatypes: NDEC subroutine_narray •

    $default  reduce using rule 29 (all_datatypes)


State 283

   28 all_datatypes: NBOOL subroutine_narray •

    $default  reduce using rule 28 (all_datatypes)


State 284

   32 all_datatypes: NLET subroutine_narray •

    $default  reduce using rule 32 (all_datatypes)


State 285

   31 all_datatypes: NTEXT subroutine_narray •

    $default  reduce using rule 31 (all_datatypes)


State 286

   37 all_datatypes: ANUM subroutine_narray •

    $default  reduce using rule 37 (all_datatypes)


State 287

   34 all_datatypes: ADEC subroutine_narray •

    $default  reduce using rule 34 (all_datatypes)


State 288

   33 all_datatypes: ABOOL subroutine_narray •

    $default  reduce using rule 33 (all_datatypes)


State 289

   35 all_datatypes: ALET subroutine_narray •

    $default  reduce using rule 35 (all_datatypes)


State 290

   36 all_datatypes: ATEXT subroutine_narray •

    $default  reduce using rule 36 (all_datatypes)


State 291

   24 all_datatypes: NUDATATYPE subroutine_narray •

    $default  reduce using rule 24 (all_datatypes)


State 292

   25 all_datatypes: AUDATATYPE subroutine_narray •

    $default  reduce using rule 25 (all_datatypes)


State 293

   38 all_datatypes: subroutine_array nonAtomicArray •

    $default  reduce using rule 38 (all_datatypes)


State 294

   39 all_datatypes: subroutine_array atomicArray •

    $default  reduce using rule 39 (all_datatypes)


State 295

  244 func_args: all_datatypes $@38 • IDENTIFIER $@39

    IDENTIFIER  shift, and go to state 343


State 296

  248 func_args: func_args COMMA • $@40 all_datatypes $@41 IDENTIFIER $@42

    $default  reduce using rule 245 ($@40)

    $@40  go to state 344


State 297

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args $@58 • SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    SCOPEOPEN  shift, and go to state 345


State 298

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen • RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 346
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 299

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen • RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 347
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 300

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen • both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    ATOMIC      shift, and go to state 348
    IDENTIFIER  shift, and go to state 349
    ROUNDOPEN   shift, and go to state 350
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    NUDATATYPE  shift, and go to state 29

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    simpleDatatype        go to state 351
    LHS                   go to state 352
    assignment_statement  go to state 353
    both_assignment       go to state 354
    access                go to state 124


State 301

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER • COLON IDENTIFIER COLON $@34 task_invoke_args $@35 COLON SEMICOLON

    COLON  shift, and go to state 355


State 302

  202 analyze_label: STRINGLITERAL subroutine_stringVal •

    $default  reduce using rule 202 (analyze_label)


State 303

  203 analyze_label: IDENTIFIER subroutine_id •

    $default  reduce using rule 203 (analyze_label)


State 304

  209 analyze_statement: ANALYZE $@28 analyze_label COLON • $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    $default  reduce using rule 205 ($@29)

    $@29  go to state 356


State 305

  222 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_token • FLOATLITERAL subroutine_decVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    FLOATLITERAL  shift, and go to state 357


State 306

  223 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_roundopen • INTEGERLITERAL subroutine_intVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    INTEGERLITERAL  shift, and go to state 358


State 307

  211 func_invoke: INVOKE IDENTIFIER subroutine_id COLON • subroutine_roundopen arguments COLON subroutine_roundclose
  212            | INVOKE IDENTIFIER subroutine_id COLON • subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 359


State 308

  325 id: id ARROW subroutine_arrow • IDENTIFIER subroutine_id
  377 method_invoke: INVOKE id ARROW subroutine_arrow • IDENTIFIER subroutine_id COLON subroutine_roundopen method_args COLON subroutine_roundclose

    IDENTIFIER  shift, and go to state 360


State 309

  224 file_name: ARROW subroutine_fileH • STRINGLITERAL subroutine_stringVal subroutine_roundclose subroutine_fio
  225          | ARROW subroutine_fileH • IDENTIFIER subroutine_id subroutine_roundclose subroutine_fio

    STRINGLITERAL  shift, and go to state 361
    IDENTIFIER     shift, and go to state 362


State 310

  226 file_name: subroutine_io subr_init •

    $default  reduce using rule 226 (file_name)


State 311

  228 input: IP $@36 file_name COLON • subroutine_rs IDENTIFIER subroutine_id nextip subroutine_fileC

    $default  reduce using rule 9 (subroutine_rs)

    subroutine_rs  go to state 363


State 312

  236 output: OP $@37 file_name COLON • opstring SEMICOLON subroutine_token subroutine_fileC

    $default  reduce using rule 9 (subroutine_rs)

    subroutine_rs  go to state 364
    opstring       go to state 365


State 313

  323 access: IDENTIFIER subroutine_id ARROW subroutine_arrow • id

    IDENTIFIER  shift, and go to state 366

    id  go to state 367


State 314

  147 LHS: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • arr_access SQUARECLOSE subroutine_token

    INTEGERLITERAL  shift, and go to state 368
    FLOATLITERAL    shift, and go to state 369
    IDENTIFIER      shift, and go to state 370
    ROUNDOPEN       shift, and go to state 371

    arr_access     go to state 372
    exprlist       go to state 373
    arith_operand  go to state 374
    arith_expr     go to state 375


State 315

  341 start: SCOPEOPEN subroutine_openscope $@67 start • $@68 SCOPECLOSE subroutine_closescope start

    $default  reduce using rule 340 ($@68)

    $@68  go to state 376


State 316

  159 assignment_statement: LHS EQ subroutine_token RHS •

    $default  reduce using rule 159 (assignment_statement)


State 317

  162 expression_statement: LHS ASSN_EXPONENT $@6 RHS • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 377


State 318

   86 RHS: TID subroutine_token •

    $default  reduce using rule 86 (RHS)


State 319

  221 get_invoke: GET ARROW • TIME

    TIME  shift, and go to state 378


State 320

  378 in_stmt: IN subr_this • ARROW subroutine_token IDENTIFIER subroutine_id

    ARROW  shift, and go to state 379


State 321

  379 in_stmt: INVOKE IN • subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE IN • subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    $default  reduce using rule 22 (subr_this)

    subr_this  go to state 380


State 322

   93 RHS: NEG $@2 • ROUNDOPEN subroutine_roundopen RHS ROUNDCLOSE subroutine_roundclose

    ROUNDOPEN  shift, and go to state 381


State 323

   77 constants: INTEGERLITERAL subroutine_intVal •

    $default  reduce using rule 77 (constants)


State 324

   81 constants: STRINGLITERAL subroutine_stringVal •

    $default  reduce using rule 81 (constants)


State 325

   78 constants: CHARACTERLITERAL subroutine_charVal •

    $default  reduce using rule 78 (constants)


State 326

   80 constants: BOOLEANLITERAL subroutine_boolVal •

    $default  reduce using rule 80 (constants)


State 327

   79 constants: FLOATLITERAL subroutine_decVal •

    $default  reduce using rule 79 (constants)


State 328

   70 T: IDENTIFIER subroutine_id • E
  323 access: IDENTIFIER subroutine_id • ARROW subroutine_arrow id

    ARROW       shift, and go to state 233
    SQUAREOPEN  shift, and go to state 382

    $default  reduce using rule 17 (subroutine)

    subroutine  go to state 383
    E           go to state 384


State 329

   90 RHS: ROUNDOPEN subroutine_roundopen • RHS all_ops next ROUNDCLOSE subroutine_roundclose
   91    | ROUNDOPEN subroutine_roundopen • RHS ROUNDCLOSE subroutine_roundclose

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 385
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 330

  329 startdec: START $@64 SCOPEOPEN subroutine_openscope start $@65 $@66 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 386


State 331

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public • type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope

    ATOMIC      shift, and go to state 387
    ARRAY       shift, and go to state 388
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine         go to state 389
    nonAtomicSimple    go to state 31
    atomicSimple       go to state 32
    nonAtomicArray     go to state 33
    atomicArray        go to state 34
    simpleDatatype     go to state 390
    arrayDatatype      go to state 391
    type_scope         go to state 392
    declaration_t      go to state 393
    declarationStmt_t  go to state 394


State 332

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER $@48 COLON $@49 args • COLON $@50 func_return

    COLON  shift, and go to state 395


State 333

  258 func_decl: FUNC $@43 IDENTIFIER $@44 COLON $@45 args COLON • $@46 func_return

    $default  reduce using rule 257 ($@46)

    $@46  go to state 396


State 334

  136 simpleList: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 397


State 335

  144 dimlist: dimlist COMMA • $@5 array_inValues

    $default  reduce using rule 143 ($@5)

    $@5  go to state 398


State 336

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 399


State 337

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 400


State 338

  280 func_scope: SCOPEOPEN subroutine_openscope $@53 func_statements • $@54 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 279 ($@54)

    $@54  go to state 401


State 339

  234 return_statement: RETURN subroutine_token NVOID • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 402


State 340

  233 return_statement: RETURN subroutine_token RHS • SEMICOLON

    SEMICOLON  shift, and go to state 403


State 341

  266 func_body: SCOPEOPEN subroutine_openscope $@51 func_statements $@52 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 266 (func_body)


State 342

   27 all_datatypes: ATOMIC ARRAY AARRUDATATYPE •

    $default  reduce using rule 27 (all_datatypes)


State 343

  244 func_args: all_datatypes $@38 IDENTIFIER • $@39

    $default  reduce using rule 243 ($@39)

    $@39  go to state 404


State 344

  248 func_args: func_args COMMA $@40 • all_datatypes $@41 IDENTIFIER $@42

    ATOMIC      shift, and go to state 201
    ARRAY       shift, and go to state 202
    NNUM        shift, and go to state 203
    NDEC        shift, and go to state 204
    NBOOL       shift, and go to state 205
    NLET        shift, and go to state 206
    NTEXT       shift, and go to state 207
    ANUM        shift, and go to state 208
    ADEC        shift, and go to state 209
    ABOOL       shift, and go to state 210
    ALET        shift, and go to state 211
    ATEXT       shift, and go to state 212
    NUDATATYPE  shift, and go to state 213
    AUDATATYPE  shift, and go to state 214

    $default  reduce using rule 13 (subroutine_array)

    subroutine_array  go to state 215
    all_datatypes     go to state 405


State 345

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN • subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 406


State 346

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS • SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    SQUARECLOSE  shift, and go to state 407


State 347

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS • SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    SQUARECLOSE  shift, and go to state 408


State 348

  124 simpleDatatype: ATOMIC • AUDATATYPE

    AUDATATYPE  shift, and go to state 52


State 349

  146 LHS: IDENTIFIER • subroutine_id
  147    | IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token arr_access SQUARECLOSE subroutine_token
  323 access: IDENTIFIER • subroutine_id ARROW subroutine_arrow id

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 162


State 350

  170 both_assignment: ROUNDOPEN • subroutine_token assignment_statement ROUNDCLOSE subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 409


State 351

  172 both_assignment: simpleDatatype • $@7 g

    $default  reduce using rule 171 ($@7)

    $@7  go to state 410


State 352

  159 assignment_statement: LHS • EQ subroutine_token RHS

    EQ  shift, and go to state 165


State 353

  169 both_assignment: assignment_statement •

    $default  reduce using rule 169 (both_assignment)


State 354

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment • PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    PIPE  shift, and go to state 411


State 355

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON • IDENTIFIER COLON $@34 task_invoke_args $@35 COLON SEMICOLON

    IDENTIFIER  shift, and go to state 412


State 356

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 • analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    STRINGLITERAL  shift, and go to state 223
    IDENTIFIER     shift, and go to state 224

    analyze_label  go to state 413


State 357

  222 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_token FLOATLITERAL • subroutine_decVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    $default  reduce using rule 4 (subroutine_decVal)

    subroutine_decVal  go to state 414


State 358

  223 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_roundopen INTEGERLITERAL • subroutine_intVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    $default  reduce using rule 3 (subroutine_intVal)

    subroutine_intVal  go to state 415


State 359

  211 func_invoke: INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen • arguments COLON subroutine_roundclose
  212            | INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen • NULL_ARGS COLON subroutine_roundclose

    NULL_ARGS         shift, and go to state 416
    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 417
    func_invoke    go to state 258
    arguments      go to state 418
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 360

  325 id: id ARROW subroutine_arrow IDENTIFIER • subroutine_id
  377 method_invoke: INVOKE id ARROW subroutine_arrow IDENTIFIER • subroutine_id COLON subroutine_roundopen method_args COLON subroutine_roundclose

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 419


State 361

  224 file_name: ARROW subroutine_fileH STRINGLITERAL • subroutine_stringVal subroutine_roundclose subroutine_fio

    $default  reduce using rule 7 (subroutine_stringVal)

    subroutine_stringVal  go to state 420


State 362

  225 file_name: ARROW subroutine_fileH IDENTIFIER • subroutine_id subroutine_roundclose subroutine_fio

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 421


State 363

  228 input: IP $@36 file_name COLON subroutine_rs • IDENTIFIER subroutine_id nextip subroutine_fileC

    IDENTIFIER  shift, and go to state 422


State 364

  237 opstring: subroutine_rs • stringvalues nextop

    STRINGLITERAL  shift, and go to state 423
    IDENTIFIER     shift, and go to state 424

    stringvalues  go to state 425


State 365

  236 output: OP $@37 file_name COLON opstring • SEMICOLON subroutine_token subroutine_fileC

    SEMICOLON  shift, and go to state 426


State 366

  324 id: IDENTIFIER • subroutine_id

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 427


State 367

  323 access: IDENTIFIER subroutine_id ARROW subroutine_arrow id •
  325 id: id • ARROW subroutine_arrow IDENTIFIER subroutine_id

    ARROW  shift, and go to state 428

    $default  reduce using rule 323 (access)


State 368

  154 arith_operand: INTEGERLITERAL •

    $default  reduce using rule 154 (arith_operand)


State 369

  155 arith_operand: FLOATLITERAL •

    $default  reduce using rule 155 (arith_operand)


State 370

  153 arith_operand: IDENTIFIER •

    $default  reduce using rule 153 (arith_operand)


State 371

  156 arith_operand: ROUNDOPEN • subroutine_token arith_expr ROUNDCLOSE subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 429


State 372

  147 LHS: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token arr_access • SQUARECLOSE subroutine_token

    SQUARECLOSE  shift, and go to state 430


State 373

  149 arr_access: exprlist •
  152 exprlist: exprlist • COMMA subroutine_dim arith_expr

    COMMA  shift, and go to state 431

    $default  reduce using rule 149 (arr_access)


State 374

  158 arith_expr: arith_operand •

    $default  reduce using rule 158 (arith_expr)


State 375

  151 exprlist: arith_expr •
  157 arith_expr: arith_expr • arithmetic_op arith_operand

    DIV       shift, and go to state 432
    ADD       shift, and go to state 433
    SUB       shift, and go to state 434
    MUL       shift, and go to state 435
    EXPONENT  shift, and go to state 436
    MODULO    shift, and go to state 437

    $default  reduce using rule 151 (exprlist)

    arithmetic_op  go to state 438


State 376

  341 start: SCOPEOPEN subroutine_openscope $@67 start $@68 • SCOPECLOSE subroutine_closescope start

    SCOPECLOSE  shift, and go to state 439


State 377

  162 expression_statement: LHS ASSN_EXPONENT $@6 RHS subroutine_roundclose •

    $default  reduce using rule 162 (expression_statement)


State 378

  221 get_invoke: GET ARROW TIME •

    $default  reduce using rule 221 (get_invoke)


State 379

  378 in_stmt: IN subr_this ARROW • subroutine_token IDENTIFIER subroutine_id

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 440


State 380

  379 in_stmt: INVOKE IN subr_this • ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE IN subr_this • ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    ARROW  shift, and go to state 441


State 381

   93 RHS: NEG $@2 ROUNDOPEN • subroutine_roundopen RHS ROUNDCLOSE subroutine_roundclose

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 442


State 382

   69 E: SQUAREOPEN • $@1 arr_access SQUARECLOSE

    $default  reduce using rule 68 ($@1)

    $@1  go to state 443


State 383

   67 E: subroutine •

    $default  reduce using rule 67 (E)


State 384

   70 T: IDENTIFIER subroutine_id E •

    $default  reduce using rule 70 (T)


State 385

   90 RHS: ROUNDOPEN subroutine_roundopen RHS • all_ops next ROUNDCLOSE subroutine_roundclose
   91    | ROUNDOPEN subroutine_roundopen RHS • ROUNDCLOSE subroutine_roundclose

    DIV         shift, and go to state 432
    ADD         shift, and go to state 433
    SUB         shift, and go to state 434
    MUL         shift, and go to state 435
    EXPONENT    shift, and go to state 436
    MODULO      shift, and go to state 437
    AND         shift, and go to state 444
    OR          shift, and go to state 445
    GT          shift, and go to state 446
    LT          shift, and go to state 447
    GTEQ        shift, and go to state 448
    LTEQ        shift, and go to state 449
    NOT_EQ      shift, and go to state 450
    EQUAL_TWO   shift, and go to state 451
    ROUNDCLOSE  shift, and go to state 452
    HASH        shift, and go to state 453

    comparison_op  go to state 454
    arithmetic_op  go to state 455
    logical_op     go to state 456
    all_ops        go to state 457


State 386

  329 startdec: START $@64 SCOPEOPEN subroutine_openscope start $@65 $@66 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 329 (startdec)


State 387

  124 simpleDatatype: ATOMIC • AUDATATYPE
  128 arrayDatatype: ATOMIC • ARRAY AARRUDATATYPE

    ARRAY       shift, and go to state 458
    AUDATATYPE  shift, and go to state 52


State 388

  127 arrayDatatype: ARRAY • NARRUDATATYPE

    NARRUDATATYPE  shift, and go to state 54


State 389

  353 type_scope: subroutine •

    $default  reduce using rule 353 (type_scope)


State 390

  355 declarationStmt_t: simpleDatatype • simpleList_t

    IDENTIFIER  shift, and go to state 459

    simpleList    go to state 460
    simpleList_t  go to state 461


State 391

  356 declarationStmt_t: arrayDatatype • arrayList_t

    IDENTIFIER  shift, and go to state 462

    arrayList    go to state 463
    arrayList_t  go to state 464


State 392

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope • methods $@72 $@73 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 17 (subroutine)

    subroutine  go to state 465
    methods     go to state 466


State 393

  352 type_scope: declaration_t • type_scope

    ATOMIC      shift, and go to state 387
    ARRAY       shift, and go to state 388
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine         go to state 389
    nonAtomicSimple    go to state 31
    atomicSimple       go to state 32
    nonAtomicArray     go to state 33
    atomicArray        go to state 34
    simpleDatatype     go to state 390
    arrayDatatype      go to state 391
    type_scope         go to state 467
    declaration_t      go to state 393
    declarationStmt_t  go to state 394


State 394

  354 declaration_t: declarationStmt_t • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 468


State 395

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER $@48 COLON $@49 args COLON • $@50 func_return

    $default  reduce using rule 262 ($@50)

    $@50  go to state 469


State 396

  258 func_decl: FUNC $@43 IDENTIFIER $@44 COLON $@45 args COLON $@46 • func_return

    IDENTIFIER  shift, and go to state 470
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    NUDATATYPE  shift, and go to state 471

    nonAtomic_datatypes  go to state 472
    nonAtomicSimple      go to state 473
    nonAtomicArray       go to state 474
    func_return          go to state 475


State 397

  136 simpleList: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 476
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 398

  144 dimlist: dimlist COMMA $@5 • array_inValues

    INTEGERLITERAL  shift, and go to state 271
    IDENTIFIER      shift, and go to state 272

    array_inValues  go to state 477


State 399

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token •
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token • EQ subroutine_token RHS

    EQ  shift, and go to state 478

    $default  reduce using rule 137 (arrayList)


State 400

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    INTEGERLITERAL  shift, and go to state 271
    IDENTIFIER      shift, and go to state 272

    array_inValues  go to state 273
    dimlist         go to state 479


State 401

  280 func_scope: SCOPEOPEN subroutine_openscope $@53 func_statements $@54 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 480


State 402

  234 return_statement: RETURN subroutine_token NVOID SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 481


State 403

  233 return_statement: RETURN subroutine_token RHS SEMICOLON •

    $default  reduce using rule 233 (return_statement)


State 404

  244 func_args: all_datatypes $@38 IDENTIFIER $@39 •

    $default  reduce using rule 244 (func_args)


State 405

  248 func_args: func_args COMMA $@40 all_datatypes • $@41 IDENTIFIER $@42

    $default  reduce using rule 246 ($@41)

    $@41  go to state 482


State 406

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope • taskscope $@59 SCOPECLOSE subroutine_closescope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 492
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 407

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE • subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 494


State 408

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE • subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 495


State 409

  170 both_assignment: ROUNDOPEN subroutine_token • assignment_statement ROUNDCLOSE subroutine_token

    IDENTIFIER  shift, and go to state 349

    LHS                   go to state 352
    assignment_statement  go to state 496
    access                go to state 124


State 410

  172 both_assignment: simpleDatatype $@7 • g

    IDENTIFIER  shift, and go to state 497

    g  go to state 498


State 411

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE • $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 176 ($@9)

    $@9  go to state 499


State 412

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER • COLON $@34 task_invoke_args $@35 COLON SEMICOLON

    COLON  shift, and go to state 500


State 413

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label • COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    COLON  shift, and go to state 501


State 414

  222 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_token FLOATLITERAL subroutine_decVal • ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    ROUNDCLOSE  shift, and go to state 502


State 415

  223 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_roundopen INTEGERLITERAL subroutine_intVal • ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token

    ROUNDCLOSE  shift, and go to state 503


State 416

  212 func_invoke: INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS • COLON subroutine_roundclose

    COLON  shift, and go to state 504


State 417

  214 arguments: RHS •

    $default  reduce using rule 214 (arguments)


State 418

  211 func_invoke: INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen arguments • COLON subroutine_roundclose
  213 arguments: arguments • COMMA subroutine_token RHS

    COMMA  shift, and go to state 505
    COLON  shift, and go to state 506


State 419

  325 id: id ARROW subroutine_arrow IDENTIFIER subroutine_id •
  377 method_invoke: INVOKE id ARROW subroutine_arrow IDENTIFIER subroutine_id • COLON subroutine_roundopen method_args COLON subroutine_roundclose

    COLON  shift, and go to state 507

    $default  reduce using rule 325 (id)


State 420

  224 file_name: ARROW subroutine_fileH STRINGLITERAL subroutine_stringVal • subroutine_roundclose subroutine_fio

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 508


State 421

  225 file_name: ARROW subroutine_fileH IDENTIFIER subroutine_id • subroutine_roundclose subroutine_fio

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 509


State 422

  228 input: IP $@36 file_name COLON subroutine_rs IDENTIFIER • subroutine_id nextip subroutine_fileC

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 510


State 423

  231 stringvalues: STRINGLITERAL • subroutine_stringVal

    $default  reduce using rule 7 (subroutine_stringVal)

    subroutine_stringVal  go to state 511


State 424

  232 stringvalues: IDENTIFIER • subroutine_id

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 512


State 425

  237 opstring: subroutine_rs stringvalues • nextop

    HASH  shift, and go to state 513

    $default  reduce using rule 17 (subroutine)

    subroutine  go to state 514
    nextop      go to state 515


State 426

  236 output: OP $@37 file_name COLON opstring SEMICOLON • subroutine_token subroutine_fileC

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 516


State 427

  324 id: IDENTIFIER subroutine_id •

    $default  reduce using rule 324 (id)


State 428

  325 id: id ARROW • subroutine_arrow IDENTIFIER subroutine_id

    $default  reduce using rule 322 (subroutine_arrow)

    subroutine_arrow  go to state 517


State 429

  156 arith_operand: ROUNDOPEN subroutine_token • arith_expr ROUNDCLOSE subroutine_token

    INTEGERLITERAL  shift, and go to state 368
    FLOATLITERAL    shift, and go to state 369
    IDENTIFIER      shift, and go to state 370
    ROUNDOPEN       shift, and go to state 371

    arith_operand  go to state 374
    arith_expr     go to state 518


State 430

  147 LHS: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token arr_access SQUARECLOSE • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 519


State 431

  152 exprlist: exprlist COMMA • subroutine_dim arith_expr

    $default  reduce using rule 150 (subroutine_dim)

    subroutine_dim  go to state 520


State 432

   54 arithmetic_op: DIV • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 521


State 433

   51 arithmetic_op: ADD • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 522


State 434

   52 arithmetic_op: SUB • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 523


State 435

   53 arithmetic_op: MUL • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 524


State 436

   56 arithmetic_op: EXPONENT •

    $default  reduce using rule 56 (arithmetic_op)


State 437

   55 arithmetic_op: MODULO • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 525


State 438

  157 arith_expr: arith_expr arithmetic_op • arith_operand

    INTEGERLITERAL  shift, and go to state 368
    FLOATLITERAL    shift, and go to state 369
    IDENTIFIER      shift, and go to state 370
    ROUNDOPEN       shift, and go to state 371

    arith_operand  go to state 526


State 439

  341 start: SCOPEOPEN subroutine_openscope $@67 start $@68 SCOPECLOSE • subroutine_closescope start

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 527


State 440

  378 in_stmt: IN subr_this ARROW subroutine_token • IDENTIFIER subroutine_id

    IDENTIFIER  shift, and go to state 528


State 441

  379 in_stmt: INVOKE IN subr_this ARROW • subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE IN subr_this ARROW • subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 529


State 442

   93 RHS: NEG $@2 ROUNDOPEN subroutine_roundopen • RHS ROUNDCLOSE subroutine_roundclose

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 530
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 443

   69 E: SQUAREOPEN $@1 • arr_access SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 368
    FLOATLITERAL    shift, and go to state 369
    IDENTIFIER      shift, and go to state 370
    ROUNDOPEN       shift, and go to state 371

    arr_access     go to state 531
    exprlist       go to state 373
    arith_operand  go to state 374
    arith_expr     go to state 375


State 444

   57 logical_op: AND • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 532


State 445

   58 logical_op: OR • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 533


State 446

   46 comparison_op: GT • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 534


State 447

   45 comparison_op: LT • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 535


State 448

   47 comparison_op: GTEQ • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 536


State 449

   48 comparison_op: LTEQ • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 537


State 450

   49 comparison_op: NOT_EQ • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 538


State 451

   50 comparison_op: EQUAL_TWO • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 539


State 452

   91 RHS: ROUNDOPEN subroutine_roundopen RHS ROUNDCLOSE • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 540


State 453

   76 all_ops: HASH •

    $default  reduce using rule 76 (all_ops)


State 454

   74 all_ops: comparison_op •

    $default  reduce using rule 74 (all_ops)


State 455

   73 all_ops: arithmetic_op •

    $default  reduce using rule 73 (all_ops)


State 456

   75 all_ops: logical_op •

    $default  reduce using rule 75 (all_ops)


State 457

   90 RHS: ROUNDOPEN subroutine_roundopen RHS all_ops • next ROUNDCLOSE subroutine_roundclose

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    next           go to state 541
    RHS            go to state 542
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 458

  128 arrayDatatype: ATOMIC ARRAY • AARRUDATATYPE

    AARRUDATATYPE  shift, and go to state 73


State 459

  133 simpleList: IDENTIFIER • subroutine_id
  135           | IDENTIFIER • subroutine_id EQ subroutine_token RHS
  357 simpleList_t: IDENTIFIER • subroutine_id
  359             | IDENTIFIER • subroutine_id EQ subroutine_token RHS

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 543


State 460

  134 simpleList: simpleList • COMMA subroutine_token IDENTIFIER
  136           | simpleList • COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS
  358 simpleList_t: simpleList • COMMA subroutine_token IDENTIFIER subroutine_id
  360             | simpleList • COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS

    COMMA  shift, and go to state 544


State 461

  355 declarationStmt_t: simpleDatatype simpleList_t •

    $default  reduce using rule 355 (declarationStmt_t)


State 462

  137 arrayList: IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  361 arrayList_t: IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  363            | IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 545


State 463

  138 arrayList: arrayList • COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList • COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  362 arrayList_t: arrayList • COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  364            | arrayList • COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    COMMA  shift, and go to state 546


State 464

  356 declarationStmt_t: arrayDatatype arrayList_t •

    $default  reduce using rule 356 (declarationStmt_t)


State 465

  366 methods: subroutine •

    $default  reduce using rule 366 (methods)


State 466

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods • $@72 $@73 SCOPECLOSE subroutine_closescope
  365 methods: methods • method

    FUNC  shift, and go to state 547

    $default  reduce using rule 349 ($@72)

    $@72         go to state 548
    method       go to state 549
    func_decl_m  go to state 550


State 467

  352 type_scope: declaration_t type_scope •

    $default  reduce using rule 352 (type_scope)


State 468

  354 declaration_t: declarationStmt_t SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 551


State 469

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER $@48 COLON $@49 args COLON $@50 • func_return

    IDENTIFIER  shift, and go to state 470
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    NUDATATYPE  shift, and go to state 471

    nonAtomic_datatypes  go to state 472
    nonAtomicSimple      go to state 473
    nonAtomicArray       go to state 474
    func_return          go to state 552


State 470

  253 func_return: IDENTIFIER •

    $default  reduce using rule 253 (func_return)


State 471

  252 func_return: NUDATATYPE •

    $default  reduce using rule 252 (func_return)


State 472

  251 func_return: nonAtomic_datatypes •

    $default  reduce using rule 251 (func_return)


State 473

   60 nonAtomic_datatypes: nonAtomicSimple •

    $default  reduce using rule 60 (nonAtomic_datatypes)


State 474

   59 nonAtomic_datatypes: nonAtomicArray •

    $default  reduce using rule 59 (nonAtomic_datatypes)


State 475

  258 func_decl: FUNC $@43 IDENTIFIER $@44 COLON $@45 args COLON $@46 func_return •

    $default  reduce using rule 258 (func_decl)


State 476

  136 simpleList: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS •

    $default  reduce using rule 136 (simpleList)


State 477

  144 dimlist: dimlist COMMA $@5 array_inValues •

    $default  reduce using rule 144 (dimlist)


State 478

  139 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 553


State 479

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token EQ subroutine_token RHS
  144 dimlist: dimlist • COMMA $@5 array_inValues

    COMMA        shift, and go to state 335
    SQUARECLOSE  shift, and go to state 554


State 480

  280 func_scope: SCOPEOPEN subroutine_openscope $@53 func_statements $@54 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 555


State 481

  234 return_statement: RETURN subroutine_token NVOID SEMICOLON subroutine_token •

    $default  reduce using rule 234 (return_statement)


State 482

  248 func_args: func_args COMMA $@40 all_datatypes $@41 • IDENTIFIER $@42

    IDENTIFIER  shift, and go to state 556


State 483

  298 taskscope: SCOPEOPEN • subroutine_openscope $@60 taskscope $@61 SCOPECLOSE subroutine_closescope taskscope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 557


State 484

  301 taskscope: subroutine •

    $default  reduce using rule 301 (taskscope)


State 485

  290 taskscope: declaration • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 558
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 486

  291 taskscope: log • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 559
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 487

  293 taskscope: loop • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 560
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 488

  292 taskscope: conditional • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 561
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 489

  294 taskscope: func_invoke2 • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 562
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 490

  299 taskscope: sleep • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 563
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 491

  295 taskscope: output • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 564
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 492

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope • $@59 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 288 ($@59)

    $@59  go to state 565


State 493

  300 taskscope: method_invoke2 • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 566
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 494

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose • $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 188 ($@18)

    $@18  go to state 567


State 495

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose • $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 182 ($@14)

    $@14  go to state 568


State 496

  170 both_assignment: ROUNDOPEN subroutine_token assignment_statement • ROUNDCLOSE subroutine_token

    ROUNDCLOSE  shift, and go to state 569


State 497

  167 g: IDENTIFIER • subroutine_id EQ subroutine_token RHS

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 570


State 498

  168 g: g • COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS
  172 both_assignment: simpleDatatype $@7 g •

    COMMA  shift, and go to state 571

    $default  reduce using rule 172 (both_assignment)


State 499

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 • RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 572
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 500

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER COLON • $@34 task_invoke_args $@35 COLON SEMICOLON

    $default  reduce using rule 218 ($@34)

    $@34  go to state 573


State 501

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON • $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    $default  reduce using rule 206 ($@30)

    $@30  go to state 574


State 502

  222 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_token FLOATLITERAL subroutine_decVal ROUNDCLOSE • subroutine_roundclose SEMICOLON subroutine_token

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 575


State 503

  223 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_roundopen INTEGERLITERAL subroutine_intVal ROUNDCLOSE • subroutine_roundclose SEMICOLON subroutine_token

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 576


State 504

  212 func_invoke: INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 577


State 505

  213 arguments: arguments COMMA • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 578


State 506

  211 func_invoke: INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 579


State 507

  377 method_invoke: INVOKE id ARROW subroutine_arrow IDENTIFIER subroutine_id COLON • subroutine_roundopen method_args COLON subroutine_roundclose

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 580


State 508

  224 file_name: ARROW subroutine_fileH STRINGLITERAL subroutine_stringVal subroutine_roundclose • subroutine_fio

    $default  reduce using rule 11 (subroutine_fio)

    subroutine_fio  go to state 581


State 509

  225 file_name: ARROW subroutine_fileH IDENTIFIER subroutine_id subroutine_roundclose • subroutine_fio

    $default  reduce using rule 11 (subroutine_fio)

    subroutine_fio  go to state 582


State 510

  228 input: IP $@36 file_name COLON subroutine_rs IDENTIFIER subroutine_id • nextip subroutine_fileC

    COMMA      shift, and go to state 583
    SEMICOLON  shift, and go to state 584

    nextip  go to state 585


State 511

  231 stringvalues: STRINGLITERAL subroutine_stringVal •

    $default  reduce using rule 231 (stringvalues)


State 512

  232 stringvalues: IDENTIFIER subroutine_id •

    $default  reduce using rule 232 (stringvalues)


State 513

  238 nextop: HASH • subroutine_rs stringvalues nextop

    $default  reduce using rule 9 (subroutine_rs)

    subroutine_rs  go to state 586


State 514

  239 nextop: subroutine •

    $default  reduce using rule 239 (nextop)


State 515

  237 opstring: subroutine_rs stringvalues nextop •

    $default  reduce using rule 237 (opstring)


State 516

  236 output: OP $@37 file_name COLON opstring SEMICOLON subroutine_token • subroutine_fileC

    $default  reduce using rule 12 (subroutine_fileC)

    subroutine_fileC  go to state 587


State 517

  325 id: id ARROW subroutine_arrow • IDENTIFIER subroutine_id

    IDENTIFIER  shift, and go to state 588


State 518

  156 arith_operand: ROUNDOPEN subroutine_token arith_expr • ROUNDCLOSE subroutine_token
  157 arith_expr: arith_expr • arithmetic_op arith_operand

    DIV         shift, and go to state 432
    ADD         shift, and go to state 433
    SUB         shift, and go to state 434
    MUL         shift, and go to state 435
    EXPONENT    shift, and go to state 436
    MODULO      shift, and go to state 437
    ROUNDCLOSE  shift, and go to state 589

    arithmetic_op  go to state 438


State 519

  147 LHS: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token arr_access SQUARECLOSE subroutine_token •

    $default  reduce using rule 147 (LHS)


State 520

  152 exprlist: exprlist COMMA subroutine_dim • arith_expr

    INTEGERLITERAL  shift, and go to state 368
    FLOATLITERAL    shift, and go to state 369
    IDENTIFIER      shift, and go to state 370
    ROUNDOPEN       shift, and go to state 371

    arith_operand  go to state 374
    arith_expr     go to state 590


State 521

   54 arithmetic_op: DIV subroutine_token •

    $default  reduce using rule 54 (arithmetic_op)


State 522

   51 arithmetic_op: ADD subroutine_token •

    $default  reduce using rule 51 (arithmetic_op)


State 523

   52 arithmetic_op: SUB subroutine_token •

    $default  reduce using rule 52 (arithmetic_op)


State 524

   53 arithmetic_op: MUL subroutine_token •

    $default  reduce using rule 53 (arithmetic_op)


State 525

   55 arithmetic_op: MODULO subroutine_token •

    $default  reduce using rule 55 (arithmetic_op)


State 526

  157 arith_expr: arith_expr arithmetic_op arith_operand •

    $default  reduce using rule 157 (arith_expr)


State 527

  341 start: SCOPEOPEN subroutine_openscope $@67 start $@68 SCOPECLOSE subroutine_closescope • start

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 101
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 105
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 106
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 107
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 111
    loop                  go to state 112
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 115
    when_statement        go to state 116
    analyze_statement     go to state 117
    func_invoke2          go to state 118
    func_invoke           go to state 119
    task_invoke           go to state 120
    sleep                 go to state 121
    input                 go to state 122
    output                go to state 123
    access                go to state 124
    start                 go to state 591
    method_invoke2        go to state 126
    method_invoke         go to state 127


State 528

  378 in_stmt: IN subr_this ARROW subroutine_token IDENTIFIER • subroutine_id

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 592


State 529

  379 in_stmt: INVOKE IN subr_this ARROW subroutine_token • IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE IN subr_this ARROW subroutine_token • IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    IDENTIFIER  shift, and go to state 593


State 530

   93 RHS: NEG $@2 ROUNDOPEN subroutine_roundopen RHS • ROUNDCLOSE subroutine_roundclose

    ROUNDCLOSE  shift, and go to state 594


State 531

   69 E: SQUAREOPEN $@1 arr_access • SQUARECLOSE

    SQUARECLOSE  shift, and go to state 595


State 532

   57 logical_op: AND subroutine_token •

    $default  reduce using rule 57 (logical_op)


State 533

   58 logical_op: OR subroutine_token •

    $default  reduce using rule 58 (logical_op)


State 534

   46 comparison_op: GT subroutine_token •

    $default  reduce using rule 46 (comparison_op)


State 535

   45 comparison_op: LT subroutine_token •

    $default  reduce using rule 45 (comparison_op)


State 536

   47 comparison_op: GTEQ subroutine_token •

    $default  reduce using rule 47 (comparison_op)


State 537

   48 comparison_op: LTEQ subroutine_token •

    $default  reduce using rule 48 (comparison_op)


State 538

   49 comparison_op: NOT_EQ subroutine_token •

    $default  reduce using rule 49 (comparison_op)


State 539

   50 comparison_op: EQUAL_TWO subroutine_token •

    $default  reduce using rule 50 (comparison_op)


State 540

   91 RHS: ROUNDOPEN subroutine_roundopen RHS ROUNDCLOSE subroutine_roundclose •

    $default  reduce using rule 91 (RHS)


State 541

   90 RHS: ROUNDOPEN subroutine_roundopen RHS all_ops next • ROUNDCLOSE subroutine_roundclose

    ROUNDCLOSE  shift, and go to state 596


State 542

   82 next: RHS • all_ops next
   83     | RHS •

    DIV        shift, and go to state 432
    ADD        shift, and go to state 433
    SUB        shift, and go to state 434
    MUL        shift, and go to state 435
    EXPONENT   shift, and go to state 436
    MODULO     shift, and go to state 437
    AND        shift, and go to state 444
    OR         shift, and go to state 445
    GT         shift, and go to state 446
    LT         shift, and go to state 447
    GTEQ       shift, and go to state 448
    LTEQ       shift, and go to state 449
    NOT_EQ     shift, and go to state 450
    EQUAL_TWO  shift, and go to state 451
    HASH       shift, and go to state 453

    $default  reduce using rule 83 (next)

    comparison_op  go to state 454
    arithmetic_op  go to state 455
    logical_op     go to state 456
    all_ops        go to state 597


State 543

  133 simpleList: IDENTIFIER subroutine_id •
  135           | IDENTIFIER subroutine_id • EQ subroutine_token RHS
  357 simpleList_t: IDENTIFIER subroutine_id •
  359             | IDENTIFIER subroutine_id • EQ subroutine_token RHS

    EQ  shift, and go to state 598

    SEMICOLON  reduce using rule 357 (simpleList_t)
    $default   reduce using rule 133 (simpleList)


State 544

  134 simpleList: simpleList COMMA • subroutine_token IDENTIFIER
  136           | simpleList COMMA • subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS
  358 simpleList_t: simpleList COMMA • subroutine_token IDENTIFIER subroutine_id
  360             | simpleList COMMA • subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 599


State 545

  137 arrayList: IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  361 arrayList_t: IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  363            | IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    SQUAREOPEN  shift, and go to state 600


State 546

  138 arrayList: arrayList COMMA • subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA • subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  362 arrayList_t: arrayList COMMA • subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  364            | arrayList COMMA • subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 601


State 547

  373 func_decl_m: FUNC • $@75 IDENTIFIER $@76 COLON $@77 args COLON $@78 func_return

    $default  reduce using rule 369 ($@75)

    $@75  go to state 602


State 548

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 • $@73 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 350 ($@73)

    $@73  go to state 603


State 549

  365 methods: methods method •

    $default  reduce using rule 365 (methods)


State 550

  368 method: func_decl_m • SCOPEOPEN subroutine_openscope method_body $@74 SCOPECLOSE subroutine_closescope

    SCOPEOPEN  shift, and go to state 604


State 551

  354 declaration_t: declarationStmt_t SEMICOLON subroutine_token •

    $default  reduce using rule 354 (declaration_t)


State 552

  263 atomic_func_decl: ATOMIC FUNC $@47 IDENTIFIER $@48 COLON $@49 args COLON $@50 func_return •

    $default  reduce using rule 263 (atomic_func_decl)


State 553

  139 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 605
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 554

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 606


State 555

  280 func_scope: SCOPEOPEN subroutine_openscope $@53 func_statements $@54 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 280 (func_scope)


State 556

  248 func_args: func_args COMMA $@40 all_datatypes $@41 IDENTIFIER • $@42

    $default  reduce using rule 247 ($@42)

    $@42  go to state 607


State 557

  298 taskscope: SCOPEOPEN subroutine_openscope • $@60 taskscope $@61 SCOPECLOSE subroutine_closescope taskscope

    $default  reduce using rule 296 ($@60)

    $@60  go to state 608


State 558

  290 taskscope: declaration taskscope •

    $default  reduce using rule 290 (taskscope)


State 559

  291 taskscope: log taskscope •

    $default  reduce using rule 291 (taskscope)


State 560

  293 taskscope: loop taskscope •

    $default  reduce using rule 293 (taskscope)


State 561

  292 taskscope: conditional taskscope •

    $default  reduce using rule 292 (taskscope)


State 562

  294 taskscope: func_invoke2 taskscope •

    $default  reduce using rule 294 (taskscope)


State 563

  299 taskscope: sleep taskscope •

    $default  reduce using rule 299 (taskscope)


State 564

  295 taskscope: output taskscope •

    $default  reduce using rule 295 (taskscope)


State 565

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 609


State 566

  300 taskscope: method_invoke2 taskscope •

    $default  reduce using rule 300 (taskscope)


State 567

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 • SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    SCOPEOPEN  shift, and go to state 610


State 568

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 • SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    SCOPEOPEN  shift, and go to state 611


State 569

  170 both_assignment: ROUNDOPEN subroutine_token assignment_statement ROUNDCLOSE • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 612


State 570

  167 g: IDENTIFIER subroutine_id • EQ subroutine_token RHS

    EQ  shift, and go to state 613


State 571

  168 g: g COMMA • subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 614


State 572

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS • PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    PIPE  shift, and go to state 615


State 573

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER COLON $@34 • task_invoke_args $@35 COLON SEMICOLON

    NULL_ARGS  shift, and go to state 616

    $default  reduce using rule 215 ($@33)

    task_invoke_args  go to state 617
    $@33              go to state 618


State 574

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 • IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    IDENTIFIER  shift, and go to state 619


State 575

  222 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_token FLOATLITERAL subroutine_decVal ROUNDCLOSE subroutine_roundclose • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 620


State 576

  223 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_roundopen INTEGERLITERAL subroutine_intVal ROUNDCLOSE subroutine_roundclose • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 621


State 577

  212 func_invoke: INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose •

    $default  reduce using rule 212 (func_invoke)


State 578

  213 arguments: arguments COMMA subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 622
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 579

  211 func_invoke: INVOKE IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose •

    $default  reduce using rule 211 (func_invoke)


State 580

  377 method_invoke: INVOKE id ARROW subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen • method_args COLON subroutine_roundclose

    NULL_ARGS         shift, and go to state 623
    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 417
    func_invoke    go to state 258
    arguments      go to state 624
    get_invoke     go to state 259
    access         go to state 260
    method_args    go to state 625
    method_invoke  go to state 261
    in_stmt        go to state 262


State 581

  224 file_name: ARROW subroutine_fileH STRINGLITERAL subroutine_stringVal subroutine_roundclose subroutine_fio •

    $default  reduce using rule 224 (file_name)


State 582

  225 file_name: ARROW subroutine_fileH IDENTIFIER subroutine_id subroutine_roundclose subroutine_fio •

    $default  reduce using rule 225 (file_name)


State 583

  229 nextip: COMMA • subroutine_rs IDENTIFIER subroutine_id nextip

    $default  reduce using rule 9 (subroutine_rs)

    subroutine_rs  go to state 626


State 584

  230 nextip: SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 627


State 585

  228 input: IP $@36 file_name COLON subroutine_rs IDENTIFIER subroutine_id nextip • subroutine_fileC

    $default  reduce using rule 12 (subroutine_fileC)

    subroutine_fileC  go to state 628


State 586

  238 nextop: HASH subroutine_rs • stringvalues nextop

    STRINGLITERAL  shift, and go to state 423
    IDENTIFIER     shift, and go to state 424

    stringvalues  go to state 629


State 587

  236 output: OP $@37 file_name COLON opstring SEMICOLON subroutine_token subroutine_fileC •

    $default  reduce using rule 236 (output)


State 588

  325 id: id ARROW subroutine_arrow IDENTIFIER • subroutine_id

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 630


State 589

  156 arith_operand: ROUNDOPEN subroutine_token arith_expr ROUNDCLOSE • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 631


State 590

  152 exprlist: exprlist COMMA subroutine_dim arith_expr •
  157 arith_expr: arith_expr • arithmetic_op arith_operand

    DIV       shift, and go to state 432
    ADD       shift, and go to state 433
    SUB       shift, and go to state 434
    MUL       shift, and go to state 435
    EXPONENT  shift, and go to state 436
    MODULO    shift, and go to state 437

    $default  reduce using rule 152 (exprlist)

    arithmetic_op  go to state 438


State 591

  341 start: SCOPEOPEN subroutine_openscope $@67 start $@68 SCOPECLOSE subroutine_closescope start •

    $default  reduce using rule 341 (start)


State 592

  378 in_stmt: IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id •

    $default  reduce using rule 378 (in_stmt)


State 593

  379 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER • subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE IN subr_this ARROW subroutine_token IDENTIFIER • subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 632


State 594

   93 RHS: NEG $@2 ROUNDOPEN subroutine_roundopen RHS ROUNDCLOSE • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 633


State 595

   69 E: SQUAREOPEN $@1 arr_access SQUARECLOSE •

    $default  reduce using rule 69 (E)


State 596

   90 RHS: ROUNDOPEN subroutine_roundopen RHS all_ops next ROUNDCLOSE • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 634


State 597

   82 next: RHS all_ops • next

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    next           go to state 635
    RHS            go to state 542
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 598

  135 simpleList: IDENTIFIER subroutine_id EQ • subroutine_token RHS
  359 simpleList_t: IDENTIFIER subroutine_id EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 636


State 599

  134 simpleList: simpleList COMMA subroutine_token • IDENTIFIER
  136           | simpleList COMMA subroutine_token • IDENTIFIER subroutine_id EQ subroutine_token RHS
  358 simpleList_t: simpleList COMMA subroutine_token • IDENTIFIER subroutine_id
  360             | simpleList COMMA subroutine_token • IDENTIFIER subroutine_id EQ subroutine_token RHS

    IDENTIFIER  shift, and go to state 637


State 600

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  361 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token
  363            | IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 638


State 601

  138 arrayList: arrayList COMMA subroutine_token • IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token • IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  362 arrayList_t: arrayList COMMA subroutine_token • IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  364            | arrayList COMMA subroutine_token • IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    IDENTIFIER  shift, and go to state 639


State 602

  373 func_decl_m: FUNC $@75 • IDENTIFIER $@76 COLON $@77 args COLON $@78 func_return

    IDENTIFIER  shift, and go to state 640


State 603

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 641


State 604

  368 method: func_decl_m SCOPEOPEN • subroutine_openscope method_body $@74 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 642


State 605

  139 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS •

    $default  reduce using rule 139 (arrayList)


State 606

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token •
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token • EQ subroutine_token RHS

    EQ  shift, and go to state 643

    $default  reduce using rule 138 (arrayList)


State 607

  248 func_args: func_args COMMA $@40 all_datatypes $@41 IDENTIFIER $@42 •

    $default  reduce using rule 248 (func_args)


State 608

  298 taskscope: SCOPEOPEN subroutine_openscope $@60 • taskscope $@61 SCOPECLOSE subroutine_closescope taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 644
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 609

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 645


State 610

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN • subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 646


State 611

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN • subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 647


State 612

  170 both_assignment: ROUNDOPEN subroutine_token assignment_statement ROUNDCLOSE subroutine_token •

    $default  reduce using rule 170 (both_assignment)


State 613

  167 g: IDENTIFIER subroutine_id EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 648


State 614

  168 g: g COMMA subroutine_token • IDENTIFIER subroutine_id EQ subroutine_token RHS

    IDENTIFIER  shift, and go to state 649


State 615

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE • $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 177 ($@10)

    $@10  go to state 650


State 616

  217 task_invoke_args: NULL_ARGS •

    $default  reduce using rule 217 (task_invoke_args)


State 617

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER COLON $@34 task_invoke_args • $@35 COLON SEMICOLON

    $default  reduce using rule 219 ($@35)

    $@35  go to state 651


State 618

  216 task_invoke_args: $@33 • arguments

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 417
    func_invoke    go to state 258
    arguments      go to state 652
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 619

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER • subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 653


State 620

  222 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_token FLOATLITERAL subroutine_decVal ROUNDCLOSE subroutine_roundclose SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 654


State 621

  223 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_roundopen INTEGERLITERAL subroutine_intVal ROUNDCLOSE subroutine_roundclose SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 655


State 622

  213 arguments: arguments COMMA subroutine_token RHS •

    $default  reduce using rule 213 (arguments)


State 623

  376 method_args: NULL_ARGS •

    $default  reduce using rule 376 (method_args)


State 624

  213 arguments: arguments • COMMA subroutine_token RHS
  375 method_args: arguments •

    COMMA  shift, and go to state 505

    $default  reduce using rule 375 (method_args)


State 625

  377 method_invoke: INVOKE id ARROW subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen method_args • COLON subroutine_roundclose

    COLON  shift, and go to state 656


State 626

  229 nextip: COMMA subroutine_rs • IDENTIFIER subroutine_id nextip

    IDENTIFIER  shift, and go to state 657


State 627

  230 nextip: SEMICOLON subroutine_token •

    $default  reduce using rule 230 (nextip)


State 628

  228 input: IP $@36 file_name COLON subroutine_rs IDENTIFIER subroutine_id nextip subroutine_fileC •

    $default  reduce using rule 228 (input)


State 629

  238 nextop: HASH subroutine_rs stringvalues • nextop

    HASH  shift, and go to state 513

    $default  reduce using rule 17 (subroutine)

    subroutine  go to state 514
    nextop      go to state 658


State 630

  325 id: id ARROW subroutine_arrow IDENTIFIER subroutine_id •

    $default  reduce using rule 325 (id)


State 631

  156 arith_operand: ROUNDOPEN subroutine_token arith_expr ROUNDCLOSE subroutine_token •

    $default  reduce using rule 156 (arith_operand)


State 632

  379 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id • COLON subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id • COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    COLON  shift, and go to state 659


State 633

   93 RHS: NEG $@2 ROUNDOPEN subroutine_roundopen RHS ROUNDCLOSE subroutine_roundclose •

    $default  reduce using rule 93 (RHS)


State 634

   90 RHS: ROUNDOPEN subroutine_roundopen RHS all_ops next ROUNDCLOSE subroutine_roundclose •

    $default  reduce using rule 90 (RHS)


State 635

   82 next: RHS all_ops next •

    $default  reduce using rule 82 (next)


State 636

  135 simpleList: IDENTIFIER subroutine_id EQ subroutine_token • RHS
  359 simpleList_t: IDENTIFIER subroutine_id EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 660
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 637

  134 simpleList: simpleList COMMA subroutine_token IDENTIFIER •
  136           | simpleList COMMA subroutine_token IDENTIFIER • subroutine_id EQ subroutine_token RHS
  358 simpleList_t: simpleList COMMA subroutine_token IDENTIFIER • subroutine_id
  360             | simpleList COMMA subroutine_token IDENTIFIER • subroutine_id EQ subroutine_token RHS

    COMMA     reduce using rule 134 (simpleList)
    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 661


State 638

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  361 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token
  363            | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    INTEGERLITERAL  shift, and go to state 271
    IDENTIFIER      shift, and go to state 272

    array_inValues  go to state 273
    dimlist         go to state 662


State 639

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  362 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  364            | arrayList COMMA subroutine_token IDENTIFIER • subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 663


State 640

  373 func_decl_m: FUNC $@75 IDENTIFIER • $@76 COLON $@77 args COLON $@78 func_return

    $default  reduce using rule 370 ($@76)

    $@76  go to state 664


State 641

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 665


State 642

  368 method: func_decl_m SCOPEOPEN subroutine_openscope • method_body $@74 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 666
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 667
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 668
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 669
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 670
    loop                  go to state 671
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 672
    when_statement        go to state 116
    analyze_statement     go to state 673
    func_invoke2          go to state 674
    func_invoke           go to state 119
    task_invoke           go to state 675
    sleep                 go to state 676
    input                 go to state 677
    output                go to state 678
    access                go to state 124
    method_invoke2        go to state 679
    method_invoke         go to state 127
    in_stmt               go to state 680
    method_statements     go to state 681
    return_statement_m    go to state 682
    method_body           go to state 683


State 643

  140 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 684


State 644

  298 taskscope: SCOPEOPEN subroutine_openscope $@60 taskscope • $@61 SCOPECLOSE subroutine_closescope taskscope

    $default  reduce using rule 297 ($@61)

    $@61  go to state 685


State 645

  289 task: TASK $@55 IDENTIFIER $@56 COLON $@57 args $@58 SCOPEOPEN subroutine_openscope taskscope $@59 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 289 (task)


State 646

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope • $@19 statements $@20 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 189 ($@19)

    $@19  go to state 686


State 647

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope • $@15 statements $@16 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 183 ($@15)

    $@15  go to state 687


State 648

  167 g: IDENTIFIER subroutine_id EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 688
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 649

  168 g: g COMMA subroutine_token IDENTIFIER • subroutine_id EQ subroutine_token RHS

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 689


State 650

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 • exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    IDENTIFIER  shift, and go to state 349
    ROUNDOPEN   shift, and go to state 690

    LHS                   go to state 691
    expression_statement  go to state 692
    exprrr                go to state 693
    access                go to state 124


State 651

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER COLON $@34 task_invoke_args $@35 • COLON SEMICOLON

    COLON  shift, and go to state 694


State 652

  213 arguments: arguments • COMMA subroutine_token RHS
  216 task_invoke_args: $@33 arguments •

    COMMA  shift, and go to state 505

    $default  reduce using rule 216 (task_invoke_args)


State 653

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id • COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    COLON  shift, and go to state 695


State 654

  222 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_token FLOATLITERAL subroutine_decVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token •

    $default  reduce using rule 222 (sleep)


State 655

  223 sleep: SLEEP subr_sleep ROUNDOPEN subroutine_roundopen INTEGERLITERAL subroutine_intVal ROUNDCLOSE subroutine_roundclose SEMICOLON subroutine_token •

    $default  reduce using rule 223 (sleep)


State 656

  377 method_invoke: INVOKE id ARROW subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen method_args COLON • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 696


State 657

  229 nextip: COMMA subroutine_rs IDENTIFIER • subroutine_id nextip

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 697


State 658

  238 nextop: HASH subroutine_rs stringvalues nextop •

    $default  reduce using rule 238 (nextop)


State 659

  379 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON • subroutine_roundopen arguments COLON subroutine_roundclose
  380        | INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON • subroutine_roundopen NULL_ARGS COLON subroutine_roundclose

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 698


State 660

  135 simpleList: IDENTIFIER subroutine_id EQ subroutine_token RHS •
  359 simpleList_t: IDENTIFIER subroutine_id EQ subroutine_token RHS •

    SEMICOLON  reduce using rule 359 (simpleList_t)
    $default   reduce using rule 135 (simpleList)


State 661

  136 simpleList: simpleList COMMA subroutine_token IDENTIFIER subroutine_id • EQ subroutine_token RHS
  358 simpleList_t: simpleList COMMA subroutine_token IDENTIFIER subroutine_id •
  360             | simpleList COMMA subroutine_token IDENTIFIER subroutine_id • EQ subroutine_token RHS

    EQ  shift, and go to state 699

    $default  reduce using rule 358 (simpleList_t)


State 662

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token EQ subroutine_token RHS
  144 dimlist: dimlist • COMMA $@5 array_inValues
  361 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token
  363            | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token EQ subroutine_token RHS

    COMMA        shift, and go to state 335
    SQUARECLOSE  shift, and go to state 700


State 663

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  362 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token
  364            | arrayList COMMA subroutine_token IDENTIFIER subroutine_id • SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    SQUAREOPEN  shift, and go to state 701


State 664

  373 func_decl_m: FUNC $@75 IDENTIFIER $@76 • COLON $@77 args COLON $@78 func_return

    COLON  shift, and go to state 702


State 665

  351 type_declaration: TYPE $@69 TYPENAME $@70 SCOPEOPEN subroutine_openscope $@71 subr_public type_scope methods $@72 $@73 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 351 (type_declaration)


State 666

  397 return_statement_m: RETURN • subroutine_token RHS SEMICOLON subroutine_token
  398                   | RETURN • subroutine_token NVOID SEMICOLON subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 703


State 667

  395 method_statements: SCOPEOPEN • subroutine_openscope $@79 method_statements $@80 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 704


State 668

  400 method_body: subroutine •

    $default  reduce using rule 400 (method_body)


State 669

  381 method_statements: declaration •

    $default  reduce using rule 381 (method_statements)


State 670

  382 method_statements: log •

    $default  reduce using rule 382 (method_statements)


State 671

  385 method_statements: loop •

    $default  reduce using rule 385 (method_statements)


State 672

  387 method_statements: conditional •

    $default  reduce using rule 387 (method_statements)


State 673

  389 method_statements: analyze_statement •

    $default  reduce using rule 389 (method_statements)


State 674

  384 method_statements: func_invoke2 •

    $default  reduce using rule 384 (method_statements)


State 675

  383 method_statements: task_invoke •

    $default  reduce using rule 383 (method_statements)


State 676

  392 method_statements: sleep •

    $default  reduce using rule 392 (method_statements)


State 677

  390 method_statements: input •

    $default  reduce using rule 390 (method_statements)


State 678

  391 method_statements: output •

    $default  reduce using rule 391 (method_statements)


State 679

  396 method_statements: method_invoke2 •

    $default  reduce using rule 396 (method_statements)


State 680

  388 method_statements: in_stmt • EQ subroutine_token RHS SEMICOLON subroutine_token

    EQ  shift, and go to state 705


State 681

  399 method_body: method_statements • method_body

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 666
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 667
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 668
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 669
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 670
    loop                  go to state 671
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 672
    when_statement        go to state 116
    analyze_statement     go to state 673
    func_invoke2          go to state 674
    func_invoke           go to state 119
    task_invoke           go to state 675
    sleep                 go to state 676
    input                 go to state 677
    output                go to state 678
    access                go to state 124
    method_invoke2        go to state 679
    method_invoke         go to state 127
    in_stmt               go to state 680
    method_statements     go to state 681
    return_statement_m    go to state 682
    method_body           go to state 706


State 682

  386 method_statements: return_statement_m •

    $default  reduce using rule 386 (method_statements)


State 683

  368 method: func_decl_m SCOPEOPEN subroutine_openscope method_body • $@74 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 367 ($@74)

    $@74  go to state 707


State 684

  140 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 708
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 685

  298 taskscope: SCOPEOPEN subroutine_openscope $@60 taskscope $@61 • SCOPECLOSE subroutine_closescope taskscope

    SCOPECLOSE  shift, and go to state 709


State 686

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 • statements $@20 SCOPECLOSE subroutine_closescope extend

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    BREAK          shift, and go to state 710
    CONTINUE       shift, and go to state 711
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 196
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 712
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 713
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 714
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 715
    loop                  go to state 716
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 717
    when_statement        go to state 116
    analyze_statement     go to state 718
    func_invoke2          go to state 719
    func_invoke           go to state 119
    task_invoke           go to state 720
    sleep                 go to state 721
    input                 go to state 722
    return_statement      go to state 723
    output                go to state 724
    statement             go to state 725
    statements            go to state 726
    access                go to state 124
    method_invoke2        go to state 727
    method_invoke         go to state 127
    in_stmt               go to state 728


State 687

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 • statements $@16 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    BREAK          shift, and go to state 710
    CONTINUE       shift, and go to state 711
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 196
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 712
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 713
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 714
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 715
    loop                  go to state 716
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 717
    when_statement        go to state 116
    analyze_statement     go to state 718
    func_invoke2          go to state 719
    func_invoke           go to state 119
    task_invoke           go to state 720
    sleep                 go to state 721
    input                 go to state 722
    return_statement      go to state 723
    output                go to state 724
    statement             go to state 725
    statements            go to state 729
    access                go to state 124
    method_invoke2        go to state 727
    method_invoke         go to state 127
    in_stmt               go to state 728


State 688

  167 g: IDENTIFIER subroutine_id EQ subroutine_token RHS •

    $default  reduce using rule 167 (g)


State 689

  168 g: g COMMA subroutine_token IDENTIFIER subroutine_id • EQ subroutine_token RHS

    EQ  shift, and go to state 730


State 690

  164 exprrr: ROUNDOPEN • subroutine_token expression_statement ROUNDCLOSE subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 731


State 691

  160 expression_statement: LHS • expression_op RHS
  162                     | LHS • ASSN_EXPONENT $@6 RHS subroutine_roundclose

    INCR           shift, and go to state 166
    DECR           shift, and go to state 167
    ASSN_MODULO    shift, and go to state 168
    ASSN_EXPONENT  shift, and go to state 169
    ASSN_DIV       shift, and go to state 170
    ASSN_MUL       shift, and go to state 171

    expression_op  go to state 172


State 692

  163 exprrr: expression_statement •

    $default  reduce using rule 163 (exprrr)


State 693

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr • SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    SQUARECLOSE  shift, and go to state 732


State 694

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER COLON $@34 task_invoke_args $@35 COLON • SEMICOLON

    SEMICOLON  shift, and go to state 733


State 695

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON • $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    $default  reduce using rule 207 ($@31)

    $@31  go to state 734


State 696

  377 method_invoke: INVOKE id ARROW subroutine_arrow IDENTIFIER subroutine_id COLON subroutine_roundopen method_args COLON subroutine_roundclose •

    $default  reduce using rule 377 (method_invoke)


State 697

  229 nextip: COMMA subroutine_rs IDENTIFIER subroutine_id • nextip

    COMMA      shift, and go to state 583
    SEMICOLON  shift, and go to state 584

    nextip  go to state 735


State 698

  379 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen • arguments COLON subroutine_roundclose
  380        | INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen • NULL_ARGS COLON subroutine_roundclose

    NULL_ARGS         shift, and go to state 736
    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 417
    func_invoke    go to state 258
    arguments      go to state 737
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 699

  136 simpleList: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ • subroutine_token RHS
  360 simpleList_t: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 738


State 700

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token EQ subroutine_token RHS
  361 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token
  363            | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 739


State 701

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  362 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token
  364            | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN • subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 740


State 702

  373 func_decl_m: FUNC $@75 IDENTIFIER $@76 COLON • $@77 args COLON $@78 func_return

    $default  reduce using rule 371 ($@77)

    $@77  go to state 741


State 703

  397 return_statement_m: RETURN subroutine_token • RHS SEMICOLON subroutine_token
  398                   | RETURN subroutine_token • NVOID SEMICOLON subroutine_token

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254
    NVOID             shift, and go to state 742

    T              go to state 255
    constants      go to state 256
    RHS            go to state 743
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 704

  395 method_statements: SCOPEOPEN subroutine_openscope • $@79 method_statements $@80 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 393 ($@79)

    $@79  go to state 744


State 705

  388 method_statements: in_stmt EQ • subroutine_token RHS SEMICOLON subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 745


State 706

  399 method_body: method_statements method_body •

    $default  reduce using rule 399 (method_body)


State 707

  368 method: func_decl_m SCOPEOPEN subroutine_openscope method_body $@74 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 746


State 708

  140 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS •

    $default  reduce using rule 140 (arrayList)


State 709

  298 taskscope: SCOPEOPEN subroutine_openscope $@60 taskscope $@61 SCOPECLOSE • subroutine_closescope taskscope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 747


State 710

  316 statement: BREAK • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 748


State 711

  317 statement: CONTINUE • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 749


State 712

  313 statement: SCOPEOPEN • subroutine_openscope $@62 statements $@63 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 750


State 713

  321 statements: subroutine •

    $default  reduce using rule 321 (statements)


State 714

  302 statement: declaration •

    $default  reduce using rule 302 (statement)


State 715

  303 statement: log •

    $default  reduce using rule 303 (statement)


State 716

  306 statement: loop •

    $default  reduce using rule 306 (statement)


State 717

  304 statement: conditional •

    $default  reduce using rule 304 (statement)


State 718

  310 statement: analyze_statement •

    $default  reduce using rule 310 (statement)


State 719

  308 statement: func_invoke2 •

    $default  reduce using rule 308 (statement)


State 720

  309 statement: task_invoke •

    $default  reduce using rule 309 (statement)


State 721

  315 statement: sleep •

    $default  reduce using rule 315 (statement)


State 722

  318 statement: input •

    $default  reduce using rule 318 (statement)


State 723

  307 statement: return_statement •

    $default  reduce using rule 307 (statement)


State 724

  314 statement: output •

    $default  reduce using rule 314 (statement)


State 725

  320 statements: statement • statements

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    BREAK          shift, and go to state 710
    CONTINUE       shift, and go to state 711
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 196
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 712
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 713
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 714
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 715
    loop                  go to state 716
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 717
    when_statement        go to state 116
    analyze_statement     go to state 718
    func_invoke2          go to state 719
    func_invoke           go to state 119
    task_invoke           go to state 720
    sleep                 go to state 721
    input                 go to state 722
    return_statement      go to state 723
    output                go to state 724
    statement             go to state 725
    statements            go to state 751
    access                go to state 124
    method_invoke2        go to state 727
    method_invoke         go to state 127
    in_stmt               go to state 728


State 726

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements • $@20 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 190 ($@20)

    $@20  go to state 752


State 727

  319 statement: method_invoke2 •

    $default  reduce using rule 319 (statement)


State 728

  305 statement: in_stmt • EQ subroutine_token RHS SEMICOLON subroutine_token

    EQ  shift, and go to state 753


State 729

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements • $@16 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 184 ($@16)

    $@16  go to state 754


State 730

  168 g: g COMMA subroutine_token IDENTIFIER subroutine_id EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 755


State 731

  164 exprrr: ROUNDOPEN subroutine_token • expression_statement ROUNDCLOSE subroutine_token

    IDENTIFIER  shift, and go to state 349

    LHS                   go to state 691
    expression_statement  go to state 756
    access                go to state 124


State 732

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE • subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 757


State 733

  220 task_invoke: MAKE_PARALLEL IDENTIFIER COLON IDENTIFIER COLON IDENTIFIER COLON $@34 task_invoke_args $@35 COLON SEMICOLON •

    $default  reduce using rule 220 (task_invoke)


State 734

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 • IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    IDENTIFIER  shift, and go to state 758


State 735

  229 nextip: COMMA subroutine_rs IDENTIFIER subroutine_id nextip •

    $default  reduce using rule 229 (nextip)


State 736

  380 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS • COLON subroutine_roundclose

    COLON  shift, and go to state 759


State 737

  213 arguments: arguments • COMMA subroutine_token RHS
  379 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen arguments • COLON subroutine_roundclose

    COMMA  shift, and go to state 505
    COLON  shift, and go to state 760


State 738

  136 simpleList: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token • RHS
  360 simpleList_t: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 761
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 739

  137 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token •
  139          | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token • EQ subroutine_token RHS
  361 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token •
  363            | IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token • EQ subroutine_token RHS

    EQ  shift, and go to state 762

    SEMICOLON  reduce using rule 361 (arrayList_t)
    $default   reduce using rule 137 (arrayList)


State 740

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS
  362 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token
  364            | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token • dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS

    INTEGERLITERAL  shift, and go to state 271
    IDENTIFIER      shift, and go to state 272

    array_inValues  go to state 273
    dimlist         go to state 763


State 741

  373 func_decl_m: FUNC $@75 IDENTIFIER $@76 COLON $@77 • args COLON $@78 func_return

    NULL_ARGS   shift, and go to state 200
    ATOMIC      shift, and go to state 201
    ARRAY       shift, and go to state 202
    NNUM        shift, and go to state 203
    NDEC        shift, and go to state 204
    NBOOL       shift, and go to state 205
    NLET        shift, and go to state 206
    NTEXT       shift, and go to state 207
    ANUM        shift, and go to state 208
    ADEC        shift, and go to state 209
    ABOOL       shift, and go to state 210
    ALET        shift, and go to state 211
    ATEXT       shift, and go to state 212
    NUDATATYPE  shift, and go to state 213
    AUDATATYPE  shift, and go to state 214

    $default  reduce using rule 13 (subroutine_array)

    subroutine_array  go to state 215
    all_datatypes     go to state 216
    func_args         go to state 217
    args              go to state 764


State 742

  398 return_statement_m: RETURN subroutine_token NVOID • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 765


State 743

  397 return_statement_m: RETURN subroutine_token RHS • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 766


State 744

  395 method_statements: SCOPEOPEN subroutine_openscope $@79 • method_statements $@80 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 666
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 667
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 669
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 670
    loop                  go to state 671
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 672
    when_statement        go to state 116
    analyze_statement     go to state 673
    func_invoke2          go to state 674
    func_invoke           go to state 119
    task_invoke           go to state 675
    sleep                 go to state 676
    input                 go to state 677
    output                go to state 678
    access                go to state 124
    method_invoke2        go to state 679
    method_invoke         go to state 127
    in_stmt               go to state 680
    method_statements     go to state 767
    return_statement_m    go to state 682


State 745

  388 method_statements: in_stmt EQ subroutine_token • RHS SEMICOLON subroutine_token

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 768
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 746

  368 method: func_decl_m SCOPEOPEN subroutine_openscope method_body $@74 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 769


State 747

  298 taskscope: SCOPEOPEN subroutine_openscope $@60 taskscope $@61 SCOPECLOSE subroutine_closescope • taskscope

    WHEN        shift, and go to state 94
    REPEAT      shift, and go to state 95
    FOR         shift, and go to state 96
    SLEEP       shift, and go to state 99
    ATOMIC      shift, and go to state 100
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 101
    OP          shift, and go to state 103
    IDENTIFIER  shift, and go to state 104
    SCOPEOPEN   shift, and go to state 483
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 484
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 485
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 486
    loop                  go to state 487
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 488
    when_statement        go to state 116
    func_invoke2          go to state 489
    func_invoke           go to state 119
    sleep                 go to state 490
    output                go to state 491
    taskscope             go to state 770
    access                go to state 124
    method_invoke2        go to state 493
    method_invoke         go to state 127


State 748

  316 statement: BREAK SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 771


State 749

  317 statement: CONTINUE SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 772


State 750

  313 statement: SCOPEOPEN subroutine_openscope • $@62 statements $@63 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 311 ($@62)

    $@62  go to state 773


State 751

  320 statements: statement statements •

    $default  reduce using rule 320 (statements)


State 752

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 • SCOPECLOSE subroutine_closescope extend

    SCOPECLOSE  shift, and go to state 774


State 753

  305 statement: in_stmt EQ • subroutine_token RHS SEMICOLON subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 775


State 754

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 776


State 755

  168 g: g COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 777
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 756

  164 exprrr: ROUNDOPEN subroutine_token expression_statement • ROUNDCLOSE subroutine_token

    ROUNDCLOSE  shift, and go to state 778


State 757

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose • $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 178 ($@11)

    $@11  go to state 779


State 758

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER • subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32

    $default  reduce using rule 2 (subroutine_id)

    subroutine_id  go to state 780


State 759

  380 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 781


State 760

  379 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON • subroutine_roundclose

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 782


State 761

  136 simpleList: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS •
  360 simpleList_t: simpleList COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS •

    SEMICOLON  reduce using rule 360 (simpleList_t)
    $default   reduce using rule 136 (simpleList)


State 762

  139 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ • subroutine_token RHS
  363 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 783


State 763

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token EQ subroutine_token RHS
  144 dimlist: dimlist • COMMA $@5 array_inValues
  362 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token
  364            | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist • SQUARECLOSE subroutine_token EQ subroutine_token RHS

    COMMA        shift, and go to state 335
    SQUARECLOSE  shift, and go to state 784


State 764

  373 func_decl_m: FUNC $@75 IDENTIFIER $@76 COLON $@77 args • COLON $@78 func_return

    COLON  shift, and go to state 785


State 765

  398 return_statement_m: RETURN subroutine_token NVOID SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 786


State 766

  397 return_statement_m: RETURN subroutine_token RHS SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 787


State 767

  395 method_statements: SCOPEOPEN subroutine_openscope $@79 method_statements • $@80 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 394 ($@80)

    $@80  go to state 788


State 768

  388 method_statements: in_stmt EQ subroutine_token RHS • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 789


State 769

  368 method: func_decl_m SCOPEOPEN subroutine_openscope method_body $@74 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 368 (method)


State 770

  298 taskscope: SCOPEOPEN subroutine_openscope $@60 taskscope $@61 SCOPECLOSE subroutine_closescope taskscope •

    $default  reduce using rule 298 (taskscope)


State 771

  316 statement: BREAK SEMICOLON subroutine_token •

    $default  reduce using rule 316 (statement)


State 772

  317 statement: CONTINUE SEMICOLON subroutine_token •

    $default  reduce using rule 317 (statement)


State 773

  313 statement: SCOPEOPEN subroutine_openscope $@62 • statements $@63 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    BREAK          shift, and go to state 710
    CONTINUE       shift, and go to state 711
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 196
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 712
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 713
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 714
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 715
    loop                  go to state 716
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 717
    when_statement        go to state 116
    analyze_statement     go to state 718
    func_invoke2          go to state 719
    func_invoke           go to state 119
    task_invoke           go to state 720
    sleep                 go to state 721
    input                 go to state 722
    return_statement      go to state 723
    output                go to state 724
    statement             go to state 725
    statements            go to state 790
    access                go to state 124
    method_invoke2        go to state 727
    method_invoke         go to state 127
    in_stmt               go to state 728


State 774

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE • subroutine_closescope extend

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 791


State 775

  305 statement: in_stmt EQ subroutine_token • RHS SEMICOLON subroutine_token

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 792
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 776

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 793


State 777

  168 g: g COMMA subroutine_token IDENTIFIER subroutine_id EQ subroutine_token RHS •

    $default  reduce using rule 168 (g)


State 778

  164 exprrr: ROUNDOPEN subroutine_token expression_statement ROUNDCLOSE • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 794


State 779

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 • SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    SCOPEOPEN  shift, and go to state 795


State 780

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id • subroutine_roundclose SEMICOLON subroutine_token $@32

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 796


State 781

  380 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen NULL_ARGS COLON subroutine_roundclose •

    $default  reduce using rule 380 (in_stmt)


State 782

  379 in_stmt: INVOKE IN subr_this ARROW subroutine_token IDENTIFIER subroutine_id COLON subroutine_roundopen arguments COLON subroutine_roundclose •

    $default  reduce using rule 379 (in_stmt)


State 783

  139 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token • RHS
  363 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 797
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 784

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token EQ subroutine_token RHS
  362 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token
  364            | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE • subroutine_token EQ subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 798


State 785

  373 func_decl_m: FUNC $@75 IDENTIFIER $@76 COLON $@77 args COLON • $@78 func_return

    $default  reduce using rule 372 ($@78)

    $@78  go to state 799


State 786

  398 return_statement_m: RETURN subroutine_token NVOID SEMICOLON subroutine_token •

    $default  reduce using rule 398 (return_statement_m)


State 787

  397 return_statement_m: RETURN subroutine_token RHS SEMICOLON subroutine_token •

    $default  reduce using rule 397 (return_statement_m)


State 788

  395 method_statements: SCOPEOPEN subroutine_openscope $@79 method_statements $@80 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 800


State 789

  388 method_statements: in_stmt EQ subroutine_token RHS SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 801


State 790

  313 statement: SCOPEOPEN subroutine_openscope $@62 statements • $@63 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 312 ($@63)

    $@63  go to state 802


State 791

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope • extend

    ELSE_WHEN  shift, and go to state 803
    DEFAULT    shift, and go to state 804

    $default  reduce using rule 17 (subroutine)

    subroutine  go to state 805
    extend      go to state 806


State 792

  305 statement: in_stmt EQ subroutine_token RHS • SEMICOLON subroutine_token

    SEMICOLON  shift, and go to state 807


State 793

  185 while_loop: REPEAT $@13 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@14 SCOPEOPEN subroutine_openscope $@15 statements $@16 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 185 (while_loop)


State 794

  164 exprrr: ROUNDOPEN subroutine_token expression_statement ROUNDCLOSE subroutine_token •

    $default  reduce using rule 164 (exprrr)


State 795

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN • subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 808


State 796

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose • SEMICOLON subroutine_token $@32

    SEMICOLON  shift, and go to state 809


State 797

  139 arrayList: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS •
  363 arrayList_t: IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS •

    SEMICOLON  reduce using rule 363 (arrayList_t)
    $default   reduce using rule 139 (arrayList)


State 798

  138 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token •
  140          | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token • EQ subroutine_token RHS
  362 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token •
  364            | arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token • EQ subroutine_token RHS

    EQ  shift, and go to state 810

    SEMICOLON  reduce using rule 362 (arrayList_t)
    $default   reduce using rule 138 (arrayList)


State 799

  373 func_decl_m: FUNC $@75 IDENTIFIER $@76 COLON $@77 args COLON $@78 • func_return

    IDENTIFIER  shift, and go to state 470
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    NUDATATYPE  shift, and go to state 471

    nonAtomic_datatypes  go to state 472
    nonAtomicSimple      go to state 473
    nonAtomicArray       go to state 474
    func_return          go to state 811


State 800

  395 method_statements: SCOPEOPEN subroutine_openscope $@79 method_statements $@80 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 812


State 801

  388 method_statements: in_stmt EQ subroutine_token RHS SEMICOLON subroutine_token •

    $default  reduce using rule 388 (method_statements)


State 802

  313 statement: SCOPEOPEN subroutine_openscope $@62 statements $@63 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 813


State 803

  196 extend: ELSE_WHEN • $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 192 ($@21)

    $@21  go to state 814


State 804

  200 extend: DEFAULT • $@25 SCOPEOPEN subroutine_openscope $@26 statements $@27 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 197 ($@25)

    $@25  go to state 815


State 805

  201 extend: subroutine •

    $default  reduce using rule 201 (extend)


State 806

  191 when_statement: WHEN $@17 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@18 SCOPEOPEN subroutine_openscope $@19 statements $@20 SCOPECLOSE subroutine_closescope extend •

    $default  reduce using rule 191 (when_statement)


State 807

  305 statement: in_stmt EQ subroutine_token RHS SEMICOLON • subroutine_token

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 816


State 808

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope • statements $@12 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    BREAK          shift, and go to state 710
    CONTINUE       shift, and go to state 711
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 196
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 712
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 713
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 714
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 715
    loop                  go to state 716
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 717
    when_statement        go to state 116
    analyze_statement     go to state 718
    func_invoke2          go to state 719
    func_invoke           go to state 119
    task_invoke           go to state 720
    sleep                 go to state 721
    input                 go to state 722
    return_statement      go to state 723
    output                go to state 724
    statement             go to state 725
    statements            go to state 817
    access                go to state 124
    method_invoke2        go to state 727
    method_invoke         go to state 127
    in_stmt               go to state 728


State 809

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON • subroutine_token $@32

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 818


State 810

  140 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ • subroutine_token RHS
  364 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ • subroutine_token RHS

    $default  reduce using rule 1 (subroutine_token)

    subroutine_token  go to state 819


State 811

  373 func_decl_m: FUNC $@75 IDENTIFIER $@76 COLON $@77 args COLON $@78 func_return •

    $default  reduce using rule 373 (func_decl_m)


State 812

  395 method_statements: SCOPEOPEN subroutine_openscope $@79 method_statements $@80 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 395 (method_statements)


State 813

  313 statement: SCOPEOPEN subroutine_openscope $@62 statements $@63 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 820


State 814

  196 extend: ELSE_WHEN $@21 • SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    SQUAREOPEN  shift, and go to state 821


State 815

  200 extend: DEFAULT $@25 • SCOPEOPEN subroutine_openscope $@26 statements $@27 SCOPECLOSE subroutine_closescope

    SCOPEOPEN  shift, and go to state 822


State 816

  305 statement: in_stmt EQ subroutine_token RHS SEMICOLON subroutine_token •

    $default  reduce using rule 305 (statement)


State 817

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements • $@12 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 179 ($@12)

    $@12  go to state 823


State 818

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token • $@32

    $default  reduce using rule 208 ($@32)

    $@32  go to state 824


State 819

  140 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token • RHS
  364 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token • RHS

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 825
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 820

  313 statement: SCOPEOPEN subroutine_openscope $@62 statements $@63 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 313 (statement)


State 821

  196 extend: ELSE_WHEN $@21 SQUAREOPEN • subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 18 (subroutine_roundopen)

    subroutine_roundopen  go to state 826


State 822

  200 extend: DEFAULT $@25 SCOPEOPEN • subroutine_openscope $@26 statements $@27 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 827


State 823

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 828


State 824

  209 analyze_statement: ANALYZE $@28 analyze_label COLON $@29 analyze_label COLON $@30 IDENTIFIER subroutine_id COLON $@31 IDENTIFIER subroutine_id subroutine_roundclose SEMICOLON subroutine_token $@32 •

    $default  reduce using rule 209 (analyze_statement)


State 825

  140 arrayList: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS •
  364 arrayList_t: arrayList COMMA subroutine_token IDENTIFIER subroutine_id SQUAREOPEN subroutine_token dimlist SQUARECLOSE subroutine_token EQ subroutine_token RHS •

    SEMICOLON  reduce using rule 364 (arrayList_t)
    $default   reduce using rule 140 (arrayList)


State 826

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen • RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    TID               shift, and go to state 243
    GET               shift, and go to state 244
    IN                shift, and go to state 245
    INVOKE            shift, and go to state 246
    NEG               shift, and go to state 247
    INTEGERLITERAL    shift, and go to state 248
    STRINGLITERAL     shift, and go to state 249
    CHARACTERLITERAL  shift, and go to state 250
    BOOLEANLITERAL    shift, and go to state 251
    FLOATLITERAL      shift, and go to state 252
    IDENTIFIER        shift, and go to state 253
    ROUNDOPEN         shift, and go to state 254

    T              go to state 255
    constants      go to state 256
    RHS            go to state 829
    func_invoke    go to state 258
    get_invoke     go to state 259
    access         go to state 260
    method_invoke  go to state 261
    in_stmt        go to state 262


State 827

  200 extend: DEFAULT $@25 SCOPEOPEN subroutine_openscope • $@26 statements $@27 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 198 ($@26)

    $@26  go to state 830


State 828

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 831


State 829

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS • SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    SQUARECLOSE  shift, and go to state 832


State 830

  200 extend: DEFAULT $@25 SCOPEOPEN subroutine_openscope $@26 • statements $@27 SCOPECLOSE subroutine_closescope

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    BREAK          shift, and go to state 710
    CONTINUE       shift, and go to state 711
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 196
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 712
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 713
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 714
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 715
    loop                  go to state 716
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 717
    when_statement        go to state 116
    analyze_statement     go to state 718
    func_invoke2          go to state 719
    func_invoke           go to state 119
    task_invoke           go to state 720
    sleep                 go to state 721
    input                 go to state 722
    return_statement      go to state 723
    output                go to state 724
    statement             go to state 725
    statements            go to state 833
    access                go to state 124
    method_invoke2        go to state 727
    method_invoke         go to state 127
    in_stmt               go to state 728


State 831

  180 for_loop: FOR $@8 SQUAREOPEN subroutine_roundopen both_assignment PIPE $@9 RHS PIPE $@10 exprrr SQUARECLOSE subroutine_roundclose $@11 SCOPEOPEN subroutine_openscope statements $@12 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 180 (for_loop)


State 832

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE • subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 19 (subroutine_roundclose)

    subroutine_roundclose  go to state 834


State 833

  200 extend: DEFAULT $@25 SCOPEOPEN subroutine_openscope $@26 statements • $@27 SCOPECLOSE subroutine_closescope

    $default  reduce using rule 199 ($@27)

    $@27  go to state 835


State 834

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose • $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 193 ($@22)

    $@22  go to state 836


State 835

  200 extend: DEFAULT $@25 SCOPEOPEN subroutine_openscope $@26 statements $@27 • SCOPECLOSE subroutine_closescope

    SCOPECLOSE  shift, and go to state 837


State 836

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 • SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    SCOPEOPEN  shift, and go to state 838


State 837

  200 extend: DEFAULT $@25 SCOPEOPEN subroutine_openscope $@26 statements $@27 SCOPECLOSE • subroutine_closescope

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 839


State 838

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN • subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 20 (subroutine_openscope)

    subroutine_openscope  go to state 840


State 839

  200 extend: DEFAULT $@25 SCOPEOPEN subroutine_openscope $@26 statements $@27 SCOPECLOSE subroutine_closescope •

    $default  reduce using rule 200 (extend)


State 840

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope • $@23 statements $@24 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 194 ($@23)

    $@23  go to state 841


State 841

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 • statements $@24 SCOPECLOSE subroutine_closescope extend

    WHEN           shift, and go to state 94
    REPEAT         shift, and go to state 95
    FOR            shift, and go to state 96
    BREAK          shift, and go to state 710
    CONTINUE       shift, and go to state 711
    MAKE_PARALLEL  shift, and go to state 97
    ANALYZE        shift, and go to state 98
    SLEEP          shift, and go to state 99
    RETURN         shift, and go to state 196
    ATOMIC         shift, and go to state 100
    ARRAY          shift, and go to state 5
    IN             shift, and go to state 245
    INVOKE         shift, and go to state 246
    IP             shift, and go to state 102
    OP             shift, and go to state 103
    IDENTIFIER     shift, and go to state 104
    SCOPEOPEN      shift, and go to state 712
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 17 (subroutine)

    subroutine            go to state 713
    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 714
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 108
    assignment_statement  go to state 109
    expression_statement  go to state 110
    log                   go to state 715
    loop                  go to state 716
    for_loop              go to state 113
    while_loop            go to state 114
    conditional           go to state 717
    when_statement        go to state 116
    analyze_statement     go to state 718
    func_invoke2          go to state 719
    func_invoke           go to state 119
    task_invoke           go to state 720
    sleep                 go to state 721
    input                 go to state 722
    return_statement      go to state 723
    output                go to state 724
    statement             go to state 725
    statements            go to state 842
    access                go to state 124
    method_invoke2        go to state 727
    method_invoke         go to state 127
    in_stmt               go to state 728


State 842

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements • $@24 SCOPECLOSE subroutine_closescope extend

    $default  reduce using rule 195 ($@24)

    $@24  go to state 843


State 843

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 • SCOPECLOSE subroutine_closescope extend

    SCOPECLOSE  shift, and go to state 844


State 844

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE • subroutine_closescope extend

    $default  reduce using rule 21 (subroutine_closescope)

    subroutine_closescope  go to state 845


State 845

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope • extend

    ELSE_WHEN  shift, and go to state 803
    DEFAULT    shift, and go to state 804

    $default  reduce using rule 17 (subroutine)

    subroutine  go to state 805
    extend      go to state 846


State 846

  196 extend: ELSE_WHEN $@21 SQUAREOPEN subroutine_roundopen RHS SQUARECLOSE subroutine_roundclose $@22 SCOPEOPEN subroutine_openscope $@23 statements $@24 SCOPECLOSE subroutine_closescope extend •

    $default  reduce using rule 196 (extend)
