Terminals unused in grammar

    LEXERROR


Rules useless in parser due to conflicts

   71 $@4: ε

  121 $@12: ε

  132 $@20: ε

  137 $@24: ε

  235 $@74: ε

  251 $@83: ε

  396 $@134: ε

  399 $@136: ε

  402 $@138: ε

  406 $@141: ε

  410 $@144: ε

  415 $@148: ε

  420 $@152: ε

  438 $@162: ε

  453 $@174: ε


State 78 conflicts: 1 reduce/reduce
State 87 conflicts: 1 reduce/reduce
State 90 conflicts: 1 reduce/reduce
State 96 conflicts: 1 reduce/reduce
State 162 conflicts: 1 reduce/reduce
State 245 conflicts: 12 reduce/reduce
State 257 conflicts: 1 reduce/reduce
State 308 conflicts: 1 reduce/reduce
State 332 conflicts: 1 reduce/reduce
State 335 conflicts: 3 reduce/reduce
State 400 conflicts: 3 reduce/reduce
State 403 conflicts: 3 reduce/reduce
State 458 conflicts: 1 shift/reduce


Grammar

    0 $accept: begin $end

    1 all_datatypes: NUDATATYPE
    2              | AUDATATYPE
    3              | NARRUDATATYPE
    4              | AARRUDATATYPE
    5              | NBOOL
    6              | NDEC
    7              | NNUM
    8              | NTEXT
    9              | NLET
   10              | ABOOL
   11              | ADEC
   12              | ALET
   13              | ATEXT
   14              | ANUM
   15              | nonAtomicArray
   16              | atomicArray

   17 expression_op: ASSN_DIV
   18              | ASSN_EXPONENT
   19              | ASSN_MODULO
   20              | ASSN_MUL
   21              | INCR
   22              | DECR

   23 comparison_op: LT
   24              | GT
   25              | GTEQ
   26              | LTEQ
   27              | NOT_EQ
   28              | EQUAL_TWO

   29 arithmetic_op: ADD
   30              | SUB
   31              | MUL
   32              | DIV
   33              | MODULO
   34              | EXPONENT

   35 logical_op: AND
   36           | OR

   37 nonAtomic_datatypes: nonAtomicArray
   38                    | nonAtomicSimple

   39 begin: ε
   40      | startdec begin
   41      | declaration begin
   42      | function begin
   43      | task begin
   44      | type_declaration begin

   45 E: ε

   46 $@1: ε

   47 E: SQUAREOPEN $@1 arr_access SQUARECLOSE

   48 $@2: ε

   49 T: IDENTIFIER $@2 E
   50  | func_invoke

   51 all_ops: arithmetic_op
   52        | comparison_op
   53        | logical_op
   54        | HASH
   55        | ARROW

   56 constants: INTEGERLITERAL
   57          | CHARACTERLITERAL
   58          | FLOATLITERAL
   59          | BOOLEANLITERAL
   60          | STRINGLITERAL

   61 next: RHS all_ops next
   62     | RHS

   63 RHS: constants
   64    | T
   65    | TID
   66    | get_invoke
   67    | method_invoke
   68    | in_stmt

   69 $@3: ε

   70 RHS: ROUNDOPEN $@3 RHS all_ops next ROUNDCLOSE

   71 $@4: ε

   72 RHS: ROUNDOPEN $@4 RHS ROUNDCLOSE

   73 $@5: ε

   74 $@6: ε

   75 RHS: NEG $@5 ROUNDOPEN $@6 RHS ROUNDCLOSE

   76 nonAtomicSimple: NNUM
   77                | NDEC
   78                | NBOOL
   79                | NLET
   80                | NTEXT
   81                | NVOID

   82 atomicSimple: ANUM
   83             | ADEC
   84             | ABOOL
   85             | ALET
   86             | ATEXT

   87 nonAtomicArray: NARRNUM
   88               | NARRDEC
   89               | NARRBOOL
   90               | NARRLET
   91               | NARRTEXT

   92 atomicArray: AARRNUM
   93            | AARRDEC
   94            | AARRBOOL
   95            | AARRLET
   96            | AARRTEXT

   97 errorDatatypes: IDENTIFIER
   98               | ATOMIC IDENTIFIER
   99               | ARRAY IDENTIFIER
  100               | ATOMIC ARRAY IDENTIFIER

  101 declaration: declarationStmt SEMICOLON
  102            | errorDatatypes IDENTIFIER

  103 simpleDatatype: nonAtomicSimple
  104               | atomicSimple
  105               | NUDATATYPE
  106               | ATOMIC AUDATATYPE

  107 arrayDatatype: nonAtomicArray
  108              | atomicArray
  109              | ARRAY NARRUDATATYPE
  110              | ATOMIC ARRAY AARRUDATATYPE

  111 $@7: ε

  112 declarationStmt: simpleDatatype $@7 simpleList

  113 $@8: ε

  114 declarationStmt: arrayDatatype $@8 arrayList

  115 simpleList: IDENTIFIER

  116 $@9: ε

  117 simpleList: simpleList COMMA $@9 IDENTIFIER

  118 $@10: ε

  119 $@11: ε

  120 simpleList: IDENTIFIER $@10 EQ $@11 RHS

  121 $@12: ε

  122 $@13: ε

  123 $@14: ε

  124 simpleList: simpleList COMMA $@12 IDENTIFIER $@13 EQ $@14 RHS

  125 $@15: ε

  126 $@16: ε

  127 arrayList: IDENTIFIER $@15 SQUAREOPEN $@16 dimlist SQUARECLOSE

  128 $@17: ε

  129 $@18: ε

  130 $@19: ε

  131 arrayList: arrayList COMMA $@17 IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE

  132 $@20: ε

  133 $@21: ε

  134 $@22: ε

  135 $@23: ε

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS

  137 $@24: ε

  138 $@25: ε

  139 $@26: ε

  140 $@27: ε

  141 $@28: ε

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS

  143 array_inValues: INTEGERLITERAL
  144               | IDENTIFIER

  145 $@29: ε

  146 dimlist: dimlist COMMA $@29 array_inValues
  147        | array_inValues

  148 LHS: IDENTIFIER

  149 $@30: ε

  150 $@31: ε

  151 LHS: IDENTIFIER $@30 SQUAREOPEN $@31 arr_access SQUARECLOSE
  152    | access

  153 arr_access: exprlist

  154 exprlist: arith_expr

  155 $@32: ε

  156 exprlist: exprlist COMMA $@32 arith_expr

  157 arith_operand: IDENTIFIER
  158              | INTEGERLITERAL
  159              | FLOATLITERAL

  160 $@33: ε

  161 arith_operand: ROUNDOPEN $@33 arith_expr ROUNDCLOSE

  162 arith_expr: arith_expr arithmetic_op arith_operand
  163           | arith_operand

  164 $@34: ε

  165 assignment_statement: LHS EQ $@34 RHS

  166 expression_statement: LHS expression_op RHS

  167 exprrr: expression_statement

  168 $@35: ε

  169 exprrr: ROUNDOPEN $@35 expression_statement ROUNDCLOSE

  170 log: assignment_statement SEMICOLON
  171    | expression_statement SEMICOLON

  172 $@36: ε

  173 $@37: ε

  174 g: IDENTIFIER $@36 EQ $@37 RHS

  175 $@38: ε

  176 $@39: ε

  177 $@40: ε

  178 g: g COMMA $@38 IDENTIFIER $@39 EQ $@40 RHS

  179 both_assignment: assignment_statement

  180 $@41: ε

  181 both_assignment: ROUNDOPEN $@41 assignment_statement ROUNDCLOSE

  182 $@42: ε

  183 both_assignment: simpleDatatype $@42 g

  184 loop: for_loop
  185     | while_loop

  186 $@43: ε

  187 $@44: ε

  188 $@45: ε

  189 $@46: ε

  190 $@47: ε

  191 $@48: ε

  192 $@49: ε

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

  194 $@50: ε

  195 $@51: ε

  196 $@52: ε

  197 $@53: ε

  198 $@54: ε

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS SQUARECLOSE $@52 SCOPEOPEN $@53 statements $@54 SCOPECLOSE

  200 conditional: when_statement

  201 $@55: ε

  202 $@56: ε

  203 $@57: ε

  204 $@58: ε

  205 $@59: ε

  206 $@60: ε

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend

  208 $@61: ε

  209 $@62: ε

  210 $@63: ε

  211 $@64: ε

  212 $@65: ε

  213 $@66: ε

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend

  215 $@67: ε

  216 $@68: ε

  217 $@69: ε

  218 extend: DEFAULT $@67 SCOPEOPEN $@68 statements $@69 SCOPECLOSE
  219       | ε

  220 analysis_arrays: NARRDEC
  221                | NARRNUM
  222                | AARRDEC
  223                | AARRNUM

  224 analyze_label: STRINGLITERAL
  225              | IDENTIFIER

  226 $@70: ε

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax SEMICOLON $@70

  228 analyze_syntax: COLON analysis_arrays analyze_syntax
  229               | ε

  230 func_invoke2: func_invoke SEMICOLON

  231 $@71: ε

  232 $@72: ε

  233 $@73: ε

  234 func_invoke: INVOKE IDENTIFIER $@71 COLON $@72 arguments $@73

  235 $@74: ε

  236 $@75: ε

  237 $@76: ε

  238 func_invoke: INVOKE IDENTIFIER $@74 COLON $@75 NULL_ARGS COLON $@76

  239 $@77: ε

  240 arguments: arguments COMMA $@77 RHS
  241          | RHS

  242 $@78: ε

  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON arguments COLON SEMICOLON $@78
  244            | MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON NULL_ARGS COLON SEMICOLON

  245 get_invoke: GET ARROW TIME

  246 $@79: ε

  247 $@80: ε

  248 $@81: ε

  249 $@82: ε

  250 sleep: SLEEP $@79 ROUNDOPEN $@80 FLOATLITERAL $@81 ROUNDCLOSE $@82 SEMICOLON

  251 $@83: ε

  252 $@84: ε

  253 $@85: ε

  254 $@86: ε

  255 sleep: SLEEP $@83 ROUNDOPEN $@84 INTEGERLITERAL $@85 ROUNDCLOSE $@86 SEMICOLON

  256 $@87: ε

  257 file_name: ARROW $@87 STRINGLITERAL

  258 $@88: ε

  259 file_name: ARROW $@88 IDENTIFIER
  260          | ε

  261 input: IP file_name COLON IDENTIFIER nextip

  262 $@89: ε

  263 nextip: COMMA IDENTIFIER $@89 nextip

  264 $@90: ε

  265 nextip: SEMICOLON $@90

  266 stringvalues: STRINGLITERAL
  267             | IDENTIFIER

  268 $@91: ε

  269 return_statement: RETURN $@91 RHS SEMICOLON

  270 $@92: ε

  271 return_statement: RETURN $@92 NVOID SEMICOLON

  272 output: OP COLON opstring file_name SEMICOLON

  273 opstring: stringvalues nextop

  274 nextop: HASH stringvalues nextop
  275       | ε

  276 function: func_decl func_body
  277         | atomic_func_decl func_body

  278 $@93: ε

  279 func_args: all_datatypes IDENTIFIER $@93

  280 $@94: ε

  281 $@95: ε

  282 func_args: func_args COMMA $@94 all_datatypes IDENTIFIER $@95

  283 args: func_args
  284     | NULL_ARGS

  285 func_return: nonAtomic_datatypes
  286            | NUDATATYPE
  287            | IDENTIFIER

  288 $@96: ε

  289 $@97: ε

  290 $@98: ε

  291 func_decl: FUNC IDENTIFIER $@96 COLON $@97 args COLON $@98 func_return

  292 $@99: ε

  293 $@100: ε

  294 $@101: ε

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER $@99 COLON $@100 args COLON $@101 func_return

  296 $@102: ε

  297 $@103: ε

  298 func_body: SCOPEOPEN $@102 func_statements $@103 SCOPECLOSE

  299 func_scope: declaration
  300           | log
  301           | task_invoke
  302           | func_invoke2
  303           | loop
  304           | return_statement
  305           | conditional
  306           | analyze_statement
  307           | input
  308           | output
  309           | sleep

  310 $@104: ε

  311 $@105: ε

  312 func_scope: SCOPEOPEN $@104 func_statements $@105 SCOPECLOSE
  313           | method_invoke2

  314 func_statements: func_scope func_statements
  315                | ε

  316 $@106: ε

  317 $@107: ε

  318 $@108: ε

  319 $@109: ε

  320 $@110: ε

  321 $@111: ε

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 args $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

  323 taskscope: declaration taskscope
  324          | log taskscope
  325          | conditional taskscope
  326          | loop taskscope
  327          | func_invoke2 taskscope
  328          | output taskscope

  329 $@112: ε

  330 $@113: ε

  331 $@114: ε

  332 taskscope: SCOPEOPEN $@112 taskscope $@113 SCOPECLOSE $@114 taskscope
  333          | sleep taskscope
  334          | method_invoke2 taskscope
  335          | ε

  336 statement: declaration
  337          | log
  338          | conditional
  339          | loop
  340          | return_statement
  341          | func_invoke2
  342          | task_invoke
  343          | analyze_statement

  344 $@115: ε

  345 $@116: ε

  346 statement: SCOPEOPEN $@115 statements $@116 SCOPECLOSE
  347          | output
  348          | sleep
  349          | BREAK SEMICOLON
  350          | CONTINUE SEMICOLON
  351          | input
  352          | method_invoke2

  353 statements: statement statements
  354           | ε

  355 $@117: ε

  356 $@118: ε

  357 access: IDENTIFIER $@117 ARROW $@118 id

  358 $@119: ε

  359 id: IDENTIFIER $@119

  360 $@120: ε

  361 $@121: ε

  362 id: id ARROW $@120 IDENTIFIER $@121

  363 $@122: ε

  364 $@123: ε

  365 $@124: ε

  366 startdec: START $@122 SCOPEOPEN $@123 start $@124 SCOPECLOSE

  367 start: declaration start
  368      | log start
  369      | conditional start
  370      | loop start
  371      | func_invoke2 start
  372      | task_invoke start
  373      | analyze_statement start
  374      | output start
  375      | input start

  376 $@125: ε

  377 $@126: ε

  378 $@127: ε

  379 start: SCOPEOPEN $@125 start $@126 SCOPECLOSE $@127 start
  380      | sleep start
  381      | method_invoke2 start
  382      | ε

  383 $@128: ε

  384 $@129: ε

  385 $@130: ε

  386 $@131: ε

  387 type_declaration: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope methods $@131 SCOPECLOSE

  388 type_scope: declaration_t type_scope
  389           | ε

  390 $@132: ε

  391 declaration_t: declarationStmt_t SEMICOLON $@132

  392 declarationStmt_t: simpleDatatype simpleList_t
  393                  | arrayDatatype arrayList_t

  394 $@133: ε

  395 simpleList_t: IDENTIFIER $@133

  396 $@134: ε

  397 $@135: ε

  398 simpleList_t: simpleList COMMA $@134 IDENTIFIER $@135

  399 $@136: ε

  400 $@137: ε

  401 simpleList_t: IDENTIFIER $@136 EQ $@137 RHS

  402 $@138: ε

  403 $@139: ε

  404 $@140: ε

  405 simpleList_t: simpleList COMMA $@138 IDENTIFIER $@139 EQ $@140 RHS

  406 $@141: ε

  407 $@142: ε

  408 $@143: ε

  409 arrayList_t: IDENTIFIER $@141 SQUAREOPEN $@142 dimlist SQUARECLOSE $@143

  410 $@144: ε

  411 $@145: ε

  412 $@146: ε

  413 $@147: ε

  414 arrayList_t: arrayList COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147

  415 $@148: ε

  416 $@149: ε

  417 $@150: ε

  418 $@151: ε

  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS

  420 $@152: ε

  421 $@153: ε

  422 $@154: ε

  423 $@155: ε

  424 $@156: ε

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS

  426 methods: methods method
  427        | ε

  428 $@157: ε

  429 $@158: ε

  430 method: func_decl_m SCOPEOPEN $@157 method_body $@158 SCOPECLOSE

  431 $@159: ε

  432 $@160: ε

  433 $@161: ε

  434 func_decl_m: FUNC IDENTIFIER $@159 COLON $@160 args COLON $@161 func_return

  435 method_invoke2: method_invoke SEMICOLON

  436 method_args: arguments
  437            | NULL_ARGS

  438 $@162: ε

  439 $@163: ε

  440 $@164: ε

  441 $@165: ε

  442 method_invoke: INVOKE id ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args COLON $@165

  443 $@166: ε

  444 $@167: ε

  445 $@168: ε

  446 in_stmt: IN $@166 ARROW $@167 IDENTIFIER $@168

  447 $@169: ε

  448 $@170: ε

  449 $@171: ε

  450 $@172: ε

  451 $@173: ε

  452 in_stmt: INVOKE IN $@169 ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments COLON $@173

  453 $@174: ε

  454 $@175: ε

  455 $@176: ε

  456 $@177: ε

  457 $@178: ε

  458 in_stmt: INVOKE IN $@174 ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178

  459 method_statements: declaration
  460                  | log
  461                  | task_invoke
  462                  | func_invoke2
  463                  | loop
  464                  | return_statement_m
  465                  | conditional
  466                  | analyze_statement
  467                  | input
  468                  | output
  469                  | sleep

  470 $@179: ε

  471 $@180: ε

  472 method_statements: SCOPEOPEN $@179 method_statements $@180 SCOPECLOSE
  473                  | method_invoke2

  474 $@181: ε

  475 $@182: ε

  476 return_statement_m: RETURN $@181 RHS SEMICOLON $@182

  477 $@183: ε

  478 $@184: ε

  479 return_statement_m: RETURN $@183 NVOID SEMICOLON $@184

  480 method_body: method_statements method_body
  481            | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN <attr> (258) 207
    REPEAT <attr> (259) 199
    ELSE_WHEN <attr> (260) 214
    DEFAULT <attr> (261) 218
    FOR <attr> (262) 193
    BREAK <attr> (263) 349
    CONTINUE <attr> (264) 350
    TASK <attr> (265) 322
    MAKE_PARALLEL <attr> (266) 243 244
    NULL_ARGS <attr> (267) 238 244 284 437 458
    TID <attr> (268) 65
    ANALYZE <attr> (269) 227
    GET <attr> (270) 245
    SLEEP <attr> (271) 250 255
    TIME <attr> (272) 245
    START <attr> (273) 366
    RETURN <attr> (274) 269 271 476 479
    TYPE <attr> (275) 387
    ATOMIC <attr> (276) 98 100 106 110 295
    ARRAY <attr> (277) 99 100 109 110
    IN <attr> (278) 446 452 458
    FUNC <attr> (279) 291 295 434
    INVOKE <attr> (280) 234 238 442 452 458
    IP <attr> (281) 261
    OP <attr> (282) 272
    DIV <attr> (283) 32
    ADD <attr> (284) 29
    SUB <attr> (285) 30
    MUL <attr> (286) 31
    EXPONENT <attr> (287) 34
    MODULO <attr> (288) 33
    ARROW <attr> (289) 55 245 257 259 357 362 442 446 452 458
    EQ <attr> (290) 120 124 136 142 165 174 178 401 405 419 425
    INCR <attr> (291) 21
    DECR <attr> (292) 22
    ASSN_MODULO <attr> (293) 19
    ASSN_EXPONENT <attr> (294) 18
    ASSN_DIV <attr> (295) 17
    ASSN_MUL <attr> (296) 20
    AND <attr> (297) 35
    OR <attr> (298) 36
    GT <attr> (299) 24
    LT <attr> (300) 23
    GTEQ <attr> (301) 25
    LTEQ <attr> (302) 26
    NOT_EQ <attr> (303) 27
    NEG <attr> (304) 75
    EQUAL_TWO <attr> (305) 28
    INTEGERLITERAL <attr> (306) 56 143 158 255
    STRINGLITERAL <attr> (307) 60 224 257 266
    CHARACTERLITERAL <attr> (308) 57
    BOOLEANLITERAL <attr> (309) 59
    FLOATLITERAL <attr> (310) 58 159 250
    COMMA <attr> (311) 117 124 131 142 146 156 178 240 263 282 398 405 414 425
    SEMICOLON <attr> (312) 101 170 171 227 230 243 244 250 255 265 269 271 272 349 350 391 435 476 479
    COLON <attr> (313) 227 228 234 238 243 244 261 272 291 295 322 434 442 452 458
    PIPE <attr> (314) 193
    IDENTIFIER <attr> (315) 49 97 98 99 100 102 115 117 120 124 127 131 136 142 144 148 151 157 174 178 225 234 238 243 244 259 261 263 267 279 282 287 291 295 322 357 359 362 395 398 401 405 409 414 419 425 434 442 446 452 458
    SCOPEOPEN <attr> (316) 193 199 207 214 218 298 312 322 332 346 366 379 387 430 472
    SCOPECLOSE <attr> (317) 193 199 207 214 218 298 312 322 332 346 366 379 387 430 472
    ROUNDOPEN <attr> (318) 70 72 75 161 169 181 250 255
    ROUNDCLOSE <attr> (319) 70 72 75 161 169 181 250 255
    SQUAREOPEN <attr> (320) 47 127 131 136 142 151 193 199 207 214 409 414 419 425
    SQUARECLOSE <attr> (321) 47 127 131 136 142 151 193 199 207 214 409 414 419 425
    HASH <attr> (322) 54 274
    LEXERROR <attr> (323)
    NNUM <attr> (324) 7 76
    NDEC <attr> (325) 6 77
    NBOOL <attr> (326) 5 78
    NLET <attr> (327) 9 79
    NTEXT <attr> (328) 8 80
    NVOID <attr> (329) 81 271 479
    NARRNUM <attr> (330) 87 221
    NARRDEC <attr> (331) 88 220
    NARRBOOL <attr> (332) 89
    NARRLET <attr> (333) 90
    NARRTEXT <attr> (334) 91
    ANUM <attr> (335) 14 82
    ADEC <attr> (336) 11 83
    ABOOL <attr> (337) 10 84
    ALET <attr> (338) 12 85
    ATEXT <attr> (339) 13 86
    AARRNUM <attr> (340) 92 223
    AARRDEC <attr> (341) 93 222
    AARRBOOL <attr> (342) 94
    AARRLET <attr> (343) 95
    AARRTEXT <attr> (344) 96
    TYPENAME <attr> (345) 387
    NUDATATYPE <attr> (346) 1 105 286
    AUDATATYPE <attr> (347) 2 106
    NARRUDATATYPE <attr> (348) 3 109
    AARRUDATATYPE <attr> (349) 4 110


Nonterminals, with rules where they appear

    $accept (95)
        on left: 0
    all_datatypes <attr> (96)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 279 282
    expression_op <attr> (97)
        on left: 17 18 19 20 21 22
        on right: 166
    comparison_op <attr> (98)
        on left: 23 24 25 26 27 28
        on right: 52
    arithmetic_op <attr> (99)
        on left: 29 30 31 32 33 34
        on right: 51 162
    logical_op <attr> (100)
        on left: 35 36
        on right: 53
    nonAtomic_datatypes <attr> (101)
        on left: 37 38
        on right: 285
    begin (102)
        on left: 39 40 41 42 43 44
        on right: 0 40 41 42 43 44
    E <attr> (103)
        on left: 45 47
        on right: 49
    $@1 (104)
        on left: 46
        on right: 47
    T <attr> (105)
        on left: 49 50
        on right: 64
    $@2 (106)
        on left: 48
        on right: 49
    all_ops <attr> (107)
        on left: 51 52 53 54 55
        on right: 61 70
    constants <attr> (108)
        on left: 56 57 58 59 60
        on right: 63
    next <attr> (109)
        on left: 61 62
        on right: 61 70
    RHS <attr> (110)
        on left: 63 64 65 66 67 68 70 72 75
        on right: 61 62 70 72 75 120 124 136 142 165 166 174 178 193 199 207 214 240 241 269 401 405 419 425 476
    $@3 (111)
        on left: 69
        on right: 70
    $@4 (112)
        on left: 71
        on right: 72
    $@5 (113)
        on left: 73
        on right: 75
    $@6 (114)
        on left: 74
        on right: 75
    nonAtomicSimple <attr> (115)
        on left: 76 77 78 79 80 81
        on right: 38 103
    atomicSimple <attr> (116)
        on left: 82 83 84 85 86
        on right: 104
    nonAtomicArray <attr> (117)
        on left: 87 88 89 90 91
        on right: 15 37 107
    atomicArray <attr> (118)
        on left: 92 93 94 95 96
        on right: 16 108
    errorDatatypes (119)
        on left: 97 98 99 100
        on right: 102
    declaration <attr> (120)
        on left: 101 102
        on right: 41 299 323 336 367 459
    simpleDatatype <attr> (121)
        on left: 103 104 105 106
        on right: 112 183 392
    arrayDatatype <attr> (122)
        on left: 107 108 109 110
        on right: 114 393
    declarationStmt <attr> (123)
        on left: 112 114
        on right: 101
    $@7 (124)
        on left: 111
        on right: 112
    $@8 (125)
        on left: 113
        on right: 114
    simpleList <attr> (126)
        on left: 115 117 120 124
        on right: 112 117 124 398 405
    $@9 (127)
        on left: 116
        on right: 117
    $@10 (128)
        on left: 118
        on right: 120
    $@11 (129)
        on left: 119
        on right: 120
    $@12 (130)
        on left: 121
        on right: 124
    $@13 (131)
        on left: 122
        on right: 124
    $@14 (132)
        on left: 123
        on right: 124
    arrayList <attr> (133)
        on left: 127 131 136 142
        on right: 114 131 142 414 425
    $@15 (134)
        on left: 125
        on right: 127
    $@16 (135)
        on left: 126
        on right: 127
    $@17 (136)
        on left: 128
        on right: 131
    $@18 (137)
        on left: 129
        on right: 131
    $@19 (138)
        on left: 130
        on right: 131
    $@20 (139)
        on left: 132
        on right: 136
    $@21 (140)
        on left: 133
        on right: 136
    $@22 (141)
        on left: 134
        on right: 136
    $@23 (142)
        on left: 135
        on right: 136
    $@24 (143)
        on left: 137
        on right: 142
    $@25 (144)
        on left: 138
        on right: 142
    $@26 (145)
        on left: 139
        on right: 142
    $@27 (146)
        on left: 140
        on right: 142
    $@28 (147)
        on left: 141
        on right: 142
    array_inValues <attr> (148)
        on left: 143 144
        on right: 146 147
    dimlist <attr> (149)
        on left: 146 147
        on right: 127 131 136 142 146 409 414 419 425
    $@29 (150)
        on left: 145
        on right: 146
    LHS <attr> (151)
        on left: 148 151 152
        on right: 165 166
    $@30 (152)
        on left: 149
        on right: 151
    $@31 (153)
        on left: 150
        on right: 151
    arr_access <attr> (154)
        on left: 153
        on right: 47 151
    exprlist <attr> (155)
        on left: 154 156
        on right: 153 156
    $@32 (156)
        on left: 155
        on right: 156
    arith_operand <attr> (157)
        on left: 157 158 159 161
        on right: 162 163
    $@33 (158)
        on left: 160
        on right: 161
    arith_expr <attr> (159)
        on left: 162 163
        on right: 154 156 161 162 243 244
    assignment_statement <attr> (160)
        on left: 165
        on right: 170 179 181
    $@34 (161)
        on left: 164
        on right: 165
    expression_statement <attr> (162)
        on left: 166
        on right: 167 169 171
    exprrr <attr> (163)
        on left: 167 169
        on right: 193
    $@35 (164)
        on left: 168
        on right: 169
    log <attr> (165)
        on left: 170 171
        on right: 300 324 337 368 460
    g <attr> (166)
        on left: 174 178
        on right: 178 183
    $@36 (167)
        on left: 172
        on right: 174
    $@37 (168)
        on left: 173
        on right: 174
    $@38 (169)
        on left: 175
        on right: 178
    $@39 (170)
        on left: 176
        on right: 178
    $@40 (171)
        on left: 177
        on right: 178
    both_assignment <attr> (172)
        on left: 179 181 183
        on right: 193
    $@41 (173)
        on left: 180
        on right: 181
    $@42 (174)
        on left: 182
        on right: 183
    loop <attr> (175)
        on left: 184 185
        on right: 303 326 339 370 463
    for_loop <attr> (176)
        on left: 193
        on right: 184
    $@43 (177)
        on left: 186
        on right: 193
    $@44 (178)
        on left: 187
        on right: 193
    $@45 (179)
        on left: 188
        on right: 193
    $@46 (180)
        on left: 189
        on right: 193
    $@47 (181)
        on left: 190
        on right: 193
    $@48 (182)
        on left: 191
        on right: 193
    $@49 (183)
        on left: 192
        on right: 193
    while_loop <attr> (184)
        on left: 199
        on right: 185
    $@50 (185)
        on left: 194
        on right: 199
    $@51 (186)
        on left: 195
        on right: 199
    $@52 (187)
        on left: 196
        on right: 199
    $@53 (188)
        on left: 197
        on right: 199
    $@54 (189)
        on left: 198
        on right: 199
    conditional <attr> (190)
        on left: 200
        on right: 305 325 338 369 465
    when_statement <attr> (191)
        on left: 207
        on right: 200
    $@55 (192)
        on left: 201
        on right: 207
    $@56 (193)
        on left: 202
        on right: 207
    $@57 (194)
        on left: 203
        on right: 207
    $@58 (195)
        on left: 204
        on right: 207
    $@59 (196)
        on left: 205
        on right: 207
    $@60 (197)
        on left: 206
        on right: 207
    extend (198)
        on left: 214 218 219
        on right: 207 214
    $@61 (199)
        on left: 208
        on right: 214
    $@62 (200)
        on left: 209
        on right: 214
    $@63 (201)
        on left: 210
        on right: 214
    $@64 (202)
        on left: 211
        on right: 214
    $@65 (203)
        on left: 212
        on right: 214
    $@66 (204)
        on left: 213
        on right: 214
    $@67 (205)
        on left: 215
        on right: 218
    $@68 (206)
        on left: 216
        on right: 218
    $@69 (207)
        on left: 217
        on right: 218
    analysis_arrays <attr> (208)
        on left: 220 221 222 223
        on right: 227 228
    analyze_label <attr> (209)
        on left: 224 225
        on right: 227
    analyze_statement <attr> (210)
        on left: 227
        on right: 306 343 373 466
    $@70 (211)
        on left: 226
        on right: 227
    analyze_syntax <attr> (212)
        on left: 228 229
        on right: 227 228
    func_invoke2 <attr> (213)
        on left: 230
        on right: 302 327 341 371 462
    func_invoke <attr> (214)
        on left: 234 238
        on right: 50 230
    $@71 (215)
        on left: 231
        on right: 234
    $@72 (216)
        on left: 232
        on right: 234
    $@73 (217)
        on left: 233
        on right: 234
    $@74 (218)
        on left: 235
        on right: 238
    $@75 (219)
        on left: 236
        on right: 238
    $@76 (220)
        on left: 237
        on right: 238
    arguments <attr> (221)
        on left: 240 241
        on right: 234 240 243 436 452
    $@77 (222)
        on left: 239
        on right: 240
    task_invoke <attr> (223)
        on left: 243 244
        on right: 301 342 372 461
    $@78 (224)
        on left: 242
        on right: 243
    get_invoke <attr> (225)
        on left: 245
        on right: 66
    sleep <attr> (226)
        on left: 250 255
        on right: 309 333 348 380 469
    $@79 (227)
        on left: 246
        on right: 250
    $@80 (228)
        on left: 247
        on right: 250
    $@81 (229)
        on left: 248
        on right: 250
    $@82 (230)
        on left: 249
        on right: 250
    $@83 (231)
        on left: 251
        on right: 255
    $@84 (232)
        on left: 252
        on right: 255
    $@85 (233)
        on left: 253
        on right: 255
    $@86 (234)
        on left: 254
        on right: 255
    file_name <attr> (235)
        on left: 257 259 260
        on right: 261 272
    $@87 (236)
        on left: 256
        on right: 257
    $@88 (237)
        on left: 258
        on right: 259
    input <attr> (238)
        on left: 261
        on right: 307 351 375 467
    nextip <attr> (239)
        on left: 263 265
        on right: 261 263
    $@89 (240)
        on left: 262
        on right: 263
    $@90 (241)
        on left: 264
        on right: 265
    stringvalues <attr> (242)
        on left: 266 267
        on right: 273 274
    return_statement <attr> (243)
        on left: 269 271
        on right: 304 340
    $@91 (244)
        on left: 268
        on right: 269
    $@92 (245)
        on left: 270
        on right: 271
    output <attr> (246)
        on left: 272
        on right: 308 328 347 374 468
    opstring <attr> (247)
        on left: 273
        on right: 272
    nextop <attr> (248)
        on left: 274 275
        on right: 273 274
    function (249)
        on left: 276 277
        on right: 42
    func_args (250)
        on left: 279 282
        on right: 282 283
    $@93 (251)
        on left: 278
        on right: 279
    $@94 (252)
        on left: 280
        on right: 282
    $@95 (253)
        on left: 281
        on right: 282
    args (254)
        on left: 283 284
        on right: 291 295 322 434
    func_return <attr> (255)
        on left: 285 286 287
        on right: 291 295 434
    func_decl <attr> (256)
        on left: 291
        on right: 276
    $@96 (257)
        on left: 288
        on right: 291
    $@97 (258)
        on left: 289
        on right: 291
    $@98 (259)
        on left: 290
        on right: 291
    atomic_func_decl <attr> (260)
        on left: 295
        on right: 277
    $@99 (261)
        on left: 292
        on right: 295
    $@100 (262)
        on left: 293
        on right: 295
    $@101 (263)
        on left: 294
        on right: 295
    func_body <attr> (264)
        on left: 298
        on right: 276 277
    $@102 (265)
        on left: 296
        on right: 298
    $@103 (266)
        on left: 297
        on right: 298
    func_scope <attr> (267)
        on left: 299 300 301 302 303 304 305 306 307 308 309 312 313
        on right: 314
    $@104 (268)
        on left: 310
        on right: 312
    $@105 (269)
        on left: 311
        on right: 312
    func_statements <attr> (270)
        on left: 314 315
        on right: 298 312 314
    task (271)
        on left: 322
        on right: 43
    $@106 (272)
        on left: 316
        on right: 322
    $@107 (273)
        on left: 317
        on right: 322
    $@108 (274)
        on left: 318
        on right: 322
    $@109 (275)
        on left: 319
        on right: 322
    $@110 (276)
        on left: 320
        on right: 322
    $@111 (277)
        on left: 321
        on right: 322
    taskscope (278)
        on left: 323 324 325 326 327 328 332 333 334 335
        on right: 322 323 324 325 326 327 328 332 333 334
    $@112 (279)
        on left: 329
        on right: 332
    $@113 (280)
        on left: 330
        on right: 332
    $@114 (281)
        on left: 331
        on right: 332
    statement <attr> (282)
        on left: 336 337 338 339 340 341 342 343 346 347 348 349 350 351 352
        on right: 353
    $@115 (283)
        on left: 344
        on right: 346
    $@116 (284)
        on left: 345
        on right: 346
    statements <attr> (285)
        on left: 353 354
        on right: 193 199 207 214 218 346 353
    access <attr> (286)
        on left: 357
        on right: 152
    $@117 (287)
        on left: 355
        on right: 357
    $@118 (288)
        on left: 356
        on right: 357
    id <attr> (289)
        on left: 359 362
        on right: 357 362 442
    $@119 (290)
        on left: 358
        on right: 359
    $@120 (291)
        on left: 360
        on right: 362
    $@121 (292)
        on left: 361
        on right: 362
    startdec <attr> (293)
        on left: 366
        on right: 40
    $@122 (294)
        on left: 363
        on right: 366
    $@123 (295)
        on left: 364
        on right: 366
    $@124 (296)
        on left: 365
        on right: 366
    start <attr> (297)
        on left: 367 368 369 370 371 372 373 374 375 379 380 381 382
        on right: 366 367 368 369 370 371 372 373 374 375 379 380 381
    $@125 (298)
        on left: 376
        on right: 379
    $@126 (299)
        on left: 377
        on right: 379
    $@127 (300)
        on left: 378
        on right: 379
    type_declaration <attr> (301)
        on left: 387
        on right: 44
    $@128 (302)
        on left: 383
        on right: 387
    $@129 (303)
        on left: 384
        on right: 387
    $@130 (304)
        on left: 385
        on right: 387
    $@131 (305)
        on left: 386
        on right: 387
    type_scope <attr> (306)
        on left: 388 389
        on right: 387 388
    declaration_t <attr> (307)
        on left: 391
        on right: 388
    $@132 (308)
        on left: 390
        on right: 391
    declarationStmt_t (309)
        on left: 392 393
        on right: 391
    simpleList_t (310)
        on left: 395 398 401 405
        on right: 392
    $@133 (311)
        on left: 394
        on right: 395
    $@134 (312)
        on left: 396
        on right: 398
    $@135 (313)
        on left: 397
        on right: 398
    $@136 (314)
        on left: 399
        on right: 401
    $@137 (315)
        on left: 400
        on right: 401
    $@138 (316)
        on left: 402
        on right: 405
    $@139 (317)
        on left: 403
        on right: 405
    $@140 (318)
        on left: 404
        on right: 405
    arrayList_t (319)
        on left: 409 414 419 425
        on right: 393
    $@141 (320)
        on left: 406
        on right: 409
    $@142 (321)
        on left: 407
        on right: 409
    $@143 (322)
        on left: 408
        on right: 409
    $@144 (323)
        on left: 410
        on right: 414
    $@145 (324)
        on left: 411
        on right: 414
    $@146 (325)
        on left: 412
        on right: 414
    $@147 (326)
        on left: 413
        on right: 414
    $@148 (327)
        on left: 415
        on right: 419
    $@149 (328)
        on left: 416
        on right: 419
    $@150 (329)
        on left: 417
        on right: 419
    $@151 (330)
        on left: 418
        on right: 419
    $@152 (331)
        on left: 420
        on right: 425
    $@153 (332)
        on left: 421
        on right: 425
    $@154 (333)
        on left: 422
        on right: 425
    $@155 (334)
        on left: 423
        on right: 425
    $@156 (335)
        on left: 424
        on right: 425
    methods <attr> (336)
        on left: 426 427
        on right: 387 426
    method <attr> (337)
        on left: 430
        on right: 426
    $@157 (338)
        on left: 428
        on right: 430
    $@158 (339)
        on left: 429
        on right: 430
    func_decl_m <attr> (340)
        on left: 434
        on right: 430
    $@159 (341)
        on left: 431
        on right: 434
    $@160 (342)
        on left: 432
        on right: 434
    $@161 (343)
        on left: 433
        on right: 434
    method_invoke2 <attr> (344)
        on left: 435
        on right: 313 334 352 381 473
    method_args <attr> (345)
        on left: 436 437
        on right: 442
    method_invoke <attr> (346)
        on left: 442
        on right: 67 435
    $@162 (347)
        on left: 438
        on right: 442
    $@163 (348)
        on left: 439
        on right: 442
    $@164 (349)
        on left: 440
        on right: 442
    $@165 (350)
        on left: 441
        on right: 442
    in_stmt <attr> (351)
        on left: 446 452 458
        on right: 68
    $@166 (352)
        on left: 443
        on right: 446
    $@167 (353)
        on left: 444
        on right: 446
    $@168 (354)
        on left: 445
        on right: 446
    $@169 (355)
        on left: 447
        on right: 452
    $@170 (356)
        on left: 448
        on right: 452
    $@171 (357)
        on left: 449
        on right: 452
    $@172 (358)
        on left: 450
        on right: 452
    $@173 (359)
        on left: 451
        on right: 452
    $@174 (360)
        on left: 453
        on right: 458
    $@175 (361)
        on left: 454
        on right: 458
    $@176 (362)
        on left: 455
        on right: 458
    $@177 (363)
        on left: 456
        on right: 458
    $@178 (364)
        on left: 457
        on right: 458
    method_statements <attr> (365)
        on left: 459 460 461 462 463 464 465 466 467 468 469 472 473
        on right: 472 480
    $@179 (366)
        on left: 470
        on right: 472
    $@180 (367)
        on left: 471
        on right: 472
    return_statement_m <attr> (368)
        on left: 476 479
        on right: 464
    $@181 (369)
        on left: 474
        on right: 476
    $@182 (370)
        on left: 475
        on right: 476
    $@183 (371)
        on left: 477
        on right: 479
    $@184 (372)
        on left: 478
        on right: 479
    method_body <attr> (373)
        on left: 480 481
        on right: 430 480


State 0

    0 $accept: • begin $end

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 39 (begin)

    begin             go to state 30
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 1

  322 task: TASK • $@106 IDENTIFIER $@107 COLON $@108 args $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

    $default  reduce using rule 316 ($@106)

    $@106  go to state 46


State 2

  366 startdec: START • $@122 SCOPEOPEN $@123 start $@124 SCOPECLOSE

    $default  reduce using rule 363 ($@122)

    $@122  go to state 47


State 3

  387 type_declaration: TYPE • $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope methods $@131 SCOPECLOSE

    $default  reduce using rule 383 ($@128)

    $@128  go to state 48


State 4

   98 errorDatatypes: ATOMIC • IDENTIFIER
  100               | ATOMIC • ARRAY IDENTIFIER
  106 simpleDatatype: ATOMIC • AUDATATYPE
  110 arrayDatatype: ATOMIC • ARRAY AARRUDATATYPE
  295 atomic_func_decl: ATOMIC • FUNC IDENTIFIER $@99 COLON $@100 args COLON $@101 func_return

    ARRAY       shift, and go to state 49
    FUNC        shift, and go to state 50
    IDENTIFIER  shift, and go to state 51
    AUDATATYPE  shift, and go to state 52


State 5

   99 errorDatatypes: ARRAY • IDENTIFIER
  109 arrayDatatype: ARRAY • NARRUDATATYPE

    IDENTIFIER     shift, and go to state 53
    NARRUDATATYPE  shift, and go to state 54


State 6

  291 func_decl: FUNC • IDENTIFIER $@96 COLON $@97 args COLON $@98 func_return

    IDENTIFIER  shift, and go to state 55


State 7

   97 errorDatatypes: IDENTIFIER •

    $default  reduce using rule 97 (errorDatatypes)


State 8

   76 nonAtomicSimple: NNUM •

    $default  reduce using rule 76 (nonAtomicSimple)


State 9

   77 nonAtomicSimple: NDEC •

    $default  reduce using rule 77 (nonAtomicSimple)


State 10

   78 nonAtomicSimple: NBOOL •

    $default  reduce using rule 78 (nonAtomicSimple)


State 11

   79 nonAtomicSimple: NLET •

    $default  reduce using rule 79 (nonAtomicSimple)


State 12

   80 nonAtomicSimple: NTEXT •

    $default  reduce using rule 80 (nonAtomicSimple)


State 13

   81 nonAtomicSimple: NVOID •

    $default  reduce using rule 81 (nonAtomicSimple)


State 14

   87 nonAtomicArray: NARRNUM •

    $default  reduce using rule 87 (nonAtomicArray)


State 15

   88 nonAtomicArray: NARRDEC •

    $default  reduce using rule 88 (nonAtomicArray)


State 16

   89 nonAtomicArray: NARRBOOL •

    $default  reduce using rule 89 (nonAtomicArray)


State 17

   90 nonAtomicArray: NARRLET •

    $default  reduce using rule 90 (nonAtomicArray)


State 18

   91 nonAtomicArray: NARRTEXT •

    $default  reduce using rule 91 (nonAtomicArray)


State 19

   82 atomicSimple: ANUM •

    $default  reduce using rule 82 (atomicSimple)


State 20

   83 atomicSimple: ADEC •

    $default  reduce using rule 83 (atomicSimple)


State 21

   84 atomicSimple: ABOOL •

    $default  reduce using rule 84 (atomicSimple)


State 22

   85 atomicSimple: ALET •

    $default  reduce using rule 85 (atomicSimple)


State 23

   86 atomicSimple: ATEXT •

    $default  reduce using rule 86 (atomicSimple)


State 24

   92 atomicArray: AARRNUM •

    $default  reduce using rule 92 (atomicArray)


State 25

   93 atomicArray: AARRDEC •

    $default  reduce using rule 93 (atomicArray)


State 26

   94 atomicArray: AARRBOOL •

    $default  reduce using rule 94 (atomicArray)


State 27

   95 atomicArray: AARRLET •

    $default  reduce using rule 95 (atomicArray)


State 28

   96 atomicArray: AARRTEXT •

    $default  reduce using rule 96 (atomicArray)


State 29

  105 simpleDatatype: NUDATATYPE •

    $default  reduce using rule 105 (simpleDatatype)


State 30

    0 $accept: begin • $end

    $end  shift, and go to state 56


State 31

  103 simpleDatatype: nonAtomicSimple •

    $default  reduce using rule 103 (simpleDatatype)


State 32

  104 simpleDatatype: atomicSimple •

    $default  reduce using rule 104 (simpleDatatype)


State 33

  107 arrayDatatype: nonAtomicArray •

    $default  reduce using rule 107 (arrayDatatype)


State 34

  108 arrayDatatype: atomicArray •

    $default  reduce using rule 108 (arrayDatatype)


State 35

  102 declaration: errorDatatypes • IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 36

   41 begin: declaration • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 39 (begin)

    begin             go to state 58
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 37

  112 declarationStmt: simpleDatatype • $@7 simpleList

    $default  reduce using rule 111 ($@7)

    $@7  go to state 59


State 38

  114 declarationStmt: arrayDatatype • $@8 arrayList

    $default  reduce using rule 113 ($@8)

    $@8  go to state 60


State 39

  101 declaration: declarationStmt • SEMICOLON

    SEMICOLON  shift, and go to state 61


State 40

   42 begin: function • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 39 (begin)

    begin             go to state 62
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 41

  276 function: func_decl • func_body

    SCOPEOPEN  shift, and go to state 63

    func_body  go to state 64


State 42

  277 function: atomic_func_decl • func_body

    SCOPEOPEN  shift, and go to state 63

    func_body  go to state 65


State 43

   43 begin: task • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 39 (begin)

    begin             go to state 66
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 44

   40 begin: startdec • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 39 (begin)

    begin             go to state 67
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 45

   44 begin: type_declaration • begin

    TASK        shift, and go to state 1
    START       shift, and go to state 2
    TYPE        shift, and go to state 3
    ATOMIC      shift, and go to state 4
    ARRAY       shift, and go to state 5
    FUNC        shift, and go to state 6
    IDENTIFIER  shift, and go to state 7
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 39 (begin)

    begin             go to state 68
    nonAtomicSimple   go to state 31
    atomicSimple      go to state 32
    nonAtomicArray    go to state 33
    atomicArray       go to state 34
    errorDatatypes    go to state 35
    declaration       go to state 36
    simpleDatatype    go to state 37
    arrayDatatype     go to state 38
    declarationStmt   go to state 39
    function          go to state 40
    func_decl         go to state 41
    atomic_func_decl  go to state 42
    task              go to state 43
    startdec          go to state 44
    type_declaration  go to state 45


State 46

  322 task: TASK $@106 • IDENTIFIER $@107 COLON $@108 args $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

    IDENTIFIER  shift, and go to state 69


State 47

  366 startdec: START $@122 • SCOPEOPEN $@123 start $@124 SCOPECLOSE

    SCOPEOPEN  shift, and go to state 70


State 48

  387 type_declaration: TYPE $@128 • TYPENAME $@129 SCOPEOPEN $@130 type_scope methods $@131 SCOPECLOSE

    TYPENAME  shift, and go to state 71


State 49

  100 errorDatatypes: ATOMIC ARRAY • IDENTIFIER
  110 arrayDatatype: ATOMIC ARRAY • AARRUDATATYPE

    IDENTIFIER     shift, and go to state 72
    AARRUDATATYPE  shift, and go to state 73


State 50

  295 atomic_func_decl: ATOMIC FUNC • IDENTIFIER $@99 COLON $@100 args COLON $@101 func_return

    IDENTIFIER  shift, and go to state 74


State 51

   98 errorDatatypes: ATOMIC IDENTIFIER •

    $default  reduce using rule 98 (errorDatatypes)


State 52

  106 simpleDatatype: ATOMIC AUDATATYPE •

    $default  reduce using rule 106 (simpleDatatype)


State 53

   99 errorDatatypes: ARRAY IDENTIFIER •

    $default  reduce using rule 99 (errorDatatypes)


State 54

  109 arrayDatatype: ARRAY NARRUDATATYPE •

    $default  reduce using rule 109 (arrayDatatype)


State 55

  291 func_decl: FUNC IDENTIFIER • $@96 COLON $@97 args COLON $@98 func_return

    $default  reduce using rule 288 ($@96)

    $@96  go to state 75


State 56

    0 $accept: begin $end •

    $default  accept


State 57

  102 declaration: errorDatatypes IDENTIFIER •

    $default  reduce using rule 102 (declaration)


State 58

   41 begin: declaration begin •

    $default  reduce using rule 41 (begin)


State 59

  112 declarationStmt: simpleDatatype $@7 • simpleList

    IDENTIFIER  shift, and go to state 76

    simpleList  go to state 77


State 60

  114 declarationStmt: arrayDatatype $@8 • arrayList

    IDENTIFIER  shift, and go to state 78

    arrayList  go to state 79


State 61

  101 declaration: declarationStmt SEMICOLON •

    $default  reduce using rule 101 (declaration)


State 62

   42 begin: function begin •

    $default  reduce using rule 42 (begin)


State 63

  298 func_body: SCOPEOPEN • $@102 func_statements $@103 SCOPECLOSE

    $default  reduce using rule 296 ($@102)

    $@102  go to state 80


State 64

  276 function: func_decl func_body •

    $default  reduce using rule 276 (function)


State 65

  277 function: atomic_func_decl func_body •

    $default  reduce using rule 277 (function)


State 66

   43 begin: task begin •

    $default  reduce using rule 43 (begin)


State 67

   40 begin: startdec begin •

    $default  reduce using rule 40 (begin)


State 68

   44 begin: type_declaration begin •

    $default  reduce using rule 44 (begin)


State 69

  322 task: TASK $@106 IDENTIFIER • $@107 COLON $@108 args $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

    $default  reduce using rule 317 ($@107)

    $@107  go to state 81


State 70

  366 startdec: START $@122 SCOPEOPEN • $@123 start $@124 SCOPECLOSE

    $default  reduce using rule 364 ($@123)

    $@123  go to state 82


State 71

  387 type_declaration: TYPE $@128 TYPENAME • $@129 SCOPEOPEN $@130 type_scope methods $@131 SCOPECLOSE

    $default  reduce using rule 384 ($@129)

    $@129  go to state 83


State 72

  100 errorDatatypes: ATOMIC ARRAY IDENTIFIER •

    $default  reduce using rule 100 (errorDatatypes)


State 73

  110 arrayDatatype: ATOMIC ARRAY AARRUDATATYPE •

    $default  reduce using rule 110 (arrayDatatype)


State 74

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER • $@99 COLON $@100 args COLON $@101 func_return

    $default  reduce using rule 292 ($@99)

    $@99  go to state 84


State 75

  291 func_decl: FUNC IDENTIFIER $@96 • COLON $@97 args COLON $@98 func_return

    COLON  shift, and go to state 85


State 76

  115 simpleList: IDENTIFIER •
  120           | IDENTIFIER • $@10 EQ $@11 RHS

    EQ        reduce using rule 118 ($@10)
    $default  reduce using rule 115 (simpleList)

    $@10  go to state 86


State 77

  112 declarationStmt: simpleDatatype $@7 simpleList •
  117 simpleList: simpleList • COMMA $@9 IDENTIFIER
  124           | simpleList • COMMA $@12 IDENTIFIER $@13 EQ $@14 RHS

    COMMA  shift, and go to state 87

    $default  reduce using rule 112 (declarationStmt)


State 78

  127 arrayList: IDENTIFIER • $@15 SQUAREOPEN $@16 dimlist SQUARECLOSE
  136          | IDENTIFIER • $@20 SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS

    SQUAREOPEN  reduce using rule 125 ($@15)
    SQUAREOPEN  [reduce using rule 132 ($@20)]
    $default    reduce using rule 125 ($@15)

    $@15  go to state 88
    $@20  go to state 89

    reduce/reduce conflict on token SQUAREOPEN:
      125 $@15: ε •
      132 $@20: ε •
      First example: arrayDatatype $@8 IDENTIFIER • SQUAREOPEN $@16 dimlist SQUARECLOSE SEMICOLON begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                  $end
             ↳ 41: declaration                                                                                                begin
                   ↳ 101: declarationStmt                                                                           SEMICOLON
                          ↳ 114: arrayDatatype $@8 arrayList
                                                   ↳ 127: IDENTIFIER $@15       SQUAREOPEN $@16 dimlist SQUARECLOSE
                                                                     ↳ 125: ε •
      Second example: arrayDatatype $@8 IDENTIFIER • SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS SEMICOLON begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                   $end
             ↳ 41: declaration                                                                                                                 begin
                   ↳ 101: declarationStmt                                                                                            SEMICOLON
                          ↳ 114: arrayDatatype $@8 arrayList
                                                   ↳ 136: IDENTIFIER $@20       SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS
                                                                     ↳ 132: ε •



State 79

  114 declarationStmt: arrayDatatype $@8 arrayList •
  131 arrayList: arrayList • COMMA $@17 IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE
  142          | arrayList • COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS

    COMMA  shift, and go to state 90

    $default  reduce using rule 114 (declarationStmt)


State 80

  298 func_body: SCOPEOPEN $@102 • func_statements $@103 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 103
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 315 (func_statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 104
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 108
    loop                  go to state 109
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 112
    when_statement        go to state 113
    analyze_statement     go to state 114
    func_invoke2          go to state 115
    func_invoke           go to state 116
    task_invoke           go to state 117
    sleep                 go to state 118
    input                 go to state 119
    return_statement      go to state 120
    output                go to state 121
    func_scope            go to state 122
    func_statements       go to state 123
    access                go to state 124
    method_invoke2        go to state 125
    method_invoke         go to state 126


State 81

  322 task: TASK $@106 IDENTIFIER $@107 • COLON $@108 args $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

    COLON  shift, and go to state 127


State 82

  366 startdec: START $@122 SCOPEOPEN $@123 • start $@124 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 139
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 83

  387 type_declaration: TYPE $@128 TYPENAME $@129 • SCOPEOPEN $@130 type_scope methods $@131 SCOPECLOSE

    SCOPEOPEN  shift, and go to state 141


State 84

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER $@99 • COLON $@100 args COLON $@101 func_return

    COLON  shift, and go to state 142


State 85

  291 func_decl: FUNC IDENTIFIER $@96 COLON • $@97 args COLON $@98 func_return

    $default  reduce using rule 289 ($@97)

    $@97  go to state 143


State 86

  120 simpleList: IDENTIFIER $@10 • EQ $@11 RHS

    EQ  shift, and go to state 144


State 87

  117 simpleList: simpleList COMMA • $@9 IDENTIFIER
  124           | simpleList COMMA • $@12 IDENTIFIER $@13 EQ $@14 RHS

    IDENTIFIER  reduce using rule 116 ($@9)
    IDENTIFIER  [reduce using rule 121 ($@12)]
    $default    reduce using rule 116 ($@9)

    $@9   go to state 145
    $@12  go to state 146

    reduce/reduce conflict on token IDENTIFIER:
      116 $@9: ε •
      121 $@12: ε •
      First example: simpleDatatype simpleList COMMA • IDENTIFIER
      First reduce derivation
        declarationStmt
        ↳ 112: simpleDatatype simpleList
                              ↳ 117: simpleList COMMA $@9        IDENTIFIER
                                                      ↳ 116: ε •
      Second example: simpleList COMMA • IDENTIFIER IDENTIFIER $@13 EQ $@14 RHS
      Second reduce derivation
        declarationStmt
        ↳ 112: simpleList COMMA simpleList
                                ↳ 124: $@12       IDENTIFIER IDENTIFIER $@13 EQ $@14 RHS
                                       ↳ 121: ε •



State 88

  127 arrayList: IDENTIFIER $@15 • SQUAREOPEN $@16 dimlist SQUARECLOSE

    SQUAREOPEN  shift, and go to state 147


State 89

  136 arrayList: IDENTIFIER $@20 • SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS

    SQUAREOPEN  shift, and go to state 148


State 90

  131 arrayList: arrayList COMMA • $@17 IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE
  142          | arrayList COMMA • $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS

    IDENTIFIER  reduce using rule 128 ($@17)
    IDENTIFIER  [reduce using rule 137 ($@24)]
    $default    reduce using rule 128 ($@17)

    $@17  go to state 149
    $@24  go to state 150

    reduce/reduce conflict on token IDENTIFIER:
      128 $@17: ε •
      137 $@24: ε •
      First example: arrayDatatype $@8 arrayList COMMA • IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE SEMICOLON begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                       $end
             ↳ 41: declaration                                                                                                                     begin
                   ↳ 101: declarationStmt                                                                                                SEMICOLON
                          ↳ 114: arrayDatatype $@8 arrayList
                                                   ↳ 131: arrayList COMMA $@17       IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE
                                                                          ↳ 128: ε •
      Second example: arrayDatatype $@8 arrayList COMMA • IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS SEMICOLON begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                        $end
             ↳ 41: declaration                                                                                                                                      begin
                   ↳ 101: declarationStmt                                                                                                                 SEMICOLON
                          ↳ 114: arrayDatatype $@8 arrayList
                                                   ↳ 142: arrayList COMMA $@24       IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS
                                                                          ↳ 137: ε •



State 91

  207 when_statement: WHEN • $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend

    $default  reduce using rule 201 ($@55)

    $@55  go to state 151


State 92

  199 while_loop: REPEAT • $@50 SQUAREOPEN $@51 RHS SQUARECLOSE $@52 SCOPEOPEN $@53 statements $@54 SCOPECLOSE

    $default  reduce using rule 194 ($@50)

    $@50  go to state 152


State 93

  193 for_loop: FOR • $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    $default  reduce using rule 186 ($@43)

    $@43  go to state 153


State 94

  243 task_invoke: MAKE_PARALLEL • IDENTIFIER COLON arith_expr COLON arith_expr COLON arguments COLON SEMICOLON $@78
  244            | MAKE_PARALLEL • IDENTIFIER COLON arith_expr COLON arith_expr COLON NULL_ARGS COLON SEMICOLON

    IDENTIFIER  shift, and go to state 154


State 95

  227 analyze_statement: ANALYZE • analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax SEMICOLON $@70

    STRINGLITERAL  shift, and go to state 155
    IDENTIFIER     shift, and go to state 156

    analyze_label  go to state 157


State 96

  250 sleep: SLEEP • $@79 ROUNDOPEN $@80 FLOATLITERAL $@81 ROUNDCLOSE $@82 SEMICOLON
  255      | SLEEP • $@83 ROUNDOPEN $@84 INTEGERLITERAL $@85 ROUNDCLOSE $@86 SEMICOLON

    ROUNDOPEN  reduce using rule 246 ($@79)
    ROUNDOPEN  [reduce using rule 251 ($@83)]
    $default   reduce using rule 246 ($@79)

    $@79  go to state 158
    $@83  go to state 159

    reduce/reduce conflict on token ROUNDOPEN:
      246 $@79: ε •
      251 $@83: ε •
      First example: START $@122 SCOPEOPEN $@123 SLEEP • ROUNDOPEN $@80 FLOATLITERAL $@81 ROUNDCLOSE $@82 SEMICOLON start $@124 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                           $end
             ↳ 40: startdec                                                                                                                                            begin
                   ↳ 366: START $@122 SCOPEOPEN $@123 start                                                                                           $@124 SCOPECLOSE
                                                      ↳ 380: sleep                                                                              start
                                                             ↳ 250: SLEEP $@79       ROUNDOPEN $@80 FLOATLITERAL $@81 ROUNDCLOSE $@82 SEMICOLON
                                                                          ↳ 246: ε •
      Second example: START $@122 SCOPEOPEN $@123 SLEEP • ROUNDOPEN $@84 INTEGERLITERAL $@85 ROUNDCLOSE $@86 SEMICOLON start $@124 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                             $end
             ↳ 40: startdec                                                                                                                                              begin
                   ↳ 366: START $@122 SCOPEOPEN $@123 start                                                                                             $@124 SCOPECLOSE
                                                      ↳ 380: sleep                                                                                start
                                                             ↳ 255: SLEEP $@83       ROUNDOPEN $@84 INTEGERLITERAL $@85 ROUNDCLOSE $@86 SEMICOLON
                                                                          ↳ 251: ε •



State 97

  269 return_statement: RETURN • $@91 RHS SEMICOLON
  271                 | RETURN • $@92 NVOID SEMICOLON

    NVOID     reduce using rule 270 ($@92)
    $default  reduce using rule 268 ($@91)

    $@91  go to state 160
    $@92  go to state 161


State 98

   98 errorDatatypes: ATOMIC • IDENTIFIER
  100               | ATOMIC • ARRAY IDENTIFIER
  106 simpleDatatype: ATOMIC • AUDATATYPE
  110 arrayDatatype: ATOMIC • ARRAY AARRUDATATYPE

    ARRAY       shift, and go to state 49
    IDENTIFIER  shift, and go to state 51
    AUDATATYPE  shift, and go to state 52


State 99

  234 func_invoke: INVOKE • IDENTIFIER $@71 COLON $@72 arguments $@73
  238            | INVOKE • IDENTIFIER $@74 COLON $@75 NULL_ARGS COLON $@76
  442 method_invoke: INVOKE • id ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args COLON $@165

    IDENTIFIER  shift, and go to state 162

    id  go to state 163


State 100

  261 input: IP • file_name COLON IDENTIFIER nextip

    ARROW  shift, and go to state 164

    $default  reduce using rule 260 (file_name)

    file_name  go to state 165


State 101

  272 output: OP • COLON opstring file_name SEMICOLON

    COLON  shift, and go to state 166


State 102

   97 errorDatatypes: IDENTIFIER •
  148 LHS: IDENTIFIER •
  151    | IDENTIFIER • $@30 SQUAREOPEN $@31 arr_access SQUARECLOSE
  357 access: IDENTIFIER • $@117 ARROW $@118 id

    ARROW       reduce using rule 355 ($@117)
    IDENTIFIER  reduce using rule 97 (errorDatatypes)
    SQUAREOPEN  reduce using rule 149 ($@30)
    $default    reduce using rule 148 (LHS)

    $@30   go to state 167
    $@117  go to state 168


State 103

  312 func_scope: SCOPEOPEN • $@104 func_statements $@105 SCOPECLOSE

    $default  reduce using rule 310 ($@104)

    $@104  go to state 169


State 104

  299 func_scope: declaration •

    $default  reduce using rule 299 (func_scope)


State 105

  165 assignment_statement: LHS • EQ $@34 RHS
  166 expression_statement: LHS • expression_op RHS

    EQ             shift, and go to state 170
    INCR           shift, and go to state 171
    DECR           shift, and go to state 172
    ASSN_MODULO    shift, and go to state 173
    ASSN_EXPONENT  shift, and go to state 174
    ASSN_DIV       shift, and go to state 175
    ASSN_MUL       shift, and go to state 176

    expression_op  go to state 177


State 106

  170 log: assignment_statement • SEMICOLON

    SEMICOLON  shift, and go to state 178


State 107

  171 log: expression_statement • SEMICOLON

    SEMICOLON  shift, and go to state 179


State 108

  300 func_scope: log •

    $default  reduce using rule 300 (func_scope)


State 109

  303 func_scope: loop •

    $default  reduce using rule 303 (func_scope)


State 110

  184 loop: for_loop •

    $default  reduce using rule 184 (loop)


State 111

  185 loop: while_loop •

    $default  reduce using rule 185 (loop)


State 112

  305 func_scope: conditional •

    $default  reduce using rule 305 (func_scope)


State 113

  200 conditional: when_statement •

    $default  reduce using rule 200 (conditional)


State 114

  306 func_scope: analyze_statement •

    $default  reduce using rule 306 (func_scope)


State 115

  302 func_scope: func_invoke2 •

    $default  reduce using rule 302 (func_scope)


State 116

  230 func_invoke2: func_invoke • SEMICOLON

    SEMICOLON  shift, and go to state 180


State 117

  301 func_scope: task_invoke •

    $default  reduce using rule 301 (func_scope)


State 118

  309 func_scope: sleep •

    $default  reduce using rule 309 (func_scope)


State 119

  307 func_scope: input •

    $default  reduce using rule 307 (func_scope)


State 120

  304 func_scope: return_statement •

    $default  reduce using rule 304 (func_scope)


State 121

  308 func_scope: output •

    $default  reduce using rule 308 (func_scope)


State 122

  314 func_statements: func_scope • func_statements

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 103
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 315 (func_statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 104
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 108
    loop                  go to state 109
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 112
    when_statement        go to state 113
    analyze_statement     go to state 114
    func_invoke2          go to state 115
    func_invoke           go to state 116
    task_invoke           go to state 117
    sleep                 go to state 118
    input                 go to state 119
    return_statement      go to state 120
    output                go to state 121
    func_scope            go to state 122
    func_statements       go to state 181
    access                go to state 124
    method_invoke2        go to state 125
    method_invoke         go to state 126


State 123

  298 func_body: SCOPEOPEN $@102 func_statements • $@103 SCOPECLOSE

    $default  reduce using rule 297 ($@103)

    $@103  go to state 182


State 124

  152 LHS: access •

    $default  reduce using rule 152 (LHS)


State 125

  313 func_scope: method_invoke2 •

    $default  reduce using rule 313 (func_scope)


State 126

  435 method_invoke2: method_invoke • SEMICOLON

    SEMICOLON  shift, and go to state 183


State 127

  322 task: TASK $@106 IDENTIFIER $@107 COLON • $@108 args $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

    $default  reduce using rule 318 ($@108)

    $@108  go to state 184


State 128

  379 start: SCOPEOPEN • $@125 start $@126 SCOPECLOSE $@127 start

    $default  reduce using rule 376 ($@125)

    $@125  go to state 185


State 129

  367 start: declaration • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 186
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 130

  368 start: log • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 187
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 131

  370 start: loop • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 188
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 132

  369 start: conditional • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 189
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 133

  373 start: analyze_statement • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 190
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 134

  371 start: func_invoke2 • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 191
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 135

  372 start: task_invoke • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 192
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 136

  380 start: sleep • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 193
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 137

  375 start: input • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 194
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 138

  374 start: output • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 195
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 139

  366 startdec: START $@122 SCOPEOPEN $@123 start • $@124 SCOPECLOSE

    $default  reduce using rule 365 ($@124)

    $@124  go to state 196


State 140

  381 start: method_invoke2 • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 197
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 141

  387 type_declaration: TYPE $@128 TYPENAME $@129 SCOPEOPEN • $@130 type_scope methods $@131 SCOPECLOSE

    $default  reduce using rule 385 ($@130)

    $@130  go to state 198


State 142

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER $@99 COLON • $@100 args COLON $@101 func_return

    $default  reduce using rule 293 ($@100)

    $@100  go to state 199


State 143

  291 func_decl: FUNC IDENTIFIER $@96 COLON $@97 • args COLON $@98 func_return

    NULL_ARGS      shift, and go to state 200
    NNUM           shift, and go to state 201
    NDEC           shift, and go to state 202
    NBOOL          shift, and go to state 203
    NLET           shift, and go to state 204
    NTEXT          shift, and go to state 205
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 206
    ADEC           shift, and go to state 207
    ABOOL          shift, and go to state 208
    ALET           shift, and go to state 209
    ATEXT          shift, and go to state 210
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 211
    AUDATATYPE     shift, and go to state 212
    NARRUDATATYPE  shift, and go to state 213
    AARRUDATATYPE  shift, and go to state 214

    all_datatypes   go to state 215
    nonAtomicArray  go to state 216
    atomicArray     go to state 217
    func_args       go to state 218
    args            go to state 219


State 144

  120 simpleList: IDENTIFIER $@10 EQ • $@11 RHS

    $default  reduce using rule 119 ($@11)

    $@11  go to state 220


State 145

  117 simpleList: simpleList COMMA $@9 • IDENTIFIER

    IDENTIFIER  shift, and go to state 221


State 146

  124 simpleList: simpleList COMMA $@12 • IDENTIFIER $@13 EQ $@14 RHS

    IDENTIFIER  shift, and go to state 222


State 147

  127 arrayList: IDENTIFIER $@15 SQUAREOPEN • $@16 dimlist SQUARECLOSE

    $default  reduce using rule 126 ($@16)

    $@16  go to state 223


State 148

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN • $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS

    $default  reduce using rule 133 ($@21)

    $@21  go to state 224


State 149

  131 arrayList: arrayList COMMA $@17 • IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE

    IDENTIFIER  shift, and go to state 225


State 150

  142 arrayList: arrayList COMMA $@24 • IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS

    IDENTIFIER  shift, and go to state 226


State 151

  207 when_statement: WHEN $@55 • SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend

    SQUAREOPEN  shift, and go to state 227


State 152

  199 while_loop: REPEAT $@50 • SQUAREOPEN $@51 RHS SQUARECLOSE $@52 SCOPEOPEN $@53 statements $@54 SCOPECLOSE

    SQUAREOPEN  shift, and go to state 228


State 153

  193 for_loop: FOR $@43 • SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    SQUAREOPEN  shift, and go to state 229


State 154

  243 task_invoke: MAKE_PARALLEL IDENTIFIER • COLON arith_expr COLON arith_expr COLON arguments COLON SEMICOLON $@78
  244            | MAKE_PARALLEL IDENTIFIER • COLON arith_expr COLON arith_expr COLON NULL_ARGS COLON SEMICOLON

    COLON  shift, and go to state 230


State 155

  224 analyze_label: STRINGLITERAL •

    $default  reduce using rule 224 (analyze_label)


State 156

  225 analyze_label: IDENTIFIER •

    $default  reduce using rule 225 (analyze_label)


State 157

  227 analyze_statement: ANALYZE analyze_label • COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax SEMICOLON $@70

    COLON  shift, and go to state 231


State 158

  250 sleep: SLEEP $@79 • ROUNDOPEN $@80 FLOATLITERAL $@81 ROUNDCLOSE $@82 SEMICOLON

    ROUNDOPEN  shift, and go to state 232


State 159

  255 sleep: SLEEP $@83 • ROUNDOPEN $@84 INTEGERLITERAL $@85 ROUNDCLOSE $@86 SEMICOLON

    ROUNDOPEN  shift, and go to state 233


State 160

  269 return_statement: RETURN $@91 • RHS SEMICOLON

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 248
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 161

  271 return_statement: RETURN $@92 • NVOID SEMICOLON

    NVOID  shift, and go to state 253


State 162

  234 func_invoke: INVOKE IDENTIFIER • $@71 COLON $@72 arguments $@73
  238            | INVOKE IDENTIFIER • $@74 COLON $@75 NULL_ARGS COLON $@76
  359 id: IDENTIFIER • $@119

    ARROW     reduce using rule 358 ($@119)
    COLON     reduce using rule 231 ($@71)
    COLON     [reduce using rule 235 ($@74)]
    $default  reduce using rule 231 ($@71)

    $@71   go to state 254
    $@74   go to state 255
    $@119  go to state 256

    reduce/reduce conflict on token COLON:
      231 $@71: ε •
      235 $@74: ε •
      First example: START $@122 SCOPEOPEN $@123 INVOKE IDENTIFIER • COLON $@72 arguments $@73 SEMICOLON start $@124 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                       $end
             ↳ 40: startdec                                                                                                                                        begin
                   ↳ 366: START $@122 SCOPEOPEN $@123 start                                                                                       $@124 SCOPECLOSE
                                                      ↳ 371: func_invoke2                                                                   start
                                                             ↳ 230: func_invoke                                                   SEMICOLON
                                                                    ↳ 234: INVOKE IDENTIFIER $@71       COLON $@72 arguments $@73
                                                                                             ↳ 231: ε •
      Second example: START $@122 SCOPEOPEN $@123 INVOKE IDENTIFIER • COLON $@75 NULL_ARGS COLON $@76 SEMICOLON start $@124 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                             $end
             ↳ 40: startdec                                                                                                                                              begin
                   ↳ 366: START $@122 SCOPEOPEN $@123 start                                                                                             $@124 SCOPECLOSE
                                                      ↳ 371: func_invoke2                                                                         start
                                                             ↳ 230: func_invoke                                                         SEMICOLON
                                                                    ↳ 238: INVOKE IDENTIFIER $@74       COLON $@75 NULL_ARGS COLON $@76
                                                                                             ↳ 235: ε •



State 163

  362 id: id • ARROW $@120 IDENTIFIER $@121
  442 method_invoke: INVOKE id • ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args COLON $@165

    ARROW  shift, and go to state 257


State 164

  257 file_name: ARROW • $@87 STRINGLITERAL
  259          | ARROW • $@88 IDENTIFIER

    IDENTIFIER  reduce using rule 258 ($@88)
    $default    reduce using rule 256 ($@87)

    $@87  go to state 258
    $@88  go to state 259


State 165

  261 input: IP file_name • COLON IDENTIFIER nextip

    COLON  shift, and go to state 260


State 166

  272 output: OP COLON • opstring file_name SEMICOLON

    STRINGLITERAL  shift, and go to state 261
    IDENTIFIER     shift, and go to state 262

    stringvalues  go to state 263
    opstring      go to state 264


State 167

  151 LHS: IDENTIFIER $@30 • SQUAREOPEN $@31 arr_access SQUARECLOSE

    SQUAREOPEN  shift, and go to state 265


State 168

  357 access: IDENTIFIER $@117 • ARROW $@118 id

    ARROW  shift, and go to state 266


State 169

  312 func_scope: SCOPEOPEN $@104 • func_statements $@105 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 103
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 315 (func_statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 104
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 108
    loop                  go to state 109
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 112
    when_statement        go to state 113
    analyze_statement     go to state 114
    func_invoke2          go to state 115
    func_invoke           go to state 116
    task_invoke           go to state 117
    sleep                 go to state 118
    input                 go to state 119
    return_statement      go to state 120
    output                go to state 121
    func_scope            go to state 122
    func_statements       go to state 267
    access                go to state 124
    method_invoke2        go to state 125
    method_invoke         go to state 126


State 170

  165 assignment_statement: LHS EQ • $@34 RHS

    $default  reduce using rule 164 ($@34)

    $@34  go to state 268


State 171

   21 expression_op: INCR •

    $default  reduce using rule 21 (expression_op)


State 172

   22 expression_op: DECR •

    $default  reduce using rule 22 (expression_op)


State 173

   19 expression_op: ASSN_MODULO •

    $default  reduce using rule 19 (expression_op)


State 174

   18 expression_op: ASSN_EXPONENT •

    $default  reduce using rule 18 (expression_op)


State 175

   17 expression_op: ASSN_DIV •

    $default  reduce using rule 17 (expression_op)


State 176

   20 expression_op: ASSN_MUL •

    $default  reduce using rule 20 (expression_op)


State 177

  166 expression_statement: LHS expression_op • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 269
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 178

  170 log: assignment_statement SEMICOLON •

    $default  reduce using rule 170 (log)


State 179

  171 log: expression_statement SEMICOLON •

    $default  reduce using rule 171 (log)


State 180

  230 func_invoke2: func_invoke SEMICOLON •

    $default  reduce using rule 230 (func_invoke2)


State 181

  314 func_statements: func_scope func_statements •

    $default  reduce using rule 314 (func_statements)


State 182

  298 func_body: SCOPEOPEN $@102 func_statements $@103 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 270


State 183

  435 method_invoke2: method_invoke SEMICOLON •

    $default  reduce using rule 435 (method_invoke2)


State 184

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 • args $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

    NULL_ARGS      shift, and go to state 200
    NNUM           shift, and go to state 201
    NDEC           shift, and go to state 202
    NBOOL          shift, and go to state 203
    NLET           shift, and go to state 204
    NTEXT          shift, and go to state 205
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 206
    ADEC           shift, and go to state 207
    ABOOL          shift, and go to state 208
    ALET           shift, and go to state 209
    ATEXT          shift, and go to state 210
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 211
    AUDATATYPE     shift, and go to state 212
    NARRUDATATYPE  shift, and go to state 213
    AARRUDATATYPE  shift, and go to state 214

    all_datatypes   go to state 215
    nonAtomicArray  go to state 216
    atomicArray     go to state 217
    func_args       go to state 218
    args            go to state 271


State 185

  379 start: SCOPEOPEN $@125 • start $@126 SCOPECLOSE $@127 start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 272
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 186

  367 start: declaration start •

    $default  reduce using rule 367 (start)


State 187

  368 start: log start •

    $default  reduce using rule 368 (start)


State 188

  370 start: loop start •

    $default  reduce using rule 370 (start)


State 189

  369 start: conditional start •

    $default  reduce using rule 369 (start)


State 190

  373 start: analyze_statement start •

    $default  reduce using rule 373 (start)


State 191

  371 start: func_invoke2 start •

    $default  reduce using rule 371 (start)


State 192

  372 start: task_invoke start •

    $default  reduce using rule 372 (start)


State 193

  380 start: sleep start •

    $default  reduce using rule 380 (start)


State 194

  375 start: input start •

    $default  reduce using rule 375 (start)


State 195

  374 start: output start •

    $default  reduce using rule 374 (start)


State 196

  366 startdec: START $@122 SCOPEOPEN $@123 start $@124 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 273


State 197

  381 start: method_invoke2 start •

    $default  reduce using rule 381 (start)


State 198

  387 type_declaration: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 • type_scope methods $@131 SCOPECLOSE

    ATOMIC      shift, and go to state 274
    ARRAY       shift, and go to state 275
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 389 (type_scope)

    nonAtomicSimple    go to state 31
    atomicSimple       go to state 32
    nonAtomicArray     go to state 33
    atomicArray        go to state 34
    simpleDatatype     go to state 276
    arrayDatatype      go to state 277
    type_scope         go to state 278
    declaration_t      go to state 279
    declarationStmt_t  go to state 280


State 199

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER $@99 COLON $@100 • args COLON $@101 func_return

    NULL_ARGS      shift, and go to state 200
    NNUM           shift, and go to state 201
    NDEC           shift, and go to state 202
    NBOOL          shift, and go to state 203
    NLET           shift, and go to state 204
    NTEXT          shift, and go to state 205
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 206
    ADEC           shift, and go to state 207
    ABOOL          shift, and go to state 208
    ALET           shift, and go to state 209
    ATEXT          shift, and go to state 210
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 211
    AUDATATYPE     shift, and go to state 212
    NARRUDATATYPE  shift, and go to state 213
    AARRUDATATYPE  shift, and go to state 214

    all_datatypes   go to state 215
    nonAtomicArray  go to state 216
    atomicArray     go to state 217
    func_args       go to state 218
    args            go to state 281


State 200

  284 args: NULL_ARGS •

    $default  reduce using rule 284 (args)


State 201

    7 all_datatypes: NNUM •

    $default  reduce using rule 7 (all_datatypes)


State 202

    6 all_datatypes: NDEC •

    $default  reduce using rule 6 (all_datatypes)


State 203

    5 all_datatypes: NBOOL •

    $default  reduce using rule 5 (all_datatypes)


State 204

    9 all_datatypes: NLET •

    $default  reduce using rule 9 (all_datatypes)


State 205

    8 all_datatypes: NTEXT •

    $default  reduce using rule 8 (all_datatypes)


State 206

   14 all_datatypes: ANUM •

    $default  reduce using rule 14 (all_datatypes)


State 207

   11 all_datatypes: ADEC •

    $default  reduce using rule 11 (all_datatypes)


State 208

   10 all_datatypes: ABOOL •

    $default  reduce using rule 10 (all_datatypes)


State 209

   12 all_datatypes: ALET •

    $default  reduce using rule 12 (all_datatypes)


State 210

   13 all_datatypes: ATEXT •

    $default  reduce using rule 13 (all_datatypes)


State 211

    1 all_datatypes: NUDATATYPE •

    $default  reduce using rule 1 (all_datatypes)


State 212

    2 all_datatypes: AUDATATYPE •

    $default  reduce using rule 2 (all_datatypes)


State 213

    3 all_datatypes: NARRUDATATYPE •

    $default  reduce using rule 3 (all_datatypes)


State 214

    4 all_datatypes: AARRUDATATYPE •

    $default  reduce using rule 4 (all_datatypes)


State 215

  279 func_args: all_datatypes • IDENTIFIER $@93

    IDENTIFIER  shift, and go to state 282


State 216

   15 all_datatypes: nonAtomicArray •

    $default  reduce using rule 15 (all_datatypes)


State 217

   16 all_datatypes: atomicArray •

    $default  reduce using rule 16 (all_datatypes)


State 218

  282 func_args: func_args • COMMA $@94 all_datatypes IDENTIFIER $@95
  283 args: func_args •

    COMMA  shift, and go to state 283

    $default  reduce using rule 283 (args)


State 219

  291 func_decl: FUNC IDENTIFIER $@96 COLON $@97 args • COLON $@98 func_return

    COLON  shift, and go to state 284


State 220

  120 simpleList: IDENTIFIER $@10 EQ $@11 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 285
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 221

  117 simpleList: simpleList COMMA $@9 IDENTIFIER •

    $default  reduce using rule 117 (simpleList)


State 222

  124 simpleList: simpleList COMMA $@12 IDENTIFIER • $@13 EQ $@14 RHS

    $default  reduce using rule 122 ($@13)

    $@13  go to state 286


State 223

  127 arrayList: IDENTIFIER $@15 SQUAREOPEN $@16 • dimlist SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 289
    dimlist         go to state 290


State 224

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN $@21 • dimlist SQUARECLOSE $@22 EQ $@23 RHS

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 289
    dimlist         go to state 291


State 225

  131 arrayList: arrayList COMMA $@17 IDENTIFIER • $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE

    $default  reduce using rule 129 ($@18)

    $@18  go to state 292


State 226

  142 arrayList: arrayList COMMA $@24 IDENTIFIER • $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS

    $default  reduce using rule 138 ($@25)

    $@25  go to state 293


State 227

  207 when_statement: WHEN $@55 SQUAREOPEN • $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend

    $default  reduce using rule 202 ($@56)

    $@56  go to state 294


State 228

  199 while_loop: REPEAT $@50 SQUAREOPEN • $@51 RHS SQUARECLOSE $@52 SCOPEOPEN $@53 statements $@54 SCOPECLOSE

    $default  reduce using rule 195 ($@51)

    $@51  go to state 295


State 229

  193 for_loop: FOR $@43 SQUAREOPEN • $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    $default  reduce using rule 187 ($@44)

    $@44  go to state 296


State 230

  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON • arith_expr COLON arith_expr COLON arguments COLON SEMICOLON $@78
  244            | MAKE_PARALLEL IDENTIFIER COLON • arith_expr COLON arith_expr COLON NULL_ARGS COLON SEMICOLON

    INTEGERLITERAL  shift, and go to state 297
    FLOATLITERAL    shift, and go to state 298
    IDENTIFIER      shift, and go to state 299
    ROUNDOPEN       shift, and go to state 300

    arith_operand  go to state 301
    arith_expr     go to state 302


State 231

  227 analyze_statement: ANALYZE analyze_label COLON • analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax SEMICOLON $@70

    STRINGLITERAL  shift, and go to state 155
    IDENTIFIER     shift, and go to state 156

    analyze_label  go to state 303


State 232

  250 sleep: SLEEP $@79 ROUNDOPEN • $@80 FLOATLITERAL $@81 ROUNDCLOSE $@82 SEMICOLON

    $default  reduce using rule 247 ($@80)

    $@80  go to state 304


State 233

  255 sleep: SLEEP $@83 ROUNDOPEN • $@84 INTEGERLITERAL $@85 ROUNDCLOSE $@86 SEMICOLON

    $default  reduce using rule 252 ($@84)

    $@84  go to state 305


State 234

   65 RHS: TID •

    $default  reduce using rule 65 (RHS)


State 235

  245 get_invoke: GET • ARROW TIME

    ARROW  shift, and go to state 306


State 236

  446 in_stmt: IN • $@166 ARROW $@167 IDENTIFIER $@168

    $default  reduce using rule 443 ($@166)

    $@166  go to state 307


State 237

  234 func_invoke: INVOKE • IDENTIFIER $@71 COLON $@72 arguments $@73
  238            | INVOKE • IDENTIFIER $@74 COLON $@75 NULL_ARGS COLON $@76
  442 method_invoke: INVOKE • id ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args COLON $@165
  452 in_stmt: INVOKE • IN $@169 ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments COLON $@173
  458        | INVOKE • IN $@174 ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178

    IN          shift, and go to state 308
    IDENTIFIER  shift, and go to state 162

    id  go to state 163


State 238

   75 RHS: NEG • $@5 ROUNDOPEN $@6 RHS ROUNDCLOSE

    $default  reduce using rule 73 ($@5)

    $@5  go to state 309


State 239

   56 constants: INTEGERLITERAL •

    $default  reduce using rule 56 (constants)


State 240

   60 constants: STRINGLITERAL •

    $default  reduce using rule 60 (constants)


State 241

   57 constants: CHARACTERLITERAL •

    $default  reduce using rule 57 (constants)


State 242

   59 constants: BOOLEANLITERAL •

    $default  reduce using rule 59 (constants)


State 243

   58 constants: FLOATLITERAL •

    $default  reduce using rule 58 (constants)


State 244

   49 T: IDENTIFIER • $@2 E

    $default  reduce using rule 48 ($@2)

    $@2  go to state 310


State 245

   70 RHS: ROUNDOPEN • $@3 RHS all_ops next ROUNDCLOSE
   72    | ROUNDOPEN • $@4 RHS ROUNDCLOSE

    TID               reduce using rule 69 ($@3)
    TID               [reduce using rule 71 ($@4)]
    GET               reduce using rule 69 ($@3)
    GET               [reduce using rule 71 ($@4)]
    IN                reduce using rule 69 ($@3)
    IN                [reduce using rule 71 ($@4)]
    INVOKE            reduce using rule 69 ($@3)
    INVOKE            [reduce using rule 71 ($@4)]
    NEG               reduce using rule 69 ($@3)
    NEG               [reduce using rule 71 ($@4)]
    INTEGERLITERAL    reduce using rule 69 ($@3)
    INTEGERLITERAL    [reduce using rule 71 ($@4)]
    STRINGLITERAL     reduce using rule 69 ($@3)
    STRINGLITERAL     [reduce using rule 71 ($@4)]
    CHARACTERLITERAL  reduce using rule 69 ($@3)
    CHARACTERLITERAL  [reduce using rule 71 ($@4)]
    BOOLEANLITERAL    reduce using rule 69 ($@3)
    BOOLEANLITERAL    [reduce using rule 71 ($@4)]
    FLOATLITERAL      reduce using rule 69 ($@3)
    FLOATLITERAL      [reduce using rule 71 ($@4)]
    IDENTIFIER        reduce using rule 69 ($@3)
    IDENTIFIER        [reduce using rule 71 ($@4)]
    ROUNDOPEN         reduce using rule 69 ($@3)
    ROUNDOPEN         [reduce using rule 71 ($@4)]
    $default          reduce using rule 69 ($@3)

    $@3  go to state 311
    $@4  go to state 312

    reduce/reduce conflict on tokens TID, GET, IN, INVOKE, NEG, INTEGERLITERAL, STRINGLITERAL, CHARACTERLITERAL, BOOLEANLITERAL, FLOATLITERAL, IDENTIFIER, ROUNDOPEN:
       69 $@3: ε •
       71 $@4: ε •
      First example: simpleDatatype $@7 IDENTIFIER $@10 EQ $@11 ROUNDOPEN • TID all_ops next ROUNDCLOSE SEMICOLON begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                             $end
             ↳ 41: declaration                                                                                                                           begin
                   ↳ 101: declarationStmt                                                                                                      SEMICOLON
                          ↳ 112: simpleDatatype $@7 simpleList
                                                    ↳ 120: IDENTIFIER $@10 EQ $@11 RHS
                                                                                   ↳ 70: ROUNDOPEN $@3       RHS       all_ops next ROUNDCLOSE
                                                                                                   ↳ 69: ε • ↳ 65: TID
      Second example: simpleDatatype $@7 IDENTIFIER $@10 EQ $@11 ROUNDOPEN • TID ROUNDCLOSE SEMICOLON begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                $end
             ↳ 41: declaration                                                                                                              begin
                   ↳ 101: declarationStmt                                                                                         SEMICOLON
                          ↳ 112: simpleDatatype $@7 simpleList
                                                    ↳ 120: IDENTIFIER $@10 EQ $@11 RHS
                                                                                   ↳ 72: ROUNDOPEN $@4       RHS       ROUNDCLOSE
                                                                                                   ↳ 71: ε • ↳ 65: TID



State 246

   64 RHS: T •

    $default  reduce using rule 64 (RHS)


State 247

   63 RHS: constants •

    $default  reduce using rule 63 (RHS)


State 248

  269 return_statement: RETURN $@91 RHS • SEMICOLON

    SEMICOLON  shift, and go to state 313


State 249

   50 T: func_invoke •

    $default  reduce using rule 50 (T)


State 250

   66 RHS: get_invoke •

    $default  reduce using rule 66 (RHS)


State 251

   67 RHS: method_invoke •

    $default  reduce using rule 67 (RHS)


State 252

   68 RHS: in_stmt •

    $default  reduce using rule 68 (RHS)


State 253

  271 return_statement: RETURN $@92 NVOID • SEMICOLON

    SEMICOLON  shift, and go to state 314


State 254

  234 func_invoke: INVOKE IDENTIFIER $@71 • COLON $@72 arguments $@73

    COLON  shift, and go to state 315


State 255

  238 func_invoke: INVOKE IDENTIFIER $@74 • COLON $@75 NULL_ARGS COLON $@76

    COLON  shift, and go to state 316


State 256

  359 id: IDENTIFIER $@119 •

    $default  reduce using rule 359 (id)


State 257

  362 id: id ARROW • $@120 IDENTIFIER $@121
  442 method_invoke: INVOKE id ARROW • $@162 IDENTIFIER $@163 COLON $@164 method_args COLON $@165

    IDENTIFIER  reduce using rule 360 ($@120)
    IDENTIFIER  [reduce using rule 438 ($@162)]
    $default    reduce using rule 360 ($@120)

    $@120  go to state 317
    $@162  go to state 318

    reduce/reduce conflict on token IDENTIFIER:
      360 $@120: ε •
      438 $@162: ε •
      First example: START $@122 SCOPEOPEN $@123 INVOKE id ARROW • IDENTIFIER $@121 ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args COLON $@165 SEMICOLON start $@124 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                    $end
             ↳ 40: startdec                                                                                                                                                                                                     begin
                   ↳ 366: START $@122 SCOPEOPEN $@123 start                                                                                                                                                    $@124 SCOPECLOSE
                                                      ↳ 381: method_invoke2                                                                                                                              start
                                                             ↳ 435: method_invoke                                                                                                              SEMICOLON
                                                                    ↳ 442: INVOKE id                                          ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args COLON $@165
                                                                                  ↳ 362: id ARROW $@120      IDENTIFIER $@121
                                                                                                  ↳ 360: ε •
      Second example: START $@122 SCOPEOPEN $@123 INVOKE id ARROW • IDENTIFIER $@163 COLON $@164 method_args COLON $@165 SEMICOLON start $@124 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                $end
             ↳ 40: startdec                                                                                                                                                                 begin
                   ↳ 366: START $@122 SCOPEOPEN $@123 start                                                                                                                $@124 SCOPECLOSE
                                                      ↳ 381: method_invoke2                                                                                          start
                                                             ↳ 435: method_invoke                                                                          SEMICOLON
                                                                    ↳ 442: INVOKE id ARROW $@162      IDENTIFIER $@163 COLON $@164 method_args COLON $@165
                                                                                           ↳ 438: ε •



State 258

  257 file_name: ARROW $@87 • STRINGLITERAL

    STRINGLITERAL  shift, and go to state 319


State 259

  259 file_name: ARROW $@88 • IDENTIFIER

    IDENTIFIER  shift, and go to state 320


State 260

  261 input: IP file_name COLON • IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 321


State 261

  266 stringvalues: STRINGLITERAL •

    $default  reduce using rule 266 (stringvalues)


State 262

  267 stringvalues: IDENTIFIER •

    $default  reduce using rule 267 (stringvalues)


State 263

  273 opstring: stringvalues • nextop

    HASH  shift, and go to state 322

    $default  reduce using rule 275 (nextop)

    nextop  go to state 323


State 264

  272 output: OP COLON opstring • file_name SEMICOLON

    ARROW  shift, and go to state 164

    $default  reduce using rule 260 (file_name)

    file_name  go to state 324


State 265

  151 LHS: IDENTIFIER $@30 SQUAREOPEN • $@31 arr_access SQUARECLOSE

    $default  reduce using rule 150 ($@31)

    $@31  go to state 325


State 266

  357 access: IDENTIFIER $@117 ARROW • $@118 id

    $default  reduce using rule 356 ($@118)

    $@118  go to state 326


State 267

  312 func_scope: SCOPEOPEN $@104 func_statements • $@105 SCOPECLOSE

    $default  reduce using rule 311 ($@105)

    $@105  go to state 327


State 268

  165 assignment_statement: LHS EQ $@34 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 328
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 269

  166 expression_statement: LHS expression_op RHS •

    $default  reduce using rule 166 (expression_statement)


State 270

  298 func_body: SCOPEOPEN $@102 func_statements $@103 SCOPECLOSE •

    $default  reduce using rule 298 (func_body)


State 271

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 args • $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

    $default  reduce using rule 319 ($@109)

    $@109  go to state 329


State 272

  379 start: SCOPEOPEN $@125 start • $@126 SCOPECLOSE $@127 start

    $default  reduce using rule 377 ($@126)

    $@126  go to state 330


State 273

  366 startdec: START $@122 SCOPEOPEN $@123 start $@124 SCOPECLOSE •

    $default  reduce using rule 366 (startdec)


State 274

  106 simpleDatatype: ATOMIC • AUDATATYPE
  110 arrayDatatype: ATOMIC • ARRAY AARRUDATATYPE

    ARRAY       shift, and go to state 331
    AUDATATYPE  shift, and go to state 52


State 275

  109 arrayDatatype: ARRAY • NARRUDATATYPE

    NARRUDATATYPE  shift, and go to state 54


State 276

  392 declarationStmt_t: simpleDatatype • simpleList_t

    IDENTIFIER  shift, and go to state 332

    simpleList    go to state 333
    simpleList_t  go to state 334


State 277

  393 declarationStmt_t: arrayDatatype • arrayList_t

    IDENTIFIER  shift, and go to state 335

    arrayList    go to state 336
    arrayList_t  go to state 337


State 278

  387 type_declaration: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope • methods $@131 SCOPECLOSE

    $default  reduce using rule 427 (methods)

    methods  go to state 338


State 279

  388 type_scope: declaration_t • type_scope

    ATOMIC      shift, and go to state 274
    ARRAY       shift, and go to state 275
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 389 (type_scope)

    nonAtomicSimple    go to state 31
    atomicSimple       go to state 32
    nonAtomicArray     go to state 33
    atomicArray        go to state 34
    simpleDatatype     go to state 276
    arrayDatatype      go to state 277
    type_scope         go to state 339
    declaration_t      go to state 279
    declarationStmt_t  go to state 280


State 280

  391 declaration_t: declarationStmt_t • SEMICOLON $@132

    SEMICOLON  shift, and go to state 340


State 281

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER $@99 COLON $@100 args • COLON $@101 func_return

    COLON  shift, and go to state 341


State 282

  279 func_args: all_datatypes IDENTIFIER • $@93

    $default  reduce using rule 278 ($@93)

    $@93  go to state 342


State 283

  282 func_args: func_args COMMA • $@94 all_datatypes IDENTIFIER $@95

    $default  reduce using rule 280 ($@94)

    $@94  go to state 343


State 284

  291 func_decl: FUNC IDENTIFIER $@96 COLON $@97 args COLON • $@98 func_return

    $default  reduce using rule 290 ($@98)

    $@98  go to state 344


State 285

  120 simpleList: IDENTIFIER $@10 EQ $@11 RHS •

    $default  reduce using rule 120 (simpleList)


State 286

  124 simpleList: simpleList COMMA $@12 IDENTIFIER $@13 • EQ $@14 RHS

    EQ  shift, and go to state 345


State 287

  143 array_inValues: INTEGERLITERAL •

    $default  reduce using rule 143 (array_inValues)


State 288

  144 array_inValues: IDENTIFIER •

    $default  reduce using rule 144 (array_inValues)


State 289

  147 dimlist: array_inValues •

    $default  reduce using rule 147 (dimlist)


State 290

  127 arrayList: IDENTIFIER $@15 SQUAREOPEN $@16 dimlist • SQUARECLOSE
  146 dimlist: dimlist • COMMA $@29 array_inValues

    COMMA        shift, and go to state 346
    SQUARECLOSE  shift, and go to state 347


State 291

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN $@21 dimlist • SQUARECLOSE $@22 EQ $@23 RHS
  146 dimlist: dimlist • COMMA $@29 array_inValues

    COMMA        shift, and go to state 346
    SQUARECLOSE  shift, and go to state 348


State 292

  131 arrayList: arrayList COMMA $@17 IDENTIFIER $@18 • SQUAREOPEN $@19 dimlist SQUARECLOSE

    SQUAREOPEN  shift, and go to state 349


State 293

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 • SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS

    SQUAREOPEN  shift, and go to state 350


State 294

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 • RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 351
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 295

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 • RHS SQUARECLOSE $@52 SCOPEOPEN $@53 statements $@54 SCOPECLOSE

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 352
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 296

  193 for_loop: FOR $@43 SQUAREOPEN $@44 • both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    ATOMIC      shift, and go to state 353
    IDENTIFIER  shift, and go to state 354
    ROUNDOPEN   shift, and go to state 355
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    NUDATATYPE  shift, and go to state 29

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    simpleDatatype        go to state 356
    LHS                   go to state 357
    assignment_statement  go to state 358
    both_assignment       go to state 359
    access                go to state 124


State 297

  158 arith_operand: INTEGERLITERAL •

    $default  reduce using rule 158 (arith_operand)


State 298

  159 arith_operand: FLOATLITERAL •

    $default  reduce using rule 159 (arith_operand)


State 299

  157 arith_operand: IDENTIFIER •

    $default  reduce using rule 157 (arith_operand)


State 300

  161 arith_operand: ROUNDOPEN • $@33 arith_expr ROUNDCLOSE

    $default  reduce using rule 160 ($@33)

    $@33  go to state 360


State 301

  163 arith_expr: arith_operand •

    $default  reduce using rule 163 (arith_expr)


State 302

  162 arith_expr: arith_expr • arithmetic_op arith_operand
  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr • COLON arith_expr COLON arguments COLON SEMICOLON $@78
  244            | MAKE_PARALLEL IDENTIFIER COLON arith_expr • COLON arith_expr COLON NULL_ARGS COLON SEMICOLON

    DIV       shift, and go to state 361
    ADD       shift, and go to state 362
    SUB       shift, and go to state 363
    MUL       shift, and go to state 364
    EXPONENT  shift, and go to state 365
    MODULO    shift, and go to state 366
    COLON     shift, and go to state 367

    arithmetic_op  go to state 368


State 303

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label • COLON analysis_arrays COLON analysis_arrays analyze_syntax SEMICOLON $@70

    COLON  shift, and go to state 369


State 304

  250 sleep: SLEEP $@79 ROUNDOPEN $@80 • FLOATLITERAL $@81 ROUNDCLOSE $@82 SEMICOLON

    FLOATLITERAL  shift, and go to state 370


State 305

  255 sleep: SLEEP $@83 ROUNDOPEN $@84 • INTEGERLITERAL $@85 ROUNDCLOSE $@86 SEMICOLON

    INTEGERLITERAL  shift, and go to state 371


State 306

  245 get_invoke: GET ARROW • TIME

    TIME  shift, and go to state 372


State 307

  446 in_stmt: IN $@166 • ARROW $@167 IDENTIFIER $@168

    ARROW  shift, and go to state 373


State 308

  452 in_stmt: INVOKE IN • $@169 ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments COLON $@173
  458        | INVOKE IN • $@174 ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178

    ARROW     reduce using rule 447 ($@169)
    ARROW     [reduce using rule 453 ($@174)]
    $default  reduce using rule 447 ($@169)

    $@169  go to state 374
    $@174  go to state 375

    reduce/reduce conflict on token ARROW:
      447 $@169: ε •
      453 $@174: ε •
      First example: simpleDatatype $@7 IDENTIFIER $@10 EQ $@11 INVOKE IN • ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments COLON $@173 SEMICOLON begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                  $end
             ↳ 41: declaration                                                                                                                                                                begin
                   ↳ 101: declarationStmt                                                                                                                                           SEMICOLON
                          ↳ 112: simpleDatatype $@7 simpleList
                                                    ↳ 120: IDENTIFIER $@10 EQ $@11 RHS
                                                                                   ↳ 68: in_stmt
                                                                                         ↳ 452: INVOKE IN $@169      ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments COLON $@173
                                                                                                          ↳ 447: ε •
      Second example: simpleDatatype $@7 IDENTIFIER $@10 EQ $@11 INVOKE IN • ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178 SEMICOLON begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                  $end
             ↳ 41: declaration                                                                                                                                                                begin
                   ↳ 101: declarationStmt                                                                                                                                           SEMICOLON
                          ↳ 112: simpleDatatype $@7 simpleList
                                                    ↳ 120: IDENTIFIER $@10 EQ $@11 RHS
                                                                                   ↳ 68: in_stmt
                                                                                         ↳ 458: INVOKE IN $@174      ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178
                                                                                                          ↳ 453: ε •



State 309

   75 RHS: NEG $@5 • ROUNDOPEN $@6 RHS ROUNDCLOSE

    ROUNDOPEN  shift, and go to state 376


State 310

   49 T: IDENTIFIER $@2 • E

    SQUAREOPEN  shift, and go to state 377

    $default  reduce using rule 45 (E)

    E  go to state 378


State 311

   70 RHS: ROUNDOPEN $@3 • RHS all_ops next ROUNDCLOSE

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 379
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 312

   72 RHS: ROUNDOPEN $@4 • RHS ROUNDCLOSE

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 380
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 313

  269 return_statement: RETURN $@91 RHS SEMICOLON •

    $default  reduce using rule 269 (return_statement)


State 314

  271 return_statement: RETURN $@92 NVOID SEMICOLON •

    $default  reduce using rule 271 (return_statement)


State 315

  234 func_invoke: INVOKE IDENTIFIER $@71 COLON • $@72 arguments $@73

    $default  reduce using rule 232 ($@72)

    $@72  go to state 381


State 316

  238 func_invoke: INVOKE IDENTIFIER $@74 COLON • $@75 NULL_ARGS COLON $@76

    $default  reduce using rule 236 ($@75)

    $@75  go to state 382


State 317

  362 id: id ARROW $@120 • IDENTIFIER $@121

    IDENTIFIER  shift, and go to state 383


State 318

  442 method_invoke: INVOKE id ARROW $@162 • IDENTIFIER $@163 COLON $@164 method_args COLON $@165

    IDENTIFIER  shift, and go to state 384


State 319

  257 file_name: ARROW $@87 STRINGLITERAL •

    $default  reduce using rule 257 (file_name)


State 320

  259 file_name: ARROW $@88 IDENTIFIER •

    $default  reduce using rule 259 (file_name)


State 321

  261 input: IP file_name COLON IDENTIFIER • nextip

    COMMA      shift, and go to state 385
    SEMICOLON  shift, and go to state 386

    nextip  go to state 387


State 322

  274 nextop: HASH • stringvalues nextop

    STRINGLITERAL  shift, and go to state 261
    IDENTIFIER     shift, and go to state 262

    stringvalues  go to state 388


State 323

  273 opstring: stringvalues nextop •

    $default  reduce using rule 273 (opstring)


State 324

  272 output: OP COLON opstring file_name • SEMICOLON

    SEMICOLON  shift, and go to state 389


State 325

  151 LHS: IDENTIFIER $@30 SQUAREOPEN $@31 • arr_access SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 297
    FLOATLITERAL    shift, and go to state 298
    IDENTIFIER      shift, and go to state 299
    ROUNDOPEN       shift, and go to state 300

    arr_access     go to state 390
    exprlist       go to state 391
    arith_operand  go to state 301
    arith_expr     go to state 392


State 326

  357 access: IDENTIFIER $@117 ARROW $@118 • id

    IDENTIFIER  shift, and go to state 393

    id  go to state 394


State 327

  312 func_scope: SCOPEOPEN $@104 func_statements $@105 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 395


State 328

  165 assignment_statement: LHS EQ $@34 RHS •

    $default  reduce using rule 165 (assignment_statement)


State 329

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 args $@109 • SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE

    SCOPEOPEN  shift, and go to state 396


State 330

  379 start: SCOPEOPEN $@125 start $@126 • SCOPECLOSE $@127 start

    SCOPECLOSE  shift, and go to state 397


State 331

  110 arrayDatatype: ATOMIC ARRAY • AARRUDATATYPE

    AARRUDATATYPE  shift, and go to state 73


State 332

  115 simpleList: IDENTIFIER •
  120           | IDENTIFIER • $@10 EQ $@11 RHS
  395 simpleList_t: IDENTIFIER • $@133
  401             | IDENTIFIER • $@136 EQ $@137 RHS

    EQ         reduce using rule 118 ($@10)
    EQ         [reduce using rule 399 ($@136)]
    SEMICOLON  reduce using rule 394 ($@133)
    $default   reduce using rule 115 (simpleList)

    $@10   go to state 86
    $@133  go to state 398
    $@136  go to state 399

    reduce/reduce conflict on token EQ:
      118 $@10: ε •
      399 $@136: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 simpleDatatype IDENTIFIER • EQ $@11 RHS COMMA $@134 IDENTIFIER $@135 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                             $end
             ↳ 44: type_declaration                                                                                                                                                                                                      begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                  methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                             type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                  SEMICOLON $@132
                                                                                  ↳ 392: simpleDatatype simpleList_t
                                                                                                        ↳ 398: simpleList                               COMMA $@134 IDENTIFIER $@135
                                                                                                               ↳ 120: IDENTIFIER $@10       EQ $@11 RHS
                                                                                                                                 ↳ 118: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 simpleDatatype IDENTIFIER • EQ $@137 RHS SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                          $end
             ↳ 44: type_declaration                                                                                                                                                                   begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                               methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                          type_scope
                                                                           ↳ 391: declarationStmt_t                                               SEMICOLON $@132
                                                                                  ↳ 392: simpleDatatype simpleList_t
                                                                                                        ↳ 401: IDENTIFIER $@136      EQ $@137 RHS
                                                                                                                          ↳ 399: ε •



State 333

  117 simpleList: simpleList • COMMA $@9 IDENTIFIER
  124           | simpleList • COMMA $@12 IDENTIFIER $@13 EQ $@14 RHS
  398 simpleList_t: simpleList • COMMA $@134 IDENTIFIER $@135
  405             | simpleList • COMMA $@138 IDENTIFIER $@139 EQ $@140 RHS

    COMMA  shift, and go to state 400


State 334

  392 declarationStmt_t: simpleDatatype simpleList_t •

    $default  reduce using rule 392 (declarationStmt_t)


State 335

  127 arrayList: IDENTIFIER • $@15 SQUAREOPEN $@16 dimlist SQUARECLOSE
  136          | IDENTIFIER • $@20 SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS
  409 arrayList_t: IDENTIFIER • $@141 SQUAREOPEN $@142 dimlist SQUARECLOSE $@143
  419            | IDENTIFIER • $@148 SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS

    SQUAREOPEN  reduce using rule 125 ($@15)
    SQUAREOPEN  [reduce using rule 132 ($@20)]
    SQUAREOPEN  [reduce using rule 406 ($@141)]
    SQUAREOPEN  [reduce using rule 415 ($@148)]
    $default    reduce using rule 125 ($@15)

    $@15   go to state 88
    $@20   go to state 89
    $@141  go to state 401
    $@148  go to state 402

    reduce/reduce conflict on token SQUAREOPEN:
      125 $@15: ε •
      132 $@20: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@16 dimlist SQUARECLOSE COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                               $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                        begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                    methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                               type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                    SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                        COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 127: IDENTIFIER $@15       SQUAREOPEN $@16 dimlist SQUARECLOSE
                                                                                                                                ↳ 125: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                         begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                     methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                     SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                         COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 136: IDENTIFIER $@20       SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS
                                                                                                                                ↳ 132: ε •

    reduce/reduce conflict on token SQUAREOPEN:
      125 $@15: ε •
      406 $@141: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@16 dimlist SQUARECLOSE COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                               $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                        begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                    methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                               type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                    SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                        COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 127: IDENTIFIER $@15       SQUAREOPEN $@16 dimlist SQUARECLOSE
                                                                                                                                ↳ 125: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@142 dimlist SQUARECLOSE $@143 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                       $end
             ↳ 44: type_declaration                                                                                                                                                                                                begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                            methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                       type_scope
                                                                           ↳ 391: declarationStmt_t                                                                            SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 409: IDENTIFIER $@141      SQUAREOPEN $@142 dimlist SQUARECLOSE $@143
                                                                                                                         ↳ 406: ε •

    reduce/reduce conflict on token SQUAREOPEN:
      125 $@15: ε •
      415 $@148: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@16 dimlist SQUARECLOSE COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                               $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                        begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                    methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                               type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                    SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                        COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 127: IDENTIFIER $@15       SQUAREOPEN $@16 dimlist SQUARECLOSE
                                                                                                                                ↳ 125: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                    $end
             ↳ 44: type_declaration                                                                                                                                                                                                             begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                         methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                    type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                         SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 419: IDENTIFIER $@148      SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS
                                                                                                                         ↳ 415: ε •

    reduce/reduce conflict on token SQUAREOPEN:
      132 $@20: ε •
      406 $@141: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                         begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                     methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                     SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                         COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 136: IDENTIFIER $@20       SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS
                                                                                                                                ↳ 132: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@142 dimlist SQUARECLOSE $@143 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                       $end
             ↳ 44: type_declaration                                                                                                                                                                                                begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                            methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                       type_scope
                                                                           ↳ 391: declarationStmt_t                                                                            SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 409: IDENTIFIER $@141      SQUAREOPEN $@142 dimlist SQUARECLOSE $@143
                                                                                                                         ↳ 406: ε •

    reduce/reduce conflict on token SQUAREOPEN:
      132 $@20: ε •
      415 $@148: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                         begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                     methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                     SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                         COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 136: IDENTIFIER $@20       SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS
                                                                                                                                ↳ 132: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                    $end
             ↳ 44: type_declaration                                                                                                                                                                                                             begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                         methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                    type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                         SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 419: IDENTIFIER $@148      SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS
                                                                                                                         ↳ 415: ε •

    reduce/reduce conflict on token SQUAREOPEN:
      406 $@141: ε •
      415 $@148: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@142 dimlist SQUARECLOSE $@143 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                       $end
             ↳ 44: type_declaration                                                                                                                                                                                                begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                            methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                       type_scope
                                                                           ↳ 391: declarationStmt_t                                                                            SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 409: IDENTIFIER $@141      SQUAREOPEN $@142 dimlist SQUARECLOSE $@143
                                                                                                                         ↳ 406: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype IDENTIFIER • SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                    $end
             ↳ 44: type_declaration                                                                                                                                                                                                             begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                         methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                    type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                         SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 419: IDENTIFIER $@148      SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS
                                                                                                                         ↳ 415: ε •



State 336

  131 arrayList: arrayList • COMMA $@17 IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE
  142          | arrayList • COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS
  414 arrayList_t: arrayList • COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
  425            | arrayList • COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS

    COMMA  shift, and go to state 403


State 337

  393 declarationStmt_t: arrayDatatype arrayList_t •

    $default  reduce using rule 393 (declarationStmt_t)


State 338

  387 type_declaration: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope methods • $@131 SCOPECLOSE
  426 methods: methods • method

    FUNC  shift, and go to state 404

    $default  reduce using rule 386 ($@131)

    $@131        go to state 405
    method       go to state 406
    func_decl_m  go to state 407


State 339

  388 type_scope: declaration_t type_scope •

    $default  reduce using rule 388 (type_scope)


State 340

  391 declaration_t: declarationStmt_t SEMICOLON • $@132

    $default  reduce using rule 390 ($@132)

    $@132  go to state 408


State 341

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER $@99 COLON $@100 args COLON • $@101 func_return

    $default  reduce using rule 294 ($@101)

    $@101  go to state 409


State 342

  279 func_args: all_datatypes IDENTIFIER $@93 •

    $default  reduce using rule 279 (func_args)


State 343

  282 func_args: func_args COMMA $@94 • all_datatypes IDENTIFIER $@95

    NNUM           shift, and go to state 201
    NDEC           shift, and go to state 202
    NBOOL          shift, and go to state 203
    NLET           shift, and go to state 204
    NTEXT          shift, and go to state 205
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 206
    ADEC           shift, and go to state 207
    ABOOL          shift, and go to state 208
    ALET           shift, and go to state 209
    ATEXT          shift, and go to state 210
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 211
    AUDATATYPE     shift, and go to state 212
    NARRUDATATYPE  shift, and go to state 213
    AARRUDATATYPE  shift, and go to state 214

    all_datatypes   go to state 410
    nonAtomicArray  go to state 216
    atomicArray     go to state 217


State 344

  291 func_decl: FUNC IDENTIFIER $@96 COLON $@97 args COLON $@98 • func_return

    IDENTIFIER  shift, and go to state 411
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    NUDATATYPE  shift, and go to state 412

    nonAtomic_datatypes  go to state 413
    nonAtomicSimple      go to state 414
    nonAtomicArray       go to state 415
    func_return          go to state 416


State 345

  124 simpleList: simpleList COMMA $@12 IDENTIFIER $@13 EQ • $@14 RHS

    $default  reduce using rule 123 ($@14)

    $@14  go to state 417


State 346

  146 dimlist: dimlist COMMA • $@29 array_inValues

    $default  reduce using rule 145 ($@29)

    $@29  go to state 418


State 347

  127 arrayList: IDENTIFIER $@15 SQUAREOPEN $@16 dimlist SQUARECLOSE •

    $default  reduce using rule 127 (arrayList)


State 348

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN $@21 dimlist SQUARECLOSE • $@22 EQ $@23 RHS

    $default  reduce using rule 134 ($@22)

    $@22  go to state 419


State 349

  131 arrayList: arrayList COMMA $@17 IDENTIFIER $@18 SQUAREOPEN • $@19 dimlist SQUARECLOSE

    $default  reduce using rule 130 ($@19)

    $@19  go to state 420


State 350

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN • $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS

    $default  reduce using rule 139 ($@26)

    $@26  go to state 421


State 351

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS • SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend

    SQUARECLOSE  shift, and go to state 422


State 352

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS • SQUARECLOSE $@52 SCOPEOPEN $@53 statements $@54 SCOPECLOSE

    SQUARECLOSE  shift, and go to state 423


State 353

  106 simpleDatatype: ATOMIC • AUDATATYPE

    AUDATATYPE  shift, and go to state 52


State 354

  148 LHS: IDENTIFIER •
  151    | IDENTIFIER • $@30 SQUAREOPEN $@31 arr_access SQUARECLOSE
  357 access: IDENTIFIER • $@117 ARROW $@118 id

    ARROW       reduce using rule 355 ($@117)
    SQUAREOPEN  reduce using rule 149 ($@30)
    $default    reduce using rule 148 (LHS)

    $@30   go to state 167
    $@117  go to state 168


State 355

  181 both_assignment: ROUNDOPEN • $@41 assignment_statement ROUNDCLOSE

    $default  reduce using rule 180 ($@41)

    $@41  go to state 424


State 356

  183 both_assignment: simpleDatatype • $@42 g

    $default  reduce using rule 182 ($@42)

    $@42  go to state 425


State 357

  165 assignment_statement: LHS • EQ $@34 RHS

    EQ  shift, and go to state 170


State 358

  179 both_assignment: assignment_statement •

    $default  reduce using rule 179 (both_assignment)


State 359

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment • PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    PIPE  shift, and go to state 426


State 360

  161 arith_operand: ROUNDOPEN $@33 • arith_expr ROUNDCLOSE

    INTEGERLITERAL  shift, and go to state 297
    FLOATLITERAL    shift, and go to state 298
    IDENTIFIER      shift, and go to state 299
    ROUNDOPEN       shift, and go to state 300

    arith_operand  go to state 301
    arith_expr     go to state 427


State 361

   32 arithmetic_op: DIV •

    $default  reduce using rule 32 (arithmetic_op)


State 362

   29 arithmetic_op: ADD •

    $default  reduce using rule 29 (arithmetic_op)


State 363

   30 arithmetic_op: SUB •

    $default  reduce using rule 30 (arithmetic_op)


State 364

   31 arithmetic_op: MUL •

    $default  reduce using rule 31 (arithmetic_op)


State 365

   34 arithmetic_op: EXPONENT •

    $default  reduce using rule 34 (arithmetic_op)


State 366

   33 arithmetic_op: MODULO •

    $default  reduce using rule 33 (arithmetic_op)


State 367

  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON • arith_expr COLON arguments COLON SEMICOLON $@78
  244            | MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON • arith_expr COLON NULL_ARGS COLON SEMICOLON

    INTEGERLITERAL  shift, and go to state 297
    FLOATLITERAL    shift, and go to state 298
    IDENTIFIER      shift, and go to state 299
    ROUNDOPEN       shift, and go to state 300

    arith_operand  go to state 301
    arith_expr     go to state 428


State 368

  162 arith_expr: arith_expr arithmetic_op • arith_operand

    INTEGERLITERAL  shift, and go to state 297
    FLOATLITERAL    shift, and go to state 298
    IDENTIFIER      shift, and go to state 299
    ROUNDOPEN       shift, and go to state 300

    arith_operand  go to state 429


State 369

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON • analysis_arrays COLON analysis_arrays analyze_syntax SEMICOLON $@70

    NARRNUM  shift, and go to state 430
    NARRDEC  shift, and go to state 431
    AARRNUM  shift, and go to state 432
    AARRDEC  shift, and go to state 433

    analysis_arrays  go to state 434


State 370

  250 sleep: SLEEP $@79 ROUNDOPEN $@80 FLOATLITERAL • $@81 ROUNDCLOSE $@82 SEMICOLON

    $default  reduce using rule 248 ($@81)

    $@81  go to state 435


State 371

  255 sleep: SLEEP $@83 ROUNDOPEN $@84 INTEGERLITERAL • $@85 ROUNDCLOSE $@86 SEMICOLON

    $default  reduce using rule 253 ($@85)

    $@85  go to state 436


State 372

  245 get_invoke: GET ARROW TIME •

    $default  reduce using rule 245 (get_invoke)


State 373

  446 in_stmt: IN $@166 ARROW • $@167 IDENTIFIER $@168

    $default  reduce using rule 444 ($@167)

    $@167  go to state 437


State 374

  452 in_stmt: INVOKE IN $@169 • ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments COLON $@173

    ARROW  shift, and go to state 438


State 375

  458 in_stmt: INVOKE IN $@174 • ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178

    ARROW  shift, and go to state 439


State 376

   75 RHS: NEG $@5 ROUNDOPEN • $@6 RHS ROUNDCLOSE

    $default  reduce using rule 74 ($@6)

    $@6  go to state 440


State 377

   47 E: SQUAREOPEN • $@1 arr_access SQUARECLOSE

    $default  reduce using rule 46 ($@1)

    $@1  go to state 441


State 378

   49 T: IDENTIFIER $@2 E •

    $default  reduce using rule 49 (T)


State 379

   70 RHS: ROUNDOPEN $@3 RHS • all_ops next ROUNDCLOSE

    DIV        shift, and go to state 361
    ADD        shift, and go to state 362
    SUB        shift, and go to state 363
    MUL        shift, and go to state 364
    EXPONENT   shift, and go to state 365
    MODULO     shift, and go to state 366
    ARROW      shift, and go to state 442
    AND        shift, and go to state 443
    OR         shift, and go to state 444
    GT         shift, and go to state 445
    LT         shift, and go to state 446
    GTEQ       shift, and go to state 447
    LTEQ       shift, and go to state 448
    NOT_EQ     shift, and go to state 449
    EQUAL_TWO  shift, and go to state 450
    HASH       shift, and go to state 451

    comparison_op  go to state 452
    arithmetic_op  go to state 453
    logical_op     go to state 454
    all_ops        go to state 455


State 380

   72 RHS: ROUNDOPEN $@4 RHS • ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 456


State 381

  234 func_invoke: INVOKE IDENTIFIER $@71 COLON $@72 • arguments $@73

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 457
    func_invoke    go to state 249
    arguments      go to state 458
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 382

  238 func_invoke: INVOKE IDENTIFIER $@74 COLON $@75 • NULL_ARGS COLON $@76

    NULL_ARGS  shift, and go to state 459


State 383

  362 id: id ARROW $@120 IDENTIFIER • $@121

    $default  reduce using rule 361 ($@121)

    $@121  go to state 460


State 384

  442 method_invoke: INVOKE id ARROW $@162 IDENTIFIER • $@163 COLON $@164 method_args COLON $@165

    $default  reduce using rule 439 ($@163)

    $@163  go to state 461


State 385

  263 nextip: COMMA • IDENTIFIER $@89 nextip

    IDENTIFIER  shift, and go to state 462


State 386

  265 nextip: SEMICOLON • $@90

    $default  reduce using rule 264 ($@90)

    $@90  go to state 463


State 387

  261 input: IP file_name COLON IDENTIFIER nextip •

    $default  reduce using rule 261 (input)


State 388

  274 nextop: HASH stringvalues • nextop

    HASH  shift, and go to state 322

    $default  reduce using rule 275 (nextop)

    nextop  go to state 464


State 389

  272 output: OP COLON opstring file_name SEMICOLON •

    $default  reduce using rule 272 (output)


State 390

  151 LHS: IDENTIFIER $@30 SQUAREOPEN $@31 arr_access • SQUARECLOSE

    SQUARECLOSE  shift, and go to state 465


State 391

  153 arr_access: exprlist •
  156 exprlist: exprlist • COMMA $@32 arith_expr

    COMMA  shift, and go to state 466

    $default  reduce using rule 153 (arr_access)


State 392

  154 exprlist: arith_expr •
  162 arith_expr: arith_expr • arithmetic_op arith_operand

    DIV       shift, and go to state 361
    ADD       shift, and go to state 362
    SUB       shift, and go to state 363
    MUL       shift, and go to state 364
    EXPONENT  shift, and go to state 365
    MODULO    shift, and go to state 366

    $default  reduce using rule 154 (exprlist)

    arithmetic_op  go to state 368


State 393

  359 id: IDENTIFIER • $@119

    $default  reduce using rule 358 ($@119)

    $@119  go to state 256


State 394

  357 access: IDENTIFIER $@117 ARROW $@118 id •
  362 id: id • ARROW $@120 IDENTIFIER $@121

    ARROW  shift, and go to state 467

    $default  reduce using rule 357 (access)


State 395

  312 func_scope: SCOPEOPEN $@104 func_statements $@105 SCOPECLOSE •

    $default  reduce using rule 312 (func_scope)


State 396

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 args $@109 SCOPEOPEN • $@110 taskscope $@111 SCOPECLOSE

    $default  reduce using rule 320 ($@110)

    $@110  go to state 468


State 397

  379 start: SCOPEOPEN $@125 start $@126 SCOPECLOSE • $@127 start

    $default  reduce using rule 378 ($@127)

    $@127  go to state 469


State 398

  395 simpleList_t: IDENTIFIER $@133 •

    $default  reduce using rule 395 (simpleList_t)


State 399

  401 simpleList_t: IDENTIFIER $@136 • EQ $@137 RHS

    EQ  shift, and go to state 470


State 400

  117 simpleList: simpleList COMMA • $@9 IDENTIFIER
  124           | simpleList COMMA • $@12 IDENTIFIER $@13 EQ $@14 RHS
  398 simpleList_t: simpleList COMMA • $@134 IDENTIFIER $@135
  405             | simpleList COMMA • $@138 IDENTIFIER $@139 EQ $@140 RHS

    IDENTIFIER  reduce using rule 116 ($@9)
    IDENTIFIER  [reduce using rule 121 ($@12)]
    IDENTIFIER  [reduce using rule 396 ($@134)]
    IDENTIFIER  [reduce using rule 402 ($@138)]
    $default    reduce using rule 116 ($@9)

    $@9    go to state 145
    $@12   go to state 146
    $@134  go to state 471
    $@138  go to state 472

    reduce/reduce conflict on token IDENTIFIER:
      116 $@9: ε •
      121 $@12: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 simpleDatatype simpleList COMMA • IDENTIFIER COMMA $@134 IDENTIFIER $@135 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                  $end
             ↳ 44: type_declaration                                                                                                                                                                                                           begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                       methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                  type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                       SEMICOLON $@132
                                                                                  ↳ 392: simpleDatatype simpleList_t
                                                                                                        ↳ 398: simpleList                                    COMMA $@134 IDENTIFIER $@135
                                                                                                               ↳ 117: simpleList COMMA $@9        IDENTIFIER
                                                                                                                                       ↳ 116: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 simpleDatatype simpleList COMMA • IDENTIFIER $@13 EQ $@14 RHS COMMA $@134 IDENTIFIER $@135 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                   $end
             ↳ 44: type_declaration                                                                                                                                                                                                                            begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                        methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                   type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                        SEMICOLON $@132
                                                                                  ↳ 392: simpleDatatype simpleList_t
                                                                                                        ↳ 398: simpleList                                                     COMMA $@134 IDENTIFIER $@135
                                                                                                               ↳ 124: simpleList COMMA $@12       IDENTIFIER $@13 EQ $@14 RHS
                                                                                                                                       ↳ 121: ε •

    reduce/reduce conflict on token IDENTIFIER:
      116 $@9: ε •
      396 $@134: ε •
      Example: simpleList COMMA • IDENTIFIER
      First reduce derivation
        simpleList
        ↳ 117: simpleList COMMA $@9        IDENTIFIER
                                ↳ 116: ε •
      Second reduce derivation
        simpleList_t
        ↳ 398: simpleList COMMA $@134      IDENTIFIER $@135
                                ↳ 396: ε •            ↳ 398: ε

    reduce/reduce conflict on token IDENTIFIER:
      116 $@9: ε •
      402 $@138: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 simpleDatatype simpleList COMMA • IDENTIFIER COMMA $@134 IDENTIFIER $@135 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                  $end
             ↳ 44: type_declaration                                                                                                                                                                                                           begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                       methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                  type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                       SEMICOLON $@132
                                                                                  ↳ 392: simpleDatatype simpleList_t
                                                                                                        ↳ 398: simpleList                                    COMMA $@134 IDENTIFIER $@135
                                                                                                               ↳ 117: simpleList COMMA $@9        IDENTIFIER
                                                                                                                                       ↳ 116: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 simpleDatatype simpleList COMMA • IDENTIFIER $@139 EQ $@140 RHS SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                 $end
             ↳ 44: type_declaration                                                                                                                                                                                          begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                      methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                 type_scope
                                                                           ↳ 391: declarationStmt_t                                                                      SEMICOLON $@132
                                                                                  ↳ 392: simpleDatatype simpleList_t
                                                                                                        ↳ 405: simpleList COMMA $@138      IDENTIFIER $@139 EQ $@140 RHS
                                                                                                                                ↳ 402: ε •

    reduce/reduce conflict on token IDENTIFIER:
      121 $@12: ε •
      396 $@134: ε •
      First example: • IDENTIFIER $@12 IDENTIFIER $@13 EQ $@14 RHS COMMA $@134 IDENTIFIER $@135
      First reduce derivation
        declarationStmt_t
        ↳ 392: $@12       simpleList_t
               ↳ 121: ε • ↳ 398: simpleList                                         COMMA $@134 IDENTIFIER $@135
                                 ↳ 124: IDENTIFIER $@12 IDENTIFIER $@13 EQ $@14 RHS
      Second example: simpleList COMMA • IDENTIFIER
      Second reduce derivation
        declarationStmt_t
        ↳ 392: simpleList_t
               ↳ 398: simpleList COMMA $@134      IDENTIFIER $@135
                                       ↳ 396: ε •            ↳ 398: ε

    reduce/reduce conflict on token IDENTIFIER:
      121 $@12: ε •
      402 $@138: ε •
      Example: simpleList COMMA • IDENTIFIER EQ RHS
      First reduce derivation
        simpleList
        ↳ 124: simpleList COMMA $@12       IDENTIFIER $@13     EQ $@14     RHS
                                ↳ 121: ε •            ↳ 124: ε    ↳ 124: ε
      Second reduce derivation
        simpleList_t
        ↳ 405: simpleList COMMA $@138      IDENTIFIER $@139    EQ $@140    RHS
                                ↳ 402: ε •            ↳ 405: ε    ↳ 405: ε

    reduce/reduce conflict on token IDENTIFIER:
      396 $@134: ε •
      402 $@138: ε •
      First example: simpleList COMMA • IDENTIFIER
      First reduce derivation
        declarationStmt_t
        ↳ 392: simpleList_t
               ↳ 398: simpleList COMMA $@134      IDENTIFIER $@135
                                       ↳ 396: ε •            ↳ 398: ε
      Second example: COMMA • IDENTIFIER IDENTIFIER $@139 EQ $@140 RHS
      Second reduce derivation
        declarationStmt_t
        ↳ 392: COMMA simpleList_t
                     ↳ 405: $@138      IDENTIFIER IDENTIFIER $@139 EQ $@140 RHS
                            ↳ 402: ε •



State 401

  409 arrayList_t: IDENTIFIER $@141 • SQUAREOPEN $@142 dimlist SQUARECLOSE $@143

    SQUAREOPEN  shift, and go to state 473


State 402

  419 arrayList_t: IDENTIFIER $@148 • SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS

    SQUAREOPEN  shift, and go to state 474


State 403

  131 arrayList: arrayList COMMA • $@17 IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE
  142          | arrayList COMMA • $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS
  414 arrayList_t: arrayList COMMA • $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
  425            | arrayList COMMA • $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS

    IDENTIFIER  reduce using rule 128 ($@17)
    IDENTIFIER  [reduce using rule 137 ($@24)]
    IDENTIFIER  [reduce using rule 410 ($@144)]
    IDENTIFIER  [reduce using rule 420 ($@152)]
    $default    reduce using rule 128 ($@17)

    $@17   go to state 149
    $@24   go to state 150
    $@144  go to state 475
    $@152  go to state 476

    reduce/reduce conflict on token IDENTIFIER:
      128 $@17: ε •
      137 $@24: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                    $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                             begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                         methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                    type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                         SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                             COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 131: arrayList COMMA $@17       IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE
                                                                                                                                     ↳ 128: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                                     $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                                              begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                                          methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                                     type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                                          SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                                              COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 142: arrayList COMMA $@24       IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS
                                                                                                                                     ↳ 137: ε •

    reduce/reduce conflict on token IDENTIFIER:
      128 $@17: ε •
      410 $@144: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                    $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                             begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                         methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                    type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                         SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                             COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 131: arrayList COMMA $@17       IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE
                                                                                                                                     ↳ 128: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                             $end
             ↳ 44: type_declaration                                                                                                                                                                                                                      begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                  methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                             type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                  SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList COMMA $@144      IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                                              ↳ 410: ε •

    reduce/reduce conflict on token IDENTIFIER:
      128 $@17: ε •
      420 $@152: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                    $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                             begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                         methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                    type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                         SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                             COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 131: arrayList COMMA $@17       IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE
                                                                                                                                     ↳ 128: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                          $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                   begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                               methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                          type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                               SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 425: arrayList COMMA $@152      IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS
                                                                                                                              ↳ 420: ε •

    reduce/reduce conflict on token IDENTIFIER:
      137 $@24: ε •
      410 $@144: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                                     $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                                              begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                                          methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                                     type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                                          SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                                              COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 142: arrayList COMMA $@24       IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS
                                                                                                                                     ↳ 137: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                             $end
             ↳ 44: type_declaration                                                                                                                                                                                                                      begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                  methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                             type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                  SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList COMMA $@144      IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                                              ↳ 410: ε •

    reduce/reduce conflict on token IDENTIFIER:
      137 $@24: ε •
      420 $@152: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                                                                                                     $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                                                                                              begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                                                                                                          methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                                                                                                     type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                                                                                                          SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList                                                                                              COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                              ↳ 142: arrayList COMMA $@24       IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS
                                                                                                                                     ↳ 137: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                          $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                   begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                               methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                          type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                               SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 425: arrayList COMMA $@152      IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS
                                                                                                                              ↳ 420: ε •

    reduce/reduce conflict on token IDENTIFIER:
      410 $@144: ε •
      420 $@152: ε •
      First example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      First reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                             $end
             ↳ 44: type_declaration                                                                                                                                                                                                                      begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                  methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                             type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                  SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 414: arrayList COMMA $@144      IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147
                                                                                                                              ↳ 410: ε •
      Second example: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 arrayDatatype arrayList COMMA • IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS SEMICOLON $@132 type_scope methods $@131 SCOPECLOSE begin $end
      Second reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                                                                          $end
             ↳ 44: type_declaration                                                                                                                                                                                                                                   begin
                   ↳ 387: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope                                                                                                                                                               methods $@131 SCOPECLOSE
                                                                    ↳ 388: declaration_t                                                                                                                                          type_scope
                                                                           ↳ 391: declarationStmt_t                                                                                                               SEMICOLON $@132
                                                                                  ↳ 393: arrayDatatype arrayList_t
                                                                                                       ↳ 425: arrayList COMMA $@152      IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS
                                                                                                                              ↳ 420: ε •



State 404

  434 func_decl_m: FUNC • IDENTIFIER $@159 COLON $@160 args COLON $@161 func_return

    IDENTIFIER  shift, and go to state 477


State 405

  387 type_declaration: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope methods $@131 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 478


State 406

  426 methods: methods method •

    $default  reduce using rule 426 (methods)


State 407

  430 method: func_decl_m • SCOPEOPEN $@157 method_body $@158 SCOPECLOSE

    SCOPEOPEN  shift, and go to state 479


State 408

  391 declaration_t: declarationStmt_t SEMICOLON $@132 •

    $default  reduce using rule 391 (declaration_t)


State 409

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER $@99 COLON $@100 args COLON $@101 • func_return

    IDENTIFIER  shift, and go to state 411
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    NUDATATYPE  shift, and go to state 412

    nonAtomic_datatypes  go to state 413
    nonAtomicSimple      go to state 414
    nonAtomicArray       go to state 415
    func_return          go to state 480


State 410

  282 func_args: func_args COMMA $@94 all_datatypes • IDENTIFIER $@95

    IDENTIFIER  shift, and go to state 481


State 411

  287 func_return: IDENTIFIER •

    $default  reduce using rule 287 (func_return)


State 412

  286 func_return: NUDATATYPE •

    $default  reduce using rule 286 (func_return)


State 413

  285 func_return: nonAtomic_datatypes •

    $default  reduce using rule 285 (func_return)


State 414

   38 nonAtomic_datatypes: nonAtomicSimple •

    $default  reduce using rule 38 (nonAtomic_datatypes)


State 415

   37 nonAtomic_datatypes: nonAtomicArray •

    $default  reduce using rule 37 (nonAtomic_datatypes)


State 416

  291 func_decl: FUNC IDENTIFIER $@96 COLON $@97 args COLON $@98 func_return •

    $default  reduce using rule 291 (func_decl)


State 417

  124 simpleList: simpleList COMMA $@12 IDENTIFIER $@13 EQ $@14 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 482
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 418

  146 dimlist: dimlist COMMA $@29 • array_inValues

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 483


State 419

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 • EQ $@23 RHS

    EQ  shift, and go to state 484


State 420

  131 arrayList: arrayList COMMA $@17 IDENTIFIER $@18 SQUAREOPEN $@19 • dimlist SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 289
    dimlist         go to state 485


State 421

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 • dimlist SQUARECLOSE $@27 EQ $@28 RHS

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 289
    dimlist         go to state 486


State 422

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE • $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend

    $default  reduce using rule 203 ($@57)

    $@57  go to state 487


State 423

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS SQUARECLOSE • $@52 SCOPEOPEN $@53 statements $@54 SCOPECLOSE

    $default  reduce using rule 196 ($@52)

    $@52  go to state 488


State 424

  181 both_assignment: ROUNDOPEN $@41 • assignment_statement ROUNDCLOSE

    IDENTIFIER  shift, and go to state 354

    LHS                   go to state 357
    assignment_statement  go to state 489
    access                go to state 124


State 425

  183 both_assignment: simpleDatatype $@42 • g

    IDENTIFIER  shift, and go to state 490

    g  go to state 491


State 426

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE • $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    $default  reduce using rule 188 ($@45)

    $@45  go to state 492


State 427

  161 arith_operand: ROUNDOPEN $@33 arith_expr • ROUNDCLOSE
  162 arith_expr: arith_expr • arithmetic_op arith_operand

    DIV         shift, and go to state 361
    ADD         shift, and go to state 362
    SUB         shift, and go to state 363
    MUL         shift, and go to state 364
    EXPONENT    shift, and go to state 365
    MODULO      shift, and go to state 366
    ROUNDCLOSE  shift, and go to state 493

    arithmetic_op  go to state 368


State 428

  162 arith_expr: arith_expr • arithmetic_op arith_operand
  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr • COLON arguments COLON SEMICOLON $@78
  244            | MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr • COLON NULL_ARGS COLON SEMICOLON

    DIV       shift, and go to state 361
    ADD       shift, and go to state 362
    SUB       shift, and go to state 363
    MUL       shift, and go to state 364
    EXPONENT  shift, and go to state 365
    MODULO    shift, and go to state 366
    COLON     shift, and go to state 494

    arithmetic_op  go to state 368


State 429

  162 arith_expr: arith_expr arithmetic_op arith_operand •

    $default  reduce using rule 162 (arith_expr)


State 430

  221 analysis_arrays: NARRNUM •

    $default  reduce using rule 221 (analysis_arrays)


State 431

  220 analysis_arrays: NARRDEC •

    $default  reduce using rule 220 (analysis_arrays)


State 432

  223 analysis_arrays: AARRNUM •

    $default  reduce using rule 223 (analysis_arrays)


State 433

  222 analysis_arrays: AARRDEC •

    $default  reduce using rule 222 (analysis_arrays)


State 434

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays • COLON analysis_arrays analyze_syntax SEMICOLON $@70

    COLON  shift, and go to state 495


State 435

  250 sleep: SLEEP $@79 ROUNDOPEN $@80 FLOATLITERAL $@81 • ROUNDCLOSE $@82 SEMICOLON

    ROUNDCLOSE  shift, and go to state 496


State 436

  255 sleep: SLEEP $@83 ROUNDOPEN $@84 INTEGERLITERAL $@85 • ROUNDCLOSE $@86 SEMICOLON

    ROUNDCLOSE  shift, and go to state 497


State 437

  446 in_stmt: IN $@166 ARROW $@167 • IDENTIFIER $@168

    IDENTIFIER  shift, and go to state 498


State 438

  452 in_stmt: INVOKE IN $@169 ARROW • $@170 IDENTIFIER $@171 COLON $@172 arguments COLON $@173

    $default  reduce using rule 448 ($@170)

    $@170  go to state 499


State 439

  458 in_stmt: INVOKE IN $@174 ARROW • $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178

    $default  reduce using rule 454 ($@175)

    $@175  go to state 500


State 440

   75 RHS: NEG $@5 ROUNDOPEN $@6 • RHS ROUNDCLOSE

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 501
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 441

   47 E: SQUAREOPEN $@1 • arr_access SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 297
    FLOATLITERAL    shift, and go to state 298
    IDENTIFIER      shift, and go to state 299
    ROUNDOPEN       shift, and go to state 300

    arr_access     go to state 502
    exprlist       go to state 391
    arith_operand  go to state 301
    arith_expr     go to state 392


State 442

   55 all_ops: ARROW •

    $default  reduce using rule 55 (all_ops)


State 443

   35 logical_op: AND •

    $default  reduce using rule 35 (logical_op)


State 444

   36 logical_op: OR •

    $default  reduce using rule 36 (logical_op)


State 445

   24 comparison_op: GT •

    $default  reduce using rule 24 (comparison_op)


State 446

   23 comparison_op: LT •

    $default  reduce using rule 23 (comparison_op)


State 447

   25 comparison_op: GTEQ •

    $default  reduce using rule 25 (comparison_op)


State 448

   26 comparison_op: LTEQ •

    $default  reduce using rule 26 (comparison_op)


State 449

   27 comparison_op: NOT_EQ •

    $default  reduce using rule 27 (comparison_op)


State 450

   28 comparison_op: EQUAL_TWO •

    $default  reduce using rule 28 (comparison_op)


State 451

   54 all_ops: HASH •

    $default  reduce using rule 54 (all_ops)


State 452

   52 all_ops: comparison_op •

    $default  reduce using rule 52 (all_ops)


State 453

   51 all_ops: arithmetic_op •

    $default  reduce using rule 51 (all_ops)


State 454

   53 all_ops: logical_op •

    $default  reduce using rule 53 (all_ops)


State 455

   70 RHS: ROUNDOPEN $@3 RHS all_ops • next ROUNDCLOSE

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    next           go to state 503
    RHS            go to state 504
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 456

   72 RHS: ROUNDOPEN $@4 RHS ROUNDCLOSE •

    $default  reduce using rule 72 (RHS)


State 457

  241 arguments: RHS •

    $default  reduce using rule 241 (arguments)


State 458

  234 func_invoke: INVOKE IDENTIFIER $@71 COLON $@72 arguments • $@73
  240 arguments: arguments • COMMA $@77 RHS

    COMMA  shift, and go to state 505

    COMMA     [reduce using rule 233 ($@73)]
    $default  reduce using rule 233 ($@73)

    $@73  go to state 506

    shift/reduce conflict on token COMMA:
      233 $@73: ε •
      240 arguments: arguments • COMMA $@77 RHS
      First example: simpleDatatype $@7 IDENTIFIER $@10 EQ $@11 INVOKE IDENTIFIER $@71 COLON $@72 arguments • COMMA $@77 RHS $@73 COMMA $@9 IDENTIFIER SEMICOLON begin $end
      Shift derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                                   $end
             ↳ 41: declaration                                                                                                                                                                                 begin
                   ↳ 101: declarationStmt                                                                                                                                                            SEMICOLON
                          ↳ 112: simpleDatatype $@7 simpleList
                                                    ↳ 117: simpleList                                                                                                           COMMA $@9 IDENTIFIER
                                                           ↳ 120: IDENTIFIER $@10 EQ $@11 RHS
                                                                                          ↳ 64: func_invoke
                                                                                                ↳ 234: INVOKE IDENTIFIER $@71 COLON $@72 arguments                         $@73
                                                                                                                                         ↳ 240: arguments • COMMA $@77 RHS
      Second example: simpleDatatype $@7 IDENTIFIER $@10 EQ $@11 INVOKE IDENTIFIER $@71 COLON $@72 arguments • COMMA $@9 IDENTIFIER SEMICOLON begin $end
      Reduce derivation
        $accept
        ↳ 0: begin                                                                                                                                                                                       $end
             ↳ 41: declaration                                                                                                                                                                     begin
                   ↳ 101: declarationStmt                                                                                                                                                SEMICOLON
                          ↳ 112: simpleDatatype $@7 simpleList
                                                    ↳ 117: simpleList                                                                                               COMMA $@9 IDENTIFIER
                                                           ↳ 120: IDENTIFIER $@10 EQ $@11 RHS
                                                                                          ↳ 64: T
                                                                                                ↳ 50: func_invoke
                                                                                                      ↳ 234: INVOKE IDENTIFIER $@71 COLON $@72 arguments $@73
                                                                                                                                                         ↳ 233: ε •



State 459

  238 func_invoke: INVOKE IDENTIFIER $@74 COLON $@75 NULL_ARGS • COLON $@76

    COLON  shift, and go to state 507


State 460

  362 id: id ARROW $@120 IDENTIFIER $@121 •

    $default  reduce using rule 362 (id)


State 461

  442 method_invoke: INVOKE id ARROW $@162 IDENTIFIER $@163 • COLON $@164 method_args COLON $@165

    COLON  shift, and go to state 508


State 462

  263 nextip: COMMA IDENTIFIER • $@89 nextip

    $default  reduce using rule 262 ($@89)

    $@89  go to state 509


State 463

  265 nextip: SEMICOLON $@90 •

    $default  reduce using rule 265 (nextip)


State 464

  274 nextop: HASH stringvalues nextop •

    $default  reduce using rule 274 (nextop)


State 465

  151 LHS: IDENTIFIER $@30 SQUAREOPEN $@31 arr_access SQUARECLOSE •

    $default  reduce using rule 151 (LHS)


State 466

  156 exprlist: exprlist COMMA • $@32 arith_expr

    $default  reduce using rule 155 ($@32)

    $@32  go to state 510


State 467

  362 id: id ARROW • $@120 IDENTIFIER $@121

    $default  reduce using rule 360 ($@120)

    $@120  go to state 317


State 468

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 args $@109 SCOPEOPEN $@110 • taskscope $@111 SCOPECLOSE

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 519
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 469

  379 start: SCOPEOPEN $@125 start $@126 SCOPECLOSE $@127 • start

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 128
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 382 (start)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 129
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 130
    loop                  go to state 131
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 132
    when_statement        go to state 113
    analyze_statement     go to state 133
    func_invoke2          go to state 134
    func_invoke           go to state 116
    task_invoke           go to state 135
    sleep                 go to state 136
    input                 go to state 137
    output                go to state 138
    access                go to state 124
    start                 go to state 521
    method_invoke2        go to state 140
    method_invoke         go to state 126


State 470

  401 simpleList_t: IDENTIFIER $@136 EQ • $@137 RHS

    $default  reduce using rule 400 ($@137)

    $@137  go to state 522


State 471

  398 simpleList_t: simpleList COMMA $@134 • IDENTIFIER $@135

    IDENTIFIER  shift, and go to state 523


State 472

  405 simpleList_t: simpleList COMMA $@138 • IDENTIFIER $@139 EQ $@140 RHS

    IDENTIFIER  shift, and go to state 524


State 473

  409 arrayList_t: IDENTIFIER $@141 SQUAREOPEN • $@142 dimlist SQUARECLOSE $@143

    $default  reduce using rule 407 ($@142)

    $@142  go to state 525


State 474

  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN • $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS

    $default  reduce using rule 416 ($@149)

    $@149  go to state 526


State 475

  414 arrayList_t: arrayList COMMA $@144 • IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147

    IDENTIFIER  shift, and go to state 527


State 476

  425 arrayList_t: arrayList COMMA $@152 • IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS

    IDENTIFIER  shift, and go to state 528


State 477

  434 func_decl_m: FUNC IDENTIFIER • $@159 COLON $@160 args COLON $@161 func_return

    $default  reduce using rule 431 ($@159)

    $@159  go to state 529


State 478

  387 type_declaration: TYPE $@128 TYPENAME $@129 SCOPEOPEN $@130 type_scope methods $@131 SCOPECLOSE •

    $default  reduce using rule 387 (type_declaration)


State 479

  430 method: func_decl_m SCOPEOPEN • $@157 method_body $@158 SCOPECLOSE

    $default  reduce using rule 428 ($@157)

    $@157  go to state 530


State 480

  295 atomic_func_decl: ATOMIC FUNC IDENTIFIER $@99 COLON $@100 args COLON $@101 func_return •

    $default  reduce using rule 295 (atomic_func_decl)


State 481

  282 func_args: func_args COMMA $@94 all_datatypes IDENTIFIER • $@95

    $default  reduce using rule 281 ($@95)

    $@95  go to state 531


State 482

  124 simpleList: simpleList COMMA $@12 IDENTIFIER $@13 EQ $@14 RHS •

    $default  reduce using rule 124 (simpleList)


State 483

  146 dimlist: dimlist COMMA $@29 array_inValues •

    $default  reduce using rule 146 (dimlist)


State 484

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ • $@23 RHS

    $default  reduce using rule 135 ($@23)

    $@23  go to state 532


State 485

  131 arrayList: arrayList COMMA $@17 IDENTIFIER $@18 SQUAREOPEN $@19 dimlist • SQUARECLOSE
  146 dimlist: dimlist • COMMA $@29 array_inValues

    COMMA        shift, and go to state 346
    SQUARECLOSE  shift, and go to state 533


State 486

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist • SQUARECLOSE $@27 EQ $@28 RHS
  146 dimlist: dimlist • COMMA $@29 array_inValues

    COMMA        shift, and go to state 346
    SQUARECLOSE  shift, and go to state 534


State 487

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 • SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend

    SCOPEOPEN  shift, and go to state 535


State 488

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS SQUARECLOSE $@52 • SCOPEOPEN $@53 statements $@54 SCOPECLOSE

    SCOPEOPEN  shift, and go to state 536


State 489

  181 both_assignment: ROUNDOPEN $@41 assignment_statement • ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 537


State 490

  174 g: IDENTIFIER • $@36 EQ $@37 RHS

    $default  reduce using rule 172 ($@36)

    $@36  go to state 538


State 491

  178 g: g • COMMA $@38 IDENTIFIER $@39 EQ $@40 RHS
  183 both_assignment: simpleDatatype $@42 g •

    COMMA  shift, and go to state 539

    $default  reduce using rule 183 (both_assignment)


State 492

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 • RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 540
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 493

  161 arith_operand: ROUNDOPEN $@33 arith_expr ROUNDCLOSE •

    $default  reduce using rule 161 (arith_operand)


State 494

  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON • arguments COLON SEMICOLON $@78
  244            | MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON • NULL_ARGS COLON SEMICOLON

    NULL_ARGS         shift, and go to state 541
    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 457
    func_invoke    go to state 249
    arguments      go to state 542
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 495

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON • analysis_arrays analyze_syntax SEMICOLON $@70

    NARRNUM  shift, and go to state 430
    NARRDEC  shift, and go to state 431
    AARRNUM  shift, and go to state 432
    AARRDEC  shift, and go to state 433

    analysis_arrays  go to state 543


State 496

  250 sleep: SLEEP $@79 ROUNDOPEN $@80 FLOATLITERAL $@81 ROUNDCLOSE • $@82 SEMICOLON

    $default  reduce using rule 249 ($@82)

    $@82  go to state 544


State 497

  255 sleep: SLEEP $@83 ROUNDOPEN $@84 INTEGERLITERAL $@85 ROUNDCLOSE • $@86 SEMICOLON

    $default  reduce using rule 254 ($@86)

    $@86  go to state 545


State 498

  446 in_stmt: IN $@166 ARROW $@167 IDENTIFIER • $@168

    $default  reduce using rule 445 ($@168)

    $@168  go to state 546


State 499

  452 in_stmt: INVOKE IN $@169 ARROW $@170 • IDENTIFIER $@171 COLON $@172 arguments COLON $@173

    IDENTIFIER  shift, and go to state 547


State 500

  458 in_stmt: INVOKE IN $@174 ARROW $@175 • IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178

    IDENTIFIER  shift, and go to state 548


State 501

   75 RHS: NEG $@5 ROUNDOPEN $@6 RHS • ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 549


State 502

   47 E: SQUAREOPEN $@1 arr_access • SQUARECLOSE

    SQUARECLOSE  shift, and go to state 550


State 503

   70 RHS: ROUNDOPEN $@3 RHS all_ops next • ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 551


State 504

   61 next: RHS • all_ops next
   62     | RHS •

    DIV        shift, and go to state 361
    ADD        shift, and go to state 362
    SUB        shift, and go to state 363
    MUL        shift, and go to state 364
    EXPONENT   shift, and go to state 365
    MODULO     shift, and go to state 366
    ARROW      shift, and go to state 442
    AND        shift, and go to state 443
    OR         shift, and go to state 444
    GT         shift, and go to state 445
    LT         shift, and go to state 446
    GTEQ       shift, and go to state 447
    LTEQ       shift, and go to state 448
    NOT_EQ     shift, and go to state 449
    EQUAL_TWO  shift, and go to state 450
    HASH       shift, and go to state 451

    $default  reduce using rule 62 (next)

    comparison_op  go to state 452
    arithmetic_op  go to state 453
    logical_op     go to state 454
    all_ops        go to state 552


State 505

  240 arguments: arguments COMMA • $@77 RHS

    $default  reduce using rule 239 ($@77)

    $@77  go to state 553


State 506

  234 func_invoke: INVOKE IDENTIFIER $@71 COLON $@72 arguments $@73 •

    $default  reduce using rule 234 (func_invoke)


State 507

  238 func_invoke: INVOKE IDENTIFIER $@74 COLON $@75 NULL_ARGS COLON • $@76

    $default  reduce using rule 237 ($@76)

    $@76  go to state 554


State 508

  442 method_invoke: INVOKE id ARROW $@162 IDENTIFIER $@163 COLON • $@164 method_args COLON $@165

    $default  reduce using rule 440 ($@164)

    $@164  go to state 555


State 509

  263 nextip: COMMA IDENTIFIER $@89 • nextip

    COMMA      shift, and go to state 385
    SEMICOLON  shift, and go to state 386

    nextip  go to state 556


State 510

  156 exprlist: exprlist COMMA $@32 • arith_expr

    INTEGERLITERAL  shift, and go to state 297
    FLOATLITERAL    shift, and go to state 298
    IDENTIFIER      shift, and go to state 299
    ROUNDOPEN       shift, and go to state 300

    arith_operand  go to state 301
    arith_expr     go to state 557


State 511

  332 taskscope: SCOPEOPEN • $@112 taskscope $@113 SCOPECLOSE $@114 taskscope

    $default  reduce using rule 329 ($@112)

    $@112  go to state 558


State 512

  323 taskscope: declaration • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 559
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 513

  324 taskscope: log • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 560
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 514

  326 taskscope: loop • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 561
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 515

  325 taskscope: conditional • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 562
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 516

  327 taskscope: func_invoke2 • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 563
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 517

  333 taskscope: sleep • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 564
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 518

  328 taskscope: output • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 565
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 519

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 args $@109 SCOPEOPEN $@110 taskscope • $@111 SCOPECLOSE

    $default  reduce using rule 321 ($@111)

    $@111  go to state 566


State 520

  334 taskscope: method_invoke2 • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 567
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 521

  379 start: SCOPEOPEN $@125 start $@126 SCOPECLOSE $@127 start •

    $default  reduce using rule 379 (start)


State 522

  401 simpleList_t: IDENTIFIER $@136 EQ $@137 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 568
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 523

  398 simpleList_t: simpleList COMMA $@134 IDENTIFIER • $@135

    $default  reduce using rule 397 ($@135)

    $@135  go to state 569


State 524

  405 simpleList_t: simpleList COMMA $@138 IDENTIFIER • $@139 EQ $@140 RHS

    $default  reduce using rule 403 ($@139)

    $@139  go to state 570


State 525

  409 arrayList_t: IDENTIFIER $@141 SQUAREOPEN $@142 • dimlist SQUARECLOSE $@143

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 289
    dimlist         go to state 571


State 526

  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN $@149 • dimlist SQUARECLOSE $@150 EQ $@151 RHS

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 289
    dimlist         go to state 572


State 527

  414 arrayList_t: arrayList COMMA $@144 IDENTIFIER • $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147

    $default  reduce using rule 411 ($@145)

    $@145  go to state 573


State 528

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER • $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS

    $default  reduce using rule 421 ($@153)

    $@153  go to state 574


State 529

  434 func_decl_m: FUNC IDENTIFIER $@159 • COLON $@160 args COLON $@161 func_return

    COLON  shift, and go to state 575


State 530

  430 method: func_decl_m SCOPEOPEN $@157 • method_body $@158 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 576
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 577
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 481 (method_body)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 578
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 579
    loop                  go to state 580
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 581
    when_statement        go to state 113
    analyze_statement     go to state 582
    func_invoke2          go to state 583
    func_invoke           go to state 116
    task_invoke           go to state 584
    sleep                 go to state 585
    input                 go to state 586
    output                go to state 587
    access                go to state 124
    method_invoke2        go to state 588
    method_invoke         go to state 126
    method_statements     go to state 589
    return_statement_m    go to state 590
    method_body           go to state 591


State 531

  282 func_args: func_args COMMA $@94 all_datatypes IDENTIFIER $@95 •

    $default  reduce using rule 282 (func_args)


State 532

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 592
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 533

  131 arrayList: arrayList COMMA $@17 IDENTIFIER $@18 SQUAREOPEN $@19 dimlist SQUARECLOSE •

    $default  reduce using rule 131 (arrayList)


State 534

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE • $@27 EQ $@28 RHS

    $default  reduce using rule 140 ($@27)

    $@27  go to state 593


State 535

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN • $@58 statements $@59 SCOPECLOSE $@60 extend

    $default  reduce using rule 204 ($@58)

    $@58  go to state 594


State 536

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS SQUARECLOSE $@52 SCOPEOPEN • $@53 statements $@54 SCOPECLOSE

    $default  reduce using rule 197 ($@53)

    $@53  go to state 595


State 537

  181 both_assignment: ROUNDOPEN $@41 assignment_statement ROUNDCLOSE •

    $default  reduce using rule 181 (both_assignment)


State 538

  174 g: IDENTIFIER $@36 • EQ $@37 RHS

    EQ  shift, and go to state 596


State 539

  178 g: g COMMA • $@38 IDENTIFIER $@39 EQ $@40 RHS

    $default  reduce using rule 175 ($@38)

    $@38  go to state 597


State 540

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS • PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    PIPE  shift, and go to state 598


State 541

  244 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON NULL_ARGS • COLON SEMICOLON

    COLON  shift, and go to state 599


State 542

  240 arguments: arguments • COMMA $@77 RHS
  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON arguments • COLON SEMICOLON $@78

    COMMA  shift, and go to state 505
    COLON  shift, and go to state 600


State 543

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays • analyze_syntax SEMICOLON $@70

    COLON  shift, and go to state 601

    $default  reduce using rule 229 (analyze_syntax)

    analyze_syntax  go to state 602


State 544

  250 sleep: SLEEP $@79 ROUNDOPEN $@80 FLOATLITERAL $@81 ROUNDCLOSE $@82 • SEMICOLON

    SEMICOLON  shift, and go to state 603


State 545

  255 sleep: SLEEP $@83 ROUNDOPEN $@84 INTEGERLITERAL $@85 ROUNDCLOSE $@86 • SEMICOLON

    SEMICOLON  shift, and go to state 604


State 546

  446 in_stmt: IN $@166 ARROW $@167 IDENTIFIER $@168 •

    $default  reduce using rule 446 (in_stmt)


State 547

  452 in_stmt: INVOKE IN $@169 ARROW $@170 IDENTIFIER • $@171 COLON $@172 arguments COLON $@173

    $default  reduce using rule 449 ($@171)

    $@171  go to state 605


State 548

  458 in_stmt: INVOKE IN $@174 ARROW $@175 IDENTIFIER • $@176 COLON $@177 NULL_ARGS COLON $@178

    $default  reduce using rule 455 ($@176)

    $@176  go to state 606


State 549

   75 RHS: NEG $@5 ROUNDOPEN $@6 RHS ROUNDCLOSE •

    $default  reduce using rule 75 (RHS)


State 550

   47 E: SQUAREOPEN $@1 arr_access SQUARECLOSE •

    $default  reduce using rule 47 (E)


State 551

   70 RHS: ROUNDOPEN $@3 RHS all_ops next ROUNDCLOSE •

    $default  reduce using rule 70 (RHS)


State 552

   61 next: RHS all_ops • next

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    next           go to state 607
    RHS            go to state 504
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 553

  240 arguments: arguments COMMA $@77 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 608
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 554

  238 func_invoke: INVOKE IDENTIFIER $@74 COLON $@75 NULL_ARGS COLON $@76 •

    $default  reduce using rule 238 (func_invoke)


State 555

  442 method_invoke: INVOKE id ARROW $@162 IDENTIFIER $@163 COLON $@164 • method_args COLON $@165

    NULL_ARGS         shift, and go to state 609
    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 457
    func_invoke    go to state 249
    arguments      go to state 610
    get_invoke     go to state 250
    method_args    go to state 611
    method_invoke  go to state 251
    in_stmt        go to state 252


State 556

  263 nextip: COMMA IDENTIFIER $@89 nextip •

    $default  reduce using rule 263 (nextip)


State 557

  156 exprlist: exprlist COMMA $@32 arith_expr •
  162 arith_expr: arith_expr • arithmetic_op arith_operand

    DIV       shift, and go to state 361
    ADD       shift, and go to state 362
    SUB       shift, and go to state 363
    MUL       shift, and go to state 364
    EXPONENT  shift, and go to state 365
    MODULO    shift, and go to state 366

    $default  reduce using rule 156 (exprlist)

    arithmetic_op  go to state 368


State 558

  332 taskscope: SCOPEOPEN $@112 • taskscope $@113 SCOPECLOSE $@114 taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 612
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 559

  323 taskscope: declaration taskscope •

    $default  reduce using rule 323 (taskscope)


State 560

  324 taskscope: log taskscope •

    $default  reduce using rule 324 (taskscope)


State 561

  326 taskscope: loop taskscope •

    $default  reduce using rule 326 (taskscope)


State 562

  325 taskscope: conditional taskscope •

    $default  reduce using rule 325 (taskscope)


State 563

  327 taskscope: func_invoke2 taskscope •

    $default  reduce using rule 327 (taskscope)


State 564

  333 taskscope: sleep taskscope •

    $default  reduce using rule 333 (taskscope)


State 565

  328 taskscope: output taskscope •

    $default  reduce using rule 328 (taskscope)


State 566

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 args $@109 SCOPEOPEN $@110 taskscope $@111 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 613


State 567

  334 taskscope: method_invoke2 taskscope •

    $default  reduce using rule 334 (taskscope)


State 568

  401 simpleList_t: IDENTIFIER $@136 EQ $@137 RHS •

    $default  reduce using rule 401 (simpleList_t)


State 569

  398 simpleList_t: simpleList COMMA $@134 IDENTIFIER $@135 •

    $default  reduce using rule 398 (simpleList_t)


State 570

  405 simpleList_t: simpleList COMMA $@138 IDENTIFIER $@139 • EQ $@140 RHS

    EQ  shift, and go to state 614


State 571

  146 dimlist: dimlist • COMMA $@29 array_inValues
  409 arrayList_t: IDENTIFIER $@141 SQUAREOPEN $@142 dimlist • SQUARECLOSE $@143

    COMMA        shift, and go to state 346
    SQUARECLOSE  shift, and go to state 615


State 572

  146 dimlist: dimlist • COMMA $@29 array_inValues
  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN $@149 dimlist • SQUARECLOSE $@150 EQ $@151 RHS

    COMMA        shift, and go to state 346
    SQUARECLOSE  shift, and go to state 616


State 573

  414 arrayList_t: arrayList COMMA $@144 IDENTIFIER $@145 • SQUAREOPEN $@146 dimlist SQUARECLOSE $@147

    SQUAREOPEN  shift, and go to state 617


State 574

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 • SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS

    SQUAREOPEN  shift, and go to state 618


State 575

  434 func_decl_m: FUNC IDENTIFIER $@159 COLON • $@160 args COLON $@161 func_return

    $default  reduce using rule 432 ($@160)

    $@160  go to state 619


State 576

  476 return_statement_m: RETURN • $@181 RHS SEMICOLON $@182
  479                   | RETURN • $@183 NVOID SEMICOLON $@184

    NVOID     reduce using rule 477 ($@183)
    $default  reduce using rule 474 ($@181)

    $@181  go to state 620
    $@183  go to state 621


State 577

  472 method_statements: SCOPEOPEN • $@179 method_statements $@180 SCOPECLOSE

    $default  reduce using rule 470 ($@179)

    $@179  go to state 622


State 578

  459 method_statements: declaration •

    $default  reduce using rule 459 (method_statements)


State 579

  460 method_statements: log •

    $default  reduce using rule 460 (method_statements)


State 580

  463 method_statements: loop •

    $default  reduce using rule 463 (method_statements)


State 581

  465 method_statements: conditional •

    $default  reduce using rule 465 (method_statements)


State 582

  466 method_statements: analyze_statement •

    $default  reduce using rule 466 (method_statements)


State 583

  462 method_statements: func_invoke2 •

    $default  reduce using rule 462 (method_statements)


State 584

  461 method_statements: task_invoke •

    $default  reduce using rule 461 (method_statements)


State 585

  469 method_statements: sleep •

    $default  reduce using rule 469 (method_statements)


State 586

  467 method_statements: input •

    $default  reduce using rule 467 (method_statements)


State 587

  468 method_statements: output •

    $default  reduce using rule 468 (method_statements)


State 588

  473 method_statements: method_invoke2 •

    $default  reduce using rule 473 (method_statements)


State 589

  480 method_body: method_statements • method_body

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 576
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 577
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 481 (method_body)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 578
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 579
    loop                  go to state 580
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 581
    when_statement        go to state 113
    analyze_statement     go to state 582
    func_invoke2          go to state 583
    func_invoke           go to state 116
    task_invoke           go to state 584
    sleep                 go to state 585
    input                 go to state 586
    output                go to state 587
    access                go to state 124
    method_invoke2        go to state 588
    method_invoke         go to state 126
    method_statements     go to state 589
    return_statement_m    go to state 590
    method_body           go to state 623


State 590

  464 method_statements: return_statement_m •

    $default  reduce using rule 464 (method_statements)


State 591

  430 method: func_decl_m SCOPEOPEN $@157 method_body • $@158 SCOPECLOSE

    $default  reduce using rule 429 ($@158)

    $@158  go to state 624


State 592

  136 arrayList: IDENTIFIER $@20 SQUAREOPEN $@21 dimlist SQUARECLOSE $@22 EQ $@23 RHS •

    $default  reduce using rule 136 (arrayList)


State 593

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 • EQ $@28 RHS

    EQ  shift, and go to state 625


State 594

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 • statements $@59 SCOPECLOSE $@60 extend

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    BREAK          shift, and go to state 626
    CONTINUE       shift, and go to state 627
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 628
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 354 (statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 629
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 630
    loop                  go to state 631
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 632
    when_statement        go to state 113
    analyze_statement     go to state 633
    func_invoke2          go to state 634
    func_invoke           go to state 116
    task_invoke           go to state 635
    sleep                 go to state 636
    input                 go to state 637
    return_statement      go to state 638
    output                go to state 639
    statement             go to state 640
    statements            go to state 641
    access                go to state 124
    method_invoke2        go to state 642
    method_invoke         go to state 126


State 595

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS SQUARECLOSE $@52 SCOPEOPEN $@53 • statements $@54 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    BREAK          shift, and go to state 626
    CONTINUE       shift, and go to state 627
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 628
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 354 (statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 629
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 630
    loop                  go to state 631
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 632
    when_statement        go to state 113
    analyze_statement     go to state 633
    func_invoke2          go to state 634
    func_invoke           go to state 116
    task_invoke           go to state 635
    sleep                 go to state 636
    input                 go to state 637
    return_statement      go to state 638
    output                go to state 639
    statement             go to state 640
    statements            go to state 643
    access                go to state 124
    method_invoke2        go to state 642
    method_invoke         go to state 126


State 596

  174 g: IDENTIFIER $@36 EQ • $@37 RHS

    $default  reduce using rule 173 ($@37)

    $@37  go to state 644


State 597

  178 g: g COMMA $@38 • IDENTIFIER $@39 EQ $@40 RHS

    IDENTIFIER  shift, and go to state 645


State 598

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE • $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    $default  reduce using rule 189 ($@46)

    $@46  go to state 646


State 599

  244 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON NULL_ARGS COLON • SEMICOLON

    SEMICOLON  shift, and go to state 647


State 600

  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON arguments COLON • SEMICOLON $@78

    SEMICOLON  shift, and go to state 648


State 601

  228 analyze_syntax: COLON • analysis_arrays analyze_syntax

    NARRNUM  shift, and go to state 430
    NARRDEC  shift, and go to state 431
    AARRNUM  shift, and go to state 432
    AARRDEC  shift, and go to state 433

    analysis_arrays  go to state 649


State 602

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax • SEMICOLON $@70

    SEMICOLON  shift, and go to state 650


State 603

  250 sleep: SLEEP $@79 ROUNDOPEN $@80 FLOATLITERAL $@81 ROUNDCLOSE $@82 SEMICOLON •

    $default  reduce using rule 250 (sleep)


State 604

  255 sleep: SLEEP $@83 ROUNDOPEN $@84 INTEGERLITERAL $@85 ROUNDCLOSE $@86 SEMICOLON •

    $default  reduce using rule 255 (sleep)


State 605

  452 in_stmt: INVOKE IN $@169 ARROW $@170 IDENTIFIER $@171 • COLON $@172 arguments COLON $@173

    COLON  shift, and go to state 651


State 606

  458 in_stmt: INVOKE IN $@174 ARROW $@175 IDENTIFIER $@176 • COLON $@177 NULL_ARGS COLON $@178

    COLON  shift, and go to state 652


State 607

   61 next: RHS all_ops next •

    $default  reduce using rule 61 (next)


State 608

  240 arguments: arguments COMMA $@77 RHS •

    $default  reduce using rule 240 (arguments)


State 609

  437 method_args: NULL_ARGS •

    $default  reduce using rule 437 (method_args)


State 610

  240 arguments: arguments • COMMA $@77 RHS
  436 method_args: arguments •

    COMMA  shift, and go to state 505

    $default  reduce using rule 436 (method_args)


State 611

  442 method_invoke: INVOKE id ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args • COLON $@165

    COLON  shift, and go to state 653


State 612

  332 taskscope: SCOPEOPEN $@112 taskscope • $@113 SCOPECLOSE $@114 taskscope

    $default  reduce using rule 330 ($@113)

    $@113  go to state 654


State 613

  322 task: TASK $@106 IDENTIFIER $@107 COLON $@108 args $@109 SCOPEOPEN $@110 taskscope $@111 SCOPECLOSE •

    $default  reduce using rule 322 (task)


State 614

  405 simpleList_t: simpleList COMMA $@138 IDENTIFIER $@139 EQ • $@140 RHS

    $default  reduce using rule 404 ($@140)

    $@140  go to state 655


State 615

  409 arrayList_t: IDENTIFIER $@141 SQUAREOPEN $@142 dimlist SQUARECLOSE • $@143

    $default  reduce using rule 408 ($@143)

    $@143  go to state 656


State 616

  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN $@149 dimlist SQUARECLOSE • $@150 EQ $@151 RHS

    $default  reduce using rule 417 ($@150)

    $@150  go to state 657


State 617

  414 arrayList_t: arrayList COMMA $@144 IDENTIFIER $@145 SQUAREOPEN • $@146 dimlist SQUARECLOSE $@147

    $default  reduce using rule 412 ($@146)

    $@146  go to state 658


State 618

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN • $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS

    $default  reduce using rule 422 ($@154)

    $@154  go to state 659


State 619

  434 func_decl_m: FUNC IDENTIFIER $@159 COLON $@160 • args COLON $@161 func_return

    NULL_ARGS      shift, and go to state 200
    NNUM           shift, and go to state 201
    NDEC           shift, and go to state 202
    NBOOL          shift, and go to state 203
    NLET           shift, and go to state 204
    NTEXT          shift, and go to state 205
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 206
    ADEC           shift, and go to state 207
    ABOOL          shift, and go to state 208
    ALET           shift, and go to state 209
    ATEXT          shift, and go to state 210
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 211
    AUDATATYPE     shift, and go to state 212
    NARRUDATATYPE  shift, and go to state 213
    AARRUDATATYPE  shift, and go to state 214

    all_datatypes   go to state 215
    nonAtomicArray  go to state 216
    atomicArray     go to state 217
    func_args       go to state 218
    args            go to state 660


State 620

  476 return_statement_m: RETURN $@181 • RHS SEMICOLON $@182

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 661
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 621

  479 return_statement_m: RETURN $@183 • NVOID SEMICOLON $@184

    NVOID  shift, and go to state 662


State 622

  472 method_statements: SCOPEOPEN $@179 • method_statements $@180 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 576
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 577
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 578
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 579
    loop                  go to state 580
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 581
    when_statement        go to state 113
    analyze_statement     go to state 582
    func_invoke2          go to state 583
    func_invoke           go to state 116
    task_invoke           go to state 584
    sleep                 go to state 585
    input                 go to state 586
    output                go to state 587
    access                go to state 124
    method_invoke2        go to state 588
    method_invoke         go to state 126
    method_statements     go to state 663
    return_statement_m    go to state 590


State 623

  480 method_body: method_statements method_body •

    $default  reduce using rule 480 (method_body)


State 624

  430 method: func_decl_m SCOPEOPEN $@157 method_body $@158 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 664


State 625

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ • $@28 RHS

    $default  reduce using rule 141 ($@28)

    $@28  go to state 665


State 626

  349 statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 666


State 627

  350 statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 667


State 628

  346 statement: SCOPEOPEN • $@115 statements $@116 SCOPECLOSE

    $default  reduce using rule 344 ($@115)

    $@115  go to state 668


State 629

  336 statement: declaration •

    $default  reduce using rule 336 (statement)


State 630

  337 statement: log •

    $default  reduce using rule 337 (statement)


State 631

  339 statement: loop •

    $default  reduce using rule 339 (statement)


State 632

  338 statement: conditional •

    $default  reduce using rule 338 (statement)


State 633

  343 statement: analyze_statement •

    $default  reduce using rule 343 (statement)


State 634

  341 statement: func_invoke2 •

    $default  reduce using rule 341 (statement)


State 635

  342 statement: task_invoke •

    $default  reduce using rule 342 (statement)


State 636

  348 statement: sleep •

    $default  reduce using rule 348 (statement)


State 637

  351 statement: input •

    $default  reduce using rule 351 (statement)


State 638

  340 statement: return_statement •

    $default  reduce using rule 340 (statement)


State 639

  347 statement: output •

    $default  reduce using rule 347 (statement)


State 640

  353 statements: statement • statements

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    BREAK          shift, and go to state 626
    CONTINUE       shift, and go to state 627
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 628
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 354 (statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 629
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 630
    loop                  go to state 631
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 632
    when_statement        go to state 113
    analyze_statement     go to state 633
    func_invoke2          go to state 634
    func_invoke           go to state 116
    task_invoke           go to state 635
    sleep                 go to state 636
    input                 go to state 637
    return_statement      go to state 638
    output                go to state 639
    statement             go to state 640
    statements            go to state 669
    access                go to state 124
    method_invoke2        go to state 642
    method_invoke         go to state 126


State 641

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements • $@59 SCOPECLOSE $@60 extend

    $default  reduce using rule 205 ($@59)

    $@59  go to state 670


State 642

  352 statement: method_invoke2 •

    $default  reduce using rule 352 (statement)


State 643

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS SQUARECLOSE $@52 SCOPEOPEN $@53 statements • $@54 SCOPECLOSE

    $default  reduce using rule 198 ($@54)

    $@54  go to state 671


State 644

  174 g: IDENTIFIER $@36 EQ $@37 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 672
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 645

  178 g: g COMMA $@38 IDENTIFIER • $@39 EQ $@40 RHS

    $default  reduce using rule 176 ($@39)

    $@39  go to state 673


State 646

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 • exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    IDENTIFIER  shift, and go to state 354
    ROUNDOPEN   shift, and go to state 674

    LHS                   go to state 675
    expression_statement  go to state 676
    exprrr                go to state 677
    access                go to state 124


State 647

  244 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON NULL_ARGS COLON SEMICOLON •

    $default  reduce using rule 244 (task_invoke)


State 648

  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON arguments COLON SEMICOLON • $@78

    $default  reduce using rule 242 ($@78)

    $@78  go to state 678


State 649

  228 analyze_syntax: COLON analysis_arrays • analyze_syntax

    COLON  shift, and go to state 601

    $default  reduce using rule 229 (analyze_syntax)

    analyze_syntax  go to state 679


State 650

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax SEMICOLON • $@70

    $default  reduce using rule 226 ($@70)

    $@70  go to state 680


State 651

  452 in_stmt: INVOKE IN $@169 ARROW $@170 IDENTIFIER $@171 COLON • $@172 arguments COLON $@173

    $default  reduce using rule 450 ($@172)

    $@172  go to state 681


State 652

  458 in_stmt: INVOKE IN $@174 ARROW $@175 IDENTIFIER $@176 COLON • $@177 NULL_ARGS COLON $@178

    $default  reduce using rule 456 ($@177)

    $@177  go to state 682


State 653

  442 method_invoke: INVOKE id ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args COLON • $@165

    $default  reduce using rule 441 ($@165)

    $@165  go to state 683


State 654

  332 taskscope: SCOPEOPEN $@112 taskscope $@113 • SCOPECLOSE $@114 taskscope

    SCOPECLOSE  shift, and go to state 684


State 655

  405 simpleList_t: simpleList COMMA $@138 IDENTIFIER $@139 EQ $@140 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 685
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 656

  409 arrayList_t: IDENTIFIER $@141 SQUAREOPEN $@142 dimlist SQUARECLOSE $@143 •

    $default  reduce using rule 409 (arrayList_t)


State 657

  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 • EQ $@151 RHS

    EQ  shift, and go to state 686


State 658

  414 arrayList_t: arrayList COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 • dimlist SQUARECLOSE $@147

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 289
    dimlist         go to state 687


State 659

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 • dimlist SQUARECLOSE $@155 EQ $@156 RHS

    INTEGERLITERAL  shift, and go to state 287
    IDENTIFIER      shift, and go to state 288

    array_inValues  go to state 289
    dimlist         go to state 688


State 660

  434 func_decl_m: FUNC IDENTIFIER $@159 COLON $@160 args • COLON $@161 func_return

    COLON  shift, and go to state 689


State 661

  476 return_statement_m: RETURN $@181 RHS • SEMICOLON $@182

    SEMICOLON  shift, and go to state 690


State 662

  479 return_statement_m: RETURN $@183 NVOID • SEMICOLON $@184

    SEMICOLON  shift, and go to state 691


State 663

  472 method_statements: SCOPEOPEN $@179 method_statements • $@180 SCOPECLOSE

    $default  reduce using rule 471 ($@180)

    $@180  go to state 692


State 664

  430 method: func_decl_m SCOPEOPEN $@157 method_body $@158 SCOPECLOSE •

    $default  reduce using rule 430 (method)


State 665

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 693
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 666

  349 statement: BREAK SEMICOLON •

    $default  reduce using rule 349 (statement)


State 667

  350 statement: CONTINUE SEMICOLON •

    $default  reduce using rule 350 (statement)


State 668

  346 statement: SCOPEOPEN $@115 • statements $@116 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    BREAK          shift, and go to state 626
    CONTINUE       shift, and go to state 627
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 628
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 354 (statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 629
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 630
    loop                  go to state 631
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 632
    when_statement        go to state 113
    analyze_statement     go to state 633
    func_invoke2          go to state 634
    func_invoke           go to state 116
    task_invoke           go to state 635
    sleep                 go to state 636
    input                 go to state 637
    return_statement      go to state 638
    output                go to state 639
    statement             go to state 640
    statements            go to state 694
    access                go to state 124
    method_invoke2        go to state 642
    method_invoke         go to state 126


State 669

  353 statements: statement statements •

    $default  reduce using rule 353 (statements)


State 670

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 • SCOPECLOSE $@60 extend

    SCOPECLOSE  shift, and go to state 695


State 671

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS SQUARECLOSE $@52 SCOPEOPEN $@53 statements $@54 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 696


State 672

  174 g: IDENTIFIER $@36 EQ $@37 RHS •

    $default  reduce using rule 174 (g)


State 673

  178 g: g COMMA $@38 IDENTIFIER $@39 • EQ $@40 RHS

    EQ  shift, and go to state 697


State 674

  169 exprrr: ROUNDOPEN • $@35 expression_statement ROUNDCLOSE

    $default  reduce using rule 168 ($@35)

    $@35  go to state 698


State 675

  166 expression_statement: LHS • expression_op RHS

    INCR           shift, and go to state 171
    DECR           shift, and go to state 172
    ASSN_MODULO    shift, and go to state 173
    ASSN_EXPONENT  shift, and go to state 174
    ASSN_DIV       shift, and go to state 175
    ASSN_MUL       shift, and go to state 176

    expression_op  go to state 177


State 676

  167 exprrr: expression_statement •

    $default  reduce using rule 167 (exprrr)


State 677

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr • SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    SQUARECLOSE  shift, and go to state 699


State 678

  243 task_invoke: MAKE_PARALLEL IDENTIFIER COLON arith_expr COLON arith_expr COLON arguments COLON SEMICOLON $@78 •

    $default  reduce using rule 243 (task_invoke)


State 679

  228 analyze_syntax: COLON analysis_arrays analyze_syntax •

    $default  reduce using rule 228 (analyze_syntax)


State 680

  227 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax SEMICOLON $@70 •

    $default  reduce using rule 227 (analyze_statement)


State 681

  452 in_stmt: INVOKE IN $@169 ARROW $@170 IDENTIFIER $@171 COLON $@172 • arguments COLON $@173

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 457
    func_invoke    go to state 249
    arguments      go to state 700
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 682

  458 in_stmt: INVOKE IN $@174 ARROW $@175 IDENTIFIER $@176 COLON $@177 • NULL_ARGS COLON $@178

    NULL_ARGS  shift, and go to state 701


State 683

  442 method_invoke: INVOKE id ARROW $@162 IDENTIFIER $@163 COLON $@164 method_args COLON $@165 •

    $default  reduce using rule 442 (method_invoke)


State 684

  332 taskscope: SCOPEOPEN $@112 taskscope $@113 SCOPECLOSE • $@114 taskscope

    $default  reduce using rule 331 ($@114)

    $@114  go to state 702


State 685

  405 simpleList_t: simpleList COMMA $@138 IDENTIFIER $@139 EQ $@140 RHS •

    $default  reduce using rule 405 (simpleList_t)


State 686

  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ • $@151 RHS

    $default  reduce using rule 418 ($@151)

    $@151  go to state 703


State 687

  146 dimlist: dimlist • COMMA $@29 array_inValues
  414 arrayList_t: arrayList COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist • SQUARECLOSE $@147

    COMMA        shift, and go to state 346
    SQUARECLOSE  shift, and go to state 704


State 688

  146 dimlist: dimlist • COMMA $@29 array_inValues
  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist • SQUARECLOSE $@155 EQ $@156 RHS

    COMMA        shift, and go to state 346
    SQUARECLOSE  shift, and go to state 705


State 689

  434 func_decl_m: FUNC IDENTIFIER $@159 COLON $@160 args COLON • $@161 func_return

    $default  reduce using rule 433 ($@161)

    $@161  go to state 706


State 690

  476 return_statement_m: RETURN $@181 RHS SEMICOLON • $@182

    $default  reduce using rule 475 ($@182)

    $@182  go to state 707


State 691

  479 return_statement_m: RETURN $@183 NVOID SEMICOLON • $@184

    $default  reduce using rule 478 ($@184)

    $@184  go to state 708


State 692

  472 method_statements: SCOPEOPEN $@179 method_statements $@180 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 709


State 693

  142 arrayList: arrayList COMMA $@24 IDENTIFIER $@25 SQUAREOPEN $@26 dimlist SQUARECLOSE $@27 EQ $@28 RHS •

    $default  reduce using rule 142 (arrayList)


State 694

  346 statement: SCOPEOPEN $@115 statements • $@116 SCOPECLOSE

    $default  reduce using rule 345 ($@116)

    $@116  go to state 710


State 695

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE • $@60 extend

    $default  reduce using rule 206 ($@60)

    $@60  go to state 711


State 696

  199 while_loop: REPEAT $@50 SQUAREOPEN $@51 RHS SQUARECLOSE $@52 SCOPEOPEN $@53 statements $@54 SCOPECLOSE •

    $default  reduce using rule 199 (while_loop)


State 697

  178 g: g COMMA $@38 IDENTIFIER $@39 EQ • $@40 RHS

    $default  reduce using rule 177 ($@40)

    $@40  go to state 712


State 698

  169 exprrr: ROUNDOPEN $@35 • expression_statement ROUNDCLOSE

    IDENTIFIER  shift, and go to state 354

    LHS                   go to state 675
    expression_statement  go to state 713
    access                go to state 124


State 699

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE • $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    $default  reduce using rule 190 ($@47)

    $@47  go to state 714


State 700

  240 arguments: arguments • COMMA $@77 RHS
  452 in_stmt: INVOKE IN $@169 ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments • COLON $@173

    COMMA  shift, and go to state 505
    COLON  shift, and go to state 715


State 701

  458 in_stmt: INVOKE IN $@174 ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS • COLON $@178

    COLON  shift, and go to state 716


State 702

  332 taskscope: SCOPEOPEN $@112 taskscope $@113 SCOPECLOSE $@114 • taskscope

    WHEN        shift, and go to state 91
    REPEAT      shift, and go to state 92
    FOR         shift, and go to state 93
    SLEEP       shift, and go to state 96
    ATOMIC      shift, and go to state 98
    ARRAY       shift, and go to state 5
    INVOKE      shift, and go to state 99
    OP          shift, and go to state 101
    IDENTIFIER  shift, and go to state 102
    SCOPEOPEN   shift, and go to state 511
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    NUDATATYPE  shift, and go to state 29

    $default  reduce using rule 335 (taskscope)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 512
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 513
    loop                  go to state 514
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 515
    when_statement        go to state 113
    func_invoke2          go to state 516
    func_invoke           go to state 116
    sleep                 go to state 517
    output                go to state 518
    taskscope             go to state 717
    access                go to state 124
    method_invoke2        go to state 520
    method_invoke         go to state 126


State 703

  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 718
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 704

  414 arrayList_t: arrayList COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE • $@147

    $default  reduce using rule 413 ($@147)

    $@147  go to state 719


State 705

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE • $@155 EQ $@156 RHS

    $default  reduce using rule 423 ($@155)

    $@155  go to state 720


State 706

  434 func_decl_m: FUNC IDENTIFIER $@159 COLON $@160 args COLON $@161 • func_return

    IDENTIFIER  shift, and go to state 411
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    NUDATATYPE  shift, and go to state 412

    nonAtomic_datatypes  go to state 413
    nonAtomicSimple      go to state 414
    nonAtomicArray       go to state 415
    func_return          go to state 721


State 707

  476 return_statement_m: RETURN $@181 RHS SEMICOLON $@182 •

    $default  reduce using rule 476 (return_statement_m)


State 708

  479 return_statement_m: RETURN $@183 NVOID SEMICOLON $@184 •

    $default  reduce using rule 479 (return_statement_m)


State 709

  472 method_statements: SCOPEOPEN $@179 method_statements $@180 SCOPECLOSE •

    $default  reduce using rule 472 (method_statements)


State 710

  346 statement: SCOPEOPEN $@115 statements $@116 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 722


State 711

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 • extend

    ELSE_WHEN  shift, and go to state 723
    DEFAULT    shift, and go to state 724

    $default  reduce using rule 219 (extend)

    extend  go to state 725


State 712

  178 g: g COMMA $@38 IDENTIFIER $@39 EQ $@40 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 726
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 713

  169 exprrr: ROUNDOPEN $@35 expression_statement • ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 727


State 714

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 • SCOPEOPEN $@48 statements $@49 SCOPECLOSE

    SCOPEOPEN  shift, and go to state 728


State 715

  452 in_stmt: INVOKE IN $@169 ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments COLON • $@173

    $default  reduce using rule 451 ($@173)

    $@173  go to state 729


State 716

  458 in_stmt: INVOKE IN $@174 ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON • $@178

    $default  reduce using rule 457 ($@178)

    $@178  go to state 730


State 717

  332 taskscope: SCOPEOPEN $@112 taskscope $@113 SCOPECLOSE $@114 taskscope •

    $default  reduce using rule 332 (taskscope)


State 718

  419 arrayList_t: IDENTIFIER $@148 SQUAREOPEN $@149 dimlist SQUARECLOSE $@150 EQ $@151 RHS •

    $default  reduce using rule 419 (arrayList_t)


State 719

  414 arrayList_t: arrayList COMMA $@144 IDENTIFIER $@145 SQUAREOPEN $@146 dimlist SQUARECLOSE $@147 •

    $default  reduce using rule 414 (arrayList_t)


State 720

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 • EQ $@156 RHS

    EQ  shift, and go to state 731


State 721

  434 func_decl_m: FUNC IDENTIFIER $@159 COLON $@160 args COLON $@161 func_return •

    $default  reduce using rule 434 (func_decl_m)


State 722

  346 statement: SCOPEOPEN $@115 statements $@116 SCOPECLOSE •

    $default  reduce using rule 346 (statement)


State 723

  214 extend: ELSE_WHEN • $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend

    $default  reduce using rule 208 ($@61)

    $@61  go to state 732


State 724

  218 extend: DEFAULT • $@67 SCOPEOPEN $@68 statements $@69 SCOPECLOSE

    $default  reduce using rule 215 ($@67)

    $@67  go to state 733


State 725

  207 when_statement: WHEN $@55 SQUAREOPEN $@56 RHS SQUARECLOSE $@57 SCOPEOPEN $@58 statements $@59 SCOPECLOSE $@60 extend •

    $default  reduce using rule 207 (when_statement)


State 726

  178 g: g COMMA $@38 IDENTIFIER $@39 EQ $@40 RHS •

    $default  reduce using rule 178 (g)


State 727

  169 exprrr: ROUNDOPEN $@35 expression_statement ROUNDCLOSE •

    $default  reduce using rule 169 (exprrr)


State 728

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN • $@48 statements $@49 SCOPECLOSE

    $default  reduce using rule 191 ($@48)

    $@48  go to state 734


State 729

  452 in_stmt: INVOKE IN $@169 ARROW $@170 IDENTIFIER $@171 COLON $@172 arguments COLON $@173 •

    $default  reduce using rule 452 (in_stmt)


State 730

  458 in_stmt: INVOKE IN $@174 ARROW $@175 IDENTIFIER $@176 COLON $@177 NULL_ARGS COLON $@178 •

    $default  reduce using rule 458 (in_stmt)


State 731

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ • $@156 RHS

    $default  reduce using rule 424 ($@156)

    $@156  go to state 735


State 732

  214 extend: ELSE_WHEN $@61 • SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend

    SQUAREOPEN  shift, and go to state 736


State 733

  218 extend: DEFAULT $@67 • SCOPEOPEN $@68 statements $@69 SCOPECLOSE

    SCOPEOPEN  shift, and go to state 737


State 734

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 • statements $@49 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    BREAK          shift, and go to state 626
    CONTINUE       shift, and go to state 627
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 628
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 354 (statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 629
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 630
    loop                  go to state 631
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 632
    when_statement        go to state 113
    analyze_statement     go to state 633
    func_invoke2          go to state 634
    func_invoke           go to state 116
    task_invoke           go to state 635
    sleep                 go to state 636
    input                 go to state 637
    return_statement      go to state 638
    output                go to state 639
    statement             go to state 640
    statements            go to state 738
    access                go to state 124
    method_invoke2        go to state 642
    method_invoke         go to state 126


State 735

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 • RHS

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 739
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 736

  214 extend: ELSE_WHEN $@61 SQUAREOPEN • $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend

    $default  reduce using rule 209 ($@62)

    $@62  go to state 740


State 737

  218 extend: DEFAULT $@67 SCOPEOPEN • $@68 statements $@69 SCOPECLOSE

    $default  reduce using rule 216 ($@68)

    $@68  go to state 741


State 738

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements • $@49 SCOPECLOSE

    $default  reduce using rule 192 ($@49)

    $@49  go to state 742


State 739

  425 arrayList_t: arrayList COMMA $@152 IDENTIFIER $@153 SQUAREOPEN $@154 dimlist SQUARECLOSE $@155 EQ $@156 RHS •

    $default  reduce using rule 425 (arrayList_t)


State 740

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 • RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend

    TID               shift, and go to state 234
    GET               shift, and go to state 235
    IN                shift, and go to state 236
    INVOKE            shift, and go to state 237
    NEG               shift, and go to state 238
    INTEGERLITERAL    shift, and go to state 239
    STRINGLITERAL     shift, and go to state 240
    CHARACTERLITERAL  shift, and go to state 241
    BOOLEANLITERAL    shift, and go to state 242
    FLOATLITERAL      shift, and go to state 243
    IDENTIFIER        shift, and go to state 244
    ROUNDOPEN         shift, and go to state 245

    T              go to state 246
    constants      go to state 247
    RHS            go to state 743
    func_invoke    go to state 249
    get_invoke     go to state 250
    method_invoke  go to state 251
    in_stmt        go to state 252


State 741

  218 extend: DEFAULT $@67 SCOPEOPEN $@68 • statements $@69 SCOPECLOSE

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    BREAK          shift, and go to state 626
    CONTINUE       shift, and go to state 627
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 628
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 354 (statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 629
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 630
    loop                  go to state 631
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 632
    when_statement        go to state 113
    analyze_statement     go to state 633
    func_invoke2          go to state 634
    func_invoke           go to state 116
    task_invoke           go to state 635
    sleep                 go to state 636
    input                 go to state 637
    return_statement      go to state 638
    output                go to state 639
    statement             go to state 640
    statements            go to state 744
    access                go to state 124
    method_invoke2        go to state 642
    method_invoke         go to state 126


State 742

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 745


State 743

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS • SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend

    SQUARECLOSE  shift, and go to state 746


State 744

  218 extend: DEFAULT $@67 SCOPEOPEN $@68 statements • $@69 SCOPECLOSE

    $default  reduce using rule 217 ($@69)

    $@69  go to state 747


State 745

  193 for_loop: FOR $@43 SQUAREOPEN $@44 both_assignment PIPE $@45 RHS PIPE $@46 exprrr SQUARECLOSE $@47 SCOPEOPEN $@48 statements $@49 SCOPECLOSE •

    $default  reduce using rule 193 (for_loop)


State 746

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE • $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend

    $default  reduce using rule 210 ($@63)

    $@63  go to state 748


State 747

  218 extend: DEFAULT $@67 SCOPEOPEN $@68 statements $@69 • SCOPECLOSE

    SCOPECLOSE  shift, and go to state 749


State 748

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 • SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend

    SCOPEOPEN  shift, and go to state 750


State 749

  218 extend: DEFAULT $@67 SCOPEOPEN $@68 statements $@69 SCOPECLOSE •

    $default  reduce using rule 218 (extend)


State 750

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN • $@64 statements $@65 SCOPECLOSE $@66 extend

    $default  reduce using rule 211 ($@64)

    $@64  go to state 751


State 751

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 • statements $@65 SCOPECLOSE $@66 extend

    WHEN           shift, and go to state 91
    REPEAT         shift, and go to state 92
    FOR            shift, and go to state 93
    BREAK          shift, and go to state 626
    CONTINUE       shift, and go to state 627
    MAKE_PARALLEL  shift, and go to state 94
    ANALYZE        shift, and go to state 95
    SLEEP          shift, and go to state 96
    RETURN         shift, and go to state 97
    ATOMIC         shift, and go to state 98
    ARRAY          shift, and go to state 5
    INVOKE         shift, and go to state 99
    IP             shift, and go to state 100
    OP             shift, and go to state 101
    IDENTIFIER     shift, and go to state 102
    SCOPEOPEN      shift, and go to state 628
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    NUDATATYPE     shift, and go to state 29

    $default  reduce using rule 354 (statements)

    nonAtomicSimple       go to state 31
    atomicSimple          go to state 32
    nonAtomicArray        go to state 33
    atomicArray           go to state 34
    errorDatatypes        go to state 35
    declaration           go to state 629
    simpleDatatype        go to state 37
    arrayDatatype         go to state 38
    declarationStmt       go to state 39
    LHS                   go to state 105
    assignment_statement  go to state 106
    expression_statement  go to state 107
    log                   go to state 630
    loop                  go to state 631
    for_loop              go to state 110
    while_loop            go to state 111
    conditional           go to state 632
    when_statement        go to state 113
    analyze_statement     go to state 633
    func_invoke2          go to state 634
    func_invoke           go to state 116
    task_invoke           go to state 635
    sleep                 go to state 636
    input                 go to state 637
    return_statement      go to state 638
    output                go to state 639
    statement             go to state 640
    statements            go to state 752
    access                go to state 124
    method_invoke2        go to state 642
    method_invoke         go to state 126


State 752

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements • $@65 SCOPECLOSE $@66 extend

    $default  reduce using rule 212 ($@65)

    $@65  go to state 753


State 753

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 • SCOPECLOSE $@66 extend

    SCOPECLOSE  shift, and go to state 754


State 754

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE • $@66 extend

    $default  reduce using rule 213 ($@66)

    $@66  go to state 755


State 755

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 • extend

    ELSE_WHEN  shift, and go to state 723
    DEFAULT    shift, and go to state 724

    $default  reduce using rule 219 (extend)

    extend  go to state 756


State 756

  214 extend: ELSE_WHEN $@61 SQUAREOPEN $@62 RHS SQUARECLOSE $@63 SCOPEOPEN $@64 statements $@65 SCOPECLOSE $@66 extend •

    $default  reduce using rule 214 (extend)
