number a ;

func new : text a : text 
<<
  letter cee ;
  return "void" ;
>>

type c 
<<
  number cee ;
  func anuu : number cre , text d : letter 
  <<
    letter swe ;
    return '9' ;
    in->cee = 30 ;
  >> 
>>

atomic func new : number b : text 
<<
  number z ;
  c FFF;
  return "25" ;
>>


task new2 : number a , c f , atomic array decimal z 
<<
  letter zd ;
>>


type b 
<<
  c obj1 ;
  func bbb: text z : number 
  <<
  c uuu ;
  in->obj1 = uuu ;

  return 10 ;
  >>

  func uuuu: number j : text 
  <<
    number g = invoke in->bbb:"null" : ;
    number gwdw ; 
    return "Hello" ;
  >>
>>

type a 
<<
  b obj2 ;
>>


start 
<<

  a obj3 ;
  array number q[100];
  c ttt  ;
  b yy ;
  ttt =  obj3->obj2->obj1 ;
  obj3->obj2 = yy ;

invoke new : 1000 : ;
c re ;  
atomic c y ;
atomic array c t[100] ;

>>








