func factorial : number b: number 
<<
    number res = 1, i;
   
    for [(i = 1 )| (i<= b )| (i += 1) ]
    <<
        res *= i;
    >>

    return res;  
>>


func add: number a, number b: number
<<
    number c = (a + b);
    return c;
>>

func add: decimal a, number b: number
<<
    decimal c = (a + b); $$ RHS error
    return c;
>>

$$ function overloading
atomic func add: decimal a, decimal b: decimal
<<
    decimal c = (a + b);
    <<
        number x = (a - b);
        c = (x + 2*b); $$ should update the c value in this scope, is it updating?
    >>
    return c;
>>

task parallelFact: null
<<
    number thr = tid;
    invoke factorial:thr: ;
>>


start << 
    number n = (a*b*c*d*e + 1);
    array number num[n];

    for [ number i = 0 | (i < n) | i += 1] <<
        num[i] = i ;
    >>

    number thr = 5, runs = 4; 

    make parallel parallelFact: thr : runs : invoke add:a,b: : ;

    number res1 = invoke add: invoke add: 10.1, 2.1: , num[1]: ;

    decimal res2 = invoke add: 10.3, 2.3: ; $$ function overloading

>>
 