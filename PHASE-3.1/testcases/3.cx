atomic number counter = 0; $$ global int

type myType <<

    number count; array number data[100]; $$attributes

    func printMsg : text msg, number c : void
    << 
        when [ (c == 0)] <<
            in->c = c;
            in->count = c;
        >>
        text str = ("Message from myType: " # msg # "\n");
    >>

>>

func incrCounter : number N : void
<<
    number i = 0;
    text t = "hi";

    invoke obj->printMsg: ("Hello from the main thread") :;
    ip: thrs;
    op: str # heyy # huuh;
    op: str#eeeee;
    repeat [ (i < N) ] 
    <<
        counter += 1;
        i += 1;
    >>
>>


start<<
    $$number hey;
    myType obj; 

    number thrs; 
    thrs = (2^b);

    ip: thrs;
    op: str # heyy # huuh;
    op: str#eeeee;

    make parallel incrCounter : thrs * thrs : 4 : thrs :;  
    ip: thrs;
    op: str # heyy # huuh;
    op: str#eeeee;


    invoke obj->printMsg: ("Hello from the main thread"), 0:;

    ip: thrs;
    op: str # heyy # huuh;
    op: str#eeeee;


>>