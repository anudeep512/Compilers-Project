atomic number counter = 0; $$ global int

type myType 
<<
    number count; 
    array number data[100]; 

    func printMsg : text msg, number c : void
    << 
        when [ (c == 0)] 
        <<
            in->count = c;
        >>
        text str = ("Message from myType: " # msg # "\n");
        op: str;
        return void;
    >>

>>

task incrCounter : number N
<<
    number i = 0;
    myType obj ;
    invoke obj->printMsg: ("Hello from the main thread"),100 :;
    
    repeat [ (i < N) ] 
    <<
        counter += 1;
        i += 1;
    >>
>>


start<<

    myType obj; 

    number thrs; 

    ip : thrs;

    number par = (thrs*thrs) ;
    make parallel incrCounter : par : thrs : thrs :;  

    invoke obj->printMsg: ("Hello from the main thread"),100 :;
    op: str;
    op : counter;

    obj->count = 0;
    $$ obj->c = 1; $$ ----------------------------------------------Attributes not found in TYPE

    $$ ---------------------------------------------------------------- Method not Found in TYPE error message
    $$ invoke obj-> invalidMethodd: ("Invalid method name") :;



>>