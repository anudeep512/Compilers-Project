
func temp : array number azz : text 
<<
    
    array number a[100,200] ;
    number b = a[100,300] ;
    number c = (b * 4) ;
    return "ok" ;

>>

func temp2 : null : number 
<<
    array number y[200] ;
    invoke temp : y : ;
    return 1;
>>

type pt
<<
    decimal x, y;
>>

func dist : pt ab, pt b: decimal 
<<
    decimal d = ((ab->x - b->x)*(ab->x - b->x) + (ab->y - b->y)*(ab->y - b->y )) ;
    
    bool check = true ;
    atomic number a = 0;

    when[check]
    <<
        return (d*0.5); 
    >>
    default
    <<
        return a; 
    >>
>>

task temp : number a , number b 
<<
    number thr = tid, i = 0, j= 3;

    number x = thr;
    
    number ii = 0 ;
    repeat[(i < j)] 
    <<
    
        number s = (a + b + tid) ;
        
        op -> "log.txt" : s # "\n" ;

        op : "\ntid and i are " # x # ", " # i;
        
        i += 1;
    >>
>>


start
<<
 
    $$ type error RHS
   $$ decimal one = "yes"; $$ not an error (will check in semantics)

    decimal numbeur = 1; $$  error (using kw as id) - syntax analysis error

    op-> "output.txt": numbeur ; $$ should create that new file and write 'a' string to it.

    op: numbeur; $$ should print the string 'a' to the terminal

    $$  -------------------------------------------------------- Type not found error below
    $$ pty testt;
    pt crctType;
    crctType->x = 5;
    crctType->y = 5;

    pt testt ;
    testt-> x = 1;
    testt->y = 2;

    op: dist(testt, crctType) # "\n";

    array pt i[100] ;
    $$ -------------------------------------------------------- Task not found error below
    $$ make parallel tasktempppp : 7 : 3 : testt:;
    number a = 3;
    make parallel temp : a : a : 10, 10 : ;
    number d ; text f;

>>