Terminals unused in grammar

    START
    LEXERROR


State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 259 conflicts: 1 shift/reduce
State 260 conflicts: 1 shift/reduce


Grammar

    0 $accept: begin $end

    1 expression_op: ASSN_DIV
    2              | ASSN_EXPONENT
    3              | ASSN_MODULO
    4              | ASSN_MUL
    5              | INCR
    6              | DECR

    7 comparison_op: LT
    8              | GT
    9              | GTEQ
   10              | LTEQ
   11              | NOT_EQ
   12              | EQUAL_TWO

   13 arithmetic_op: ADD
   14              | SUB
   15              | MUL
   16              | DIV
   17              | MODULO
   18              | EXPONENT

   19 logical_op: AND
   20           | OR

   21 nonAtomic_datatypes: nonAtomicArray
   22                    | nonAtomicSimple

   23 begin: %empty
   24      | begin declaration
   25      | begin function
   26      | begin task
   27      | begin type_declaration

   28 T: IDENTIFIER
   29  | func_invoke

   30 all_ops: arithmetic_op
   31        | comparison_op
   32        | logical_op
   33        | HASH

   34 constants: INTEGERLITERAL
   35          | CHARACTERLITERAL
   36          | FLOATLITERAL
   37          | BOOLEANLITERAL
   38          | STRINGLITERAL

   39 next: RHS all_ops next
   40     | RHS

   41 RHS: constants
   42    | T
   43    | ROUNDOPEN RHS all_ops next ROUNDCLOSE
   44    | ROUNDOPEN RHS ROUNDCLOSE
   45    | NEG ROUNDOPEN RHS ROUNDCLOSE

   46 nonAtomicSimple: NNUM
   47                | NDEC
   48                | NBOOL
   49                | NLET
   50                | NTEXT
   51                | NVOID

   52 atomicSimple: ANUM
   53             | ADEC
   54             | ABOOL
   55             | ALET
   56             | ATEXT

   57 nonAtomicArray: NARRNUM
   58               | NARRDEC
   59               | NARRBOOL
   60               | NARRLET
   61               | NARRTEXT

   62 atomicArray: AARRNUM
   63            | AARRDEC
   64            | AARRBOOL
   65            | AARRLET
   66            | AARRTEXT

   67 declaration: declarationStmt SEMICOLON

   68 simpleDatatype: nonAtomicSimple
   69               | atomicSimple
   70               | UDATATYPE
   71               | ATOMIC AUDATATYPE

   72 arrayDatatype: nonAtomicArray
   73              | atomicArray

   74 declarationStmt: simpleDatatype simpleList
   75                | arrayDatatype arrayList

   76 simpleList: IDENTIFIER
   77           | simpleList COMMA IDENTIFIER
   78           | IDENTIFIER EQ RHS
   79           | simpleList COMMA IDENTIFIER EQ RHS

   80 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   81          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   82          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS
   83          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

   84 dimlist: dimlist COMMA INTEGERLITERAL
   85        | INTEGERLITERAL

   86 assignment_statement: IDENTIFIER EQ RHS

   87 expression_statement: IDENTIFIER expression_op RHS

   88 log: assignment_statement SEMICOLON
   89    | expression_statement SEMICOLON

   90 both_assignment: assignment_statement
   91                | declarationStmt

   92 loop: for_loop
   93     | while_loop

   94 $@1: %empty

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

   96 $@2: %empty

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

   98 conditional: when_statement when_default

   99 $@3: %empty

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

  101 $@4: %empty

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

  103 $@5: %empty

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE
  105             | %empty

  106 analysis_arrays: NARRDEC
  107                | NARRNUM
  108                | AARRDEC
  109                | AARRNUM

  110 analyze_label: STRINGLITERAL
  111              | IDENTIFIER

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

  113 analyze_statement: COLON analysis_arrays analyze_statement
  114                  | SEMICOLON

  115 is: RHS

  116 func_invoke: INVOKE IDENTIFIER COLON arguments SEMICOLON

  117 arguments: is
  118          | arguments COMMA is
  119          | NULL_ARGS

  120 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

  121 get_invoke: GET ARROW TIME

  122 get_statement: ADEC IDENTIFIER EQ get_invoke SEMICOLON
  123              | NDEC IDENTIFIER EQ get_invoke SEMICOLON

  124 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

  125 file_name: ARROW STRINGLITERAL
  126          | ARROW IDENTIFIER
  127          | %empty

  128 input: IP file_name COLON IDENTIFIER nextip

  129 nextip: COMMA IDENTIFIER nextip
  130       | SEMICOLON

  131 stringvalues: STRINGLITERAL
  132             | IDENTIFIER

  133 return_statement: RETURN RHS SEMICOLON

  134 output: OP COLON opstring file_name SEMICOLON

  135 opstring: stringvalues nextop

  136 nextop: HASH stringvalues nextop
  137       | %empty

  138 function: func_decl func_body
  139         | atomic_func_decl func_body

  140 func_args: IDENTIFIER
  141          | func_args COMMA IDENTIFIER

  142 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  143 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  144 func_body: SCOPEOPEN func_statements SCOPECLOSE

  145 func_scope: declaration
  146           | log
  147           | task_invoke
  148           | func_invoke
  149           | loop
  150           | return_statement
  151           | conditional
  152           | analyze_syntax
  153           | input
  154           | output
  155           | sleep
  156           | SCOPEOPEN func_statements SCOPECLOSE
  157           | get_statement
  158           | method_invoke
  159           | access

  160 func_statements: func_scope
  161                | func_statements func_scope

  162 $@6: %empty

  163 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

  164 tid_expr: NNUM IDENTIFIER EQ TID SEMICOLON
  165         | ANUM IDENTIFIER EQ TID SEMICOLON

  166 taskscope: declaration taskscope
  167          | log taskscope
  168          | conditional taskscope
  169          | loop taskscope
  170          | func_invoke taskscope
  171          | output taskscope
  172          | tid_expr taskscope
  173          | SCOPEOPEN taskscope SCOPECLOSE taskscope
  174          | sleep taskscope
  175          | method_invoke
  176          | access

  177 statement: declaration
  178          | log
  179          | conditional
  180          | loop
  181          | return_statement
  182          | func_invoke
  183          | task_invoke
  184          | analyze_syntax
  185          | output
  186          | sleep
  187          | BREAK SEMICOLON
  188          | CONTINUE SEMICOLON
  189          | input
  190          | method_invoke
  191          | access

  192 statements: statement
  193           | statements statement

  194 access: IDENTIFIER id

  195 id: ARROW IDENTIFIER
  196   | id ARROW IDENTIFIER

  197 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE

  198 attributes: attribute SEMICOLON
  199           | attributes attribute SEMICOLON

  200 attribute: simpleDatatype IDENTIFIER
  201          | arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

  202 methods: method
  203        | methods method

  204 method: func_decl SCOPEOPEN method_body SCOPECLOSE

  205 method_invoke: IDENTIFIER ARROW func_invoke
  206              | IDENTIFIER id ARROW func_invoke

  207 in_statement: IN ARROW IDENTIFIER SEMICOLON
  208             | IN ARROW func_invoke

  209 method_statements: declaration
  210                  | log
  211                  | task_invoke
  212                  | func_invoke
  213                  | loop
  214                  | return_statement
  215                  | conditional
  216                  | analyze_statement
  217                  | input
  218                  | output
  219                  | sleep
  220                  | SCOPEOPEN method_statements SCOPECLOSE
  221                  | get_statement
  222                  | in_statement
  223                  | method_invoke
  224                  | access

  225 method_body: method_statements
  226            | method_body method_statements


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN (258) 100
    REPEAT (259) 97
    ELSE_WHEN (260) 102
    DEFAULT (261) 104
    FOR (262) 95
    BREAK (263) 187
    CONTINUE (264) 188
    TASK (265) 163
    MAKE_PARALLEL (266) 120
    NULL_ARGS (267) 119
    TID (268) 164 165
    ANALYZE (269) 112
    GET (270) 121
    SLEEP (271) 124
    TIME (272) 121
    START (273)
    RETURN (274) 133
    TYPE (275) 197
    ATOMIC (276) 71 143
    IN (277) 207 208
    FUNC (278) 142 143
    INVOKE (279) 116
    IP (280) 128
    OP (281) 134
    DIV (282) 16
    ADD (283) 13
    SUB (284) 14
    MUL (285) 15
    EXPONENT (286) 18
    MODULO (287) 17
    ARROW (288) 121 125 126 195 196 205 206 207 208
    EQ (289) 78 79 82 83 86 122 123 164 165
    INCR (290) 5
    DECR (291) 6
    ASSN_MODULO (292) 3
    ASSN_EXPONENT (293) 2
    ASSN_DIV (294) 1
    ASSN_MUL (295) 4
    AND (296) 19
    OR (297) 20
    GT (298) 8
    LT (299) 7
    GTEQ (300) 9
    LTEQ (301) 10
    NOT_EQ (302) 11
    NEG (303) 45
    EQUAL_TWO (304) 12
    INTEGERLITERAL (305) 34 84 85 120
    STRINGLITERAL (306) 38 110 125 131
    CHARACTERLITERAL (307) 35
    BOOLEANLITERAL (308) 37
    FLOATLITERAL (309) 36 124
    COMMA (310) 77 79 81 83 84 118 129 141
    SEMICOLON (311) 67 88 89 95 114 116 120 122 123 124 130 133 134 164 165 187 188 198 199 207
    COLON (312) 112 113 116 120 128 134 142 143 163
    IDENTIFIER (313) 28 76 77 78 79 80 81 82 83 86 87 111 116 120 122 123 126 128 129 132 140 141 142 143 163 164 165 194 195 196 200 201 205 206 207
    SCOPEOPEN (314) 95 97 100 102 104 144 156 163 173 197 204 220
    SCOPECLOSE (315) 95 97 100 102 104 144 156 163 173 197 204 220
    ROUNDOPEN (316) 43 44 45 124
    ROUNDCLOSE (317) 43 44 45 124
    SQUAREOPEN (318) 80 81 82 83 95 97 100 102 104 201
    SQUARECLOSE (319) 80 81 82 83 95 97 100 102 104 201
    HASH (320) 33 136
    LEXERROR (321)
    NNUM (322) 46 164
    NDEC (323) 47 123
    NBOOL (324) 48
    NLET (325) 49
    NTEXT (326) 50
    NVOID (327) 51
    NARRNUM (328) 57 107
    NARRDEC (329) 58 106
    NARRBOOL (330) 59
    NARRLET (331) 60
    NARRTEXT (332) 61
    ANUM (333) 52 165
    ADEC (334) 53 122
    ABOOL (335) 54
    ALET (336) 55
    ATEXT (337) 56
    AARRNUM (338) 62 109
    AARRDEC (339) 63 108
    AARRBOOL (340) 64
    AARRLET (341) 65
    AARRTEXT (342) 66
    UDATATYPE (343) 70 197
    AUDATATYPE (344) 71


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    expression_op (91)
        on left: 1 2 3 4 5 6
        on right: 87
    comparison_op (92)
        on left: 7 8 9 10 11 12
        on right: 31
    arithmetic_op (93)
        on left: 13 14 15 16 17 18
        on right: 30
    logical_op (94)
        on left: 19 20
        on right: 32
    nonAtomic_datatypes (95)
        on left: 21 22
        on right: 142 143
    begin (96)
        on left: 23 24 25 26 27
        on right: 0 24 25 26 27
    T (97)
        on left: 28 29
        on right: 42
    all_ops (98)
        on left: 30 31 32 33
        on right: 39 43
    constants (99)
        on left: 34 35 36 37 38
        on right: 41
    next (100)
        on left: 39 40
        on right: 39 43
    RHS (101)
        on left: 41 42 43 44 45
        on right: 39 40 43 44 45 78 79 82 83 86 87 95 97 100 102 104 115 133
    nonAtomicSimple (102)
        on left: 46 47 48 49 50 51
        on right: 22 68
    atomicSimple (103)
        on left: 52 53 54 55 56
        on right: 69
    nonAtomicArray (104)
        on left: 57 58 59 60 61
        on right: 21 72
    atomicArray (105)
        on left: 62 63 64 65 66
        on right: 73
    declaration (106)
        on left: 67
        on right: 24 145 166 177 209
    simpleDatatype (107)
        on left: 68 69 70 71
        on right: 74 200
    arrayDatatype (108)
        on left: 72 73
        on right: 75 201
    declarationStmt (109)
        on left: 74 75
        on right: 67 91
    simpleList (110)
        on left: 76 77 78 79
        on right: 74 77 79
    arrayList (111)
        on left: 80 81 82 83
        on right: 75 81 83
    dimlist (112)
        on left: 84 85
        on right: 80 81 82 83 84 201
    assignment_statement (113)
        on left: 86
        on right: 88 90
    expression_statement (114)
        on left: 87
        on right: 89 95
    log (115)
        on left: 88 89
        on right: 146 167 178 210
    both_assignment (116)
        on left: 90 91
        on right: 95
    loop (117)
        on left: 92 93
        on right: 149 169 180 213
    for_loop (118)
        on left: 95
        on right: 92
    $@1 (119)
        on left: 94
        on right: 95
    while_loop (120)
        on left: 97
        on right: 93
    $@2 (121)
        on left: 96
        on right: 97
    conditional (122)
        on left: 98
        on right: 151 168 179 215
    when_statement (123)
        on left: 100 102
        on right: 98 102
    $@3 (124)
        on left: 99
        on right: 100
    $@4 (125)
        on left: 101
        on right: 102
    when_default (126)
        on left: 104 105
        on right: 98
    $@5 (127)
        on left: 103
        on right: 104
    analysis_arrays (128)
        on left: 106 107 108 109
        on right: 112 113
    analyze_label (129)
        on left: 110 111
        on right: 112
    analyze_syntax (130)
        on left: 112
        on right: 152 184
    analyze_statement (131)
        on left: 113 114
        on right: 112 113 216
    is (132)
        on left: 115
        on right: 117 118
    func_invoke (133)
        on left: 116
        on right: 29 148 170 182 205 206 208 212
    arguments (134)
        on left: 117 118 119
        on right: 116 118 120
    task_invoke (135)
        on left: 120
        on right: 147 183 211
    get_invoke (136)
        on left: 121
        on right: 122 123
    get_statement (137)
        on left: 122 123
        on right: 157 221
    sleep (138)
        on left: 124
        on right: 155 174 186 219
    file_name (139)
        on left: 125 126 127
        on right: 128 134
    input (140)
        on left: 128
        on right: 153 189 217
    nextip (141)
        on left: 129 130
        on right: 128 129
    stringvalues (142)
        on left: 131 132
        on right: 135 136
    return_statement (143)
        on left: 133
        on right: 150 181 214
    output (144)
        on left: 134
        on right: 154 171 185 218
    opstring (145)
        on left: 135
        on right: 134
    nextop (146)
        on left: 136 137
        on right: 135 136
    function (147)
        on left: 138 139
        on right: 25
    func_args (148)
        on left: 140 141
        on right: 141 142 143 163
    func_decl (149)
        on left: 142
        on right: 138 204
    atomic_func_decl (150)
        on left: 143
        on right: 139
    func_body (151)
        on left: 144
        on right: 138 139
    func_scope (152)
        on left: 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159
        on right: 160 161
    func_statements (153)
        on left: 160 161
        on right: 144 156 161
    task (154)
        on left: 163
        on right: 26
    $@6 (155)
        on left: 162
        on right: 163
    tid_expr (156)
        on left: 164 165
        on right: 172
    taskscope (157)
        on left: 166 167 168 169 170 171 172 173 174 175 176
        on right: 163 166 167 168 169 170 171 172 173 174
    statement (158)
        on left: 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191
        on right: 192 193
    statements (159)
        on left: 192 193
        on right: 95 97 100 102 104 193
    access (160)
        on left: 194
        on right: 159 176 191 224
    id (161)
        on left: 195 196
        on right: 194 196 206
    type_declaration (162)
        on left: 197
        on right: 27
    attributes (163)
        on left: 198 199
        on right: 197 199
    attribute (164)
        on left: 200 201
        on right: 198 199
    methods (165)
        on left: 202 203
        on right: 197 203
    method (166)
        on left: 204
        on right: 202 203
    method_invoke (167)
        on left: 205 206
        on right: 158 175 190 223
    in_statement (168)
        on left: 207 208
        on right: 222
    method_statements (169)
        on left: 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224
        on right: 220 225 226
    method_body (170)
        on left: 225 226
        on right: 204 226


State 0

    0 $accept: . begin $end

    $default  reduce using rule 23 (begin)

    begin  go to state 1


State 1

    0 $accept: begin . $end
   24 begin: begin . declaration
   25      | begin . function
   26      | begin . task
   27      | begin . type_declaration

    $end       shift, and go to state 2
    TASK       shift, and go to state 3
    TYPE       shift, and go to state 4
    ATOMIC     shift, and go to state 5
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple   go to state 29
    atomicSimple      go to state 30
    nonAtomicArray    go to state 31
    atomicArray       go to state 32
    declaration       go to state 33
    simpleDatatype    go to state 34
    arrayDatatype     go to state 35
    declarationStmt   go to state 36
    function          go to state 37
    func_decl         go to state 38
    atomic_func_decl  go to state 39
    task              go to state 40
    type_declaration  go to state 41


State 2

    0 $accept: begin $end .

    $default  accept


State 3

  163 task: TASK . IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 42


State 4

  197 type_declaration: TYPE . UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE

    UDATATYPE  shift, and go to state 43


State 5

   71 simpleDatatype: ATOMIC . AUDATATYPE
  143 atomic_func_decl: ATOMIC . FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    FUNC        shift, and go to state 44
    AUDATATYPE  shift, and go to state 45


State 6

  142 func_decl: FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 46


State 7

   46 nonAtomicSimple: NNUM .

    $default  reduce using rule 46 (nonAtomicSimple)


State 8

   47 nonAtomicSimple: NDEC .

    $default  reduce using rule 47 (nonAtomicSimple)


State 9

   48 nonAtomicSimple: NBOOL .

    $default  reduce using rule 48 (nonAtomicSimple)


State 10

   49 nonAtomicSimple: NLET .

    $default  reduce using rule 49 (nonAtomicSimple)


State 11

   50 nonAtomicSimple: NTEXT .

    $default  reduce using rule 50 (nonAtomicSimple)


State 12

   51 nonAtomicSimple: NVOID .

    $default  reduce using rule 51 (nonAtomicSimple)


State 13

   57 nonAtomicArray: NARRNUM .

    $default  reduce using rule 57 (nonAtomicArray)


State 14

   58 nonAtomicArray: NARRDEC .

    $default  reduce using rule 58 (nonAtomicArray)


State 15

   59 nonAtomicArray: NARRBOOL .

    $default  reduce using rule 59 (nonAtomicArray)


State 16

   60 nonAtomicArray: NARRLET .

    $default  reduce using rule 60 (nonAtomicArray)


State 17

   61 nonAtomicArray: NARRTEXT .

    $default  reduce using rule 61 (nonAtomicArray)


State 18

   52 atomicSimple: ANUM .

    $default  reduce using rule 52 (atomicSimple)


State 19

   53 atomicSimple: ADEC .

    $default  reduce using rule 53 (atomicSimple)


State 20

   54 atomicSimple: ABOOL .

    $default  reduce using rule 54 (atomicSimple)


State 21

   55 atomicSimple: ALET .

    $default  reduce using rule 55 (atomicSimple)


State 22

   56 atomicSimple: ATEXT .

    $default  reduce using rule 56 (atomicSimple)


State 23

   62 atomicArray: AARRNUM .

    $default  reduce using rule 62 (atomicArray)


State 24

   63 atomicArray: AARRDEC .

    $default  reduce using rule 63 (atomicArray)


State 25

   64 atomicArray: AARRBOOL .

    $default  reduce using rule 64 (atomicArray)


State 26

   65 atomicArray: AARRLET .

    $default  reduce using rule 65 (atomicArray)


State 27

   66 atomicArray: AARRTEXT .

    $default  reduce using rule 66 (atomicArray)


State 28

   70 simpleDatatype: UDATATYPE .

    $default  reduce using rule 70 (simpleDatatype)


State 29

   68 simpleDatatype: nonAtomicSimple .

    $default  reduce using rule 68 (simpleDatatype)


State 30

   69 simpleDatatype: atomicSimple .

    $default  reduce using rule 69 (simpleDatatype)


State 31

   72 arrayDatatype: nonAtomicArray .

    $default  reduce using rule 72 (arrayDatatype)


State 32

   73 arrayDatatype: atomicArray .

    $default  reduce using rule 73 (arrayDatatype)


State 33

   24 begin: begin declaration .

    $default  reduce using rule 24 (begin)


State 34

   74 declarationStmt: simpleDatatype . simpleList

    IDENTIFIER  shift, and go to state 47

    simpleList  go to state 48


State 35

   75 declarationStmt: arrayDatatype . arrayList

    IDENTIFIER  shift, and go to state 49

    arrayList  go to state 50


State 36

   67 declaration: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 37

   25 begin: begin function .

    $default  reduce using rule 25 (begin)


State 38

  138 function: func_decl . func_body

    SCOPEOPEN  shift, and go to state 52

    func_body  go to state 53


State 39

  139 function: atomic_func_decl . func_body

    SCOPEOPEN  shift, and go to state 52

    func_body  go to state 54


State 40

   26 begin: begin task .

    $default  reduce using rule 26 (begin)


State 41

   27 begin: begin type_declaration .

    $default  reduce using rule 27 (begin)


State 42

  163 task: TASK IDENTIFIER . COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    COLON  shift, and go to state 55


State 43

  197 type_declaration: TYPE UDATATYPE . SCOPEOPEN attributes methods SCOPECLOSE

    SCOPEOPEN  shift, and go to state 56


State 44

  143 atomic_func_decl: ATOMIC FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 57


State 45

   71 simpleDatatype: ATOMIC AUDATATYPE .

    $default  reduce using rule 71 (simpleDatatype)


State 46

  142 func_decl: FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 58


State 47

   76 simpleList: IDENTIFIER .
   78           | IDENTIFIER . EQ RHS

    EQ  shift, and go to state 59

    $default  reduce using rule 76 (simpleList)


State 48

   74 declarationStmt: simpleDatatype simpleList .
   77 simpleList: simpleList . COMMA IDENTIFIER
   79           | simpleList . COMMA IDENTIFIER EQ RHS

    COMMA  shift, and go to state 60

    $default  reduce using rule 74 (declarationStmt)


State 49

   80 arrayList: IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   82          | IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 61


State 50

   75 declarationStmt: arrayDatatype arrayList .
   81 arrayList: arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   83          | arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    COMMA  shift, and go to state 62

    $default  reduce using rule 75 (declarationStmt)


State 51

   67 declaration: declarationStmt SEMICOLON .

    $default  reduce using rule 67 (declaration)


State 52

  144 func_body: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_scope            go to state 95
    func_statements       go to state 96
    access                go to state 97
    method_invoke         go to state 98


State 53

  138 function: func_decl func_body .

    $default  reduce using rule 138 (function)


State 54

  139 function: atomic_func_decl func_body .

    $default  reduce using rule 139 (function)


State 55

  163 task: TASK IDENTIFIER COLON . func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 99

    func_args  go to state 100


State 56

  197 type_declaration: TYPE UDATATYPE SCOPEOPEN . attributes methods SCOPECLOSE

    ATOMIC     shift, and go to state 70
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 101
    arrayDatatype    go to state 102
    attributes       go to state 103
    attribute        go to state 104


State 57

  143 atomic_func_decl: ATOMIC FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 105


State 58

  142 func_decl: FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 99

    func_args  go to state 106


State 59

   78 simpleList: IDENTIFIER EQ . RHS

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 117
    func_invoke  go to state 118


State 60

   77 simpleList: simpleList COMMA . IDENTIFIER
   79           | simpleList COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 119


State 61

   80 arrayList: IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   82          | IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 120

    dimlist  go to state 121


State 62

   81 arrayList: arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   83          | arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    IDENTIFIER  shift, and go to state 122


State 63

  100 when_statement: WHEN . SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 123


State 64

   97 while_loop: REPEAT . SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 124


State 65

   95 for_loop: FOR . SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 125


State 66

  120 task_invoke: MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 126


State 67

  112 analyze_syntax: ANALYZE . analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 127
    IDENTIFIER     shift, and go to state 128

    analyze_label  go to state 129


State 68

  124 sleep: SLEEP . ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

    ROUNDOPEN  shift, and go to state 130


State 69

  133 return_statement: RETURN . RHS SEMICOLON

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 131
    func_invoke  go to state 118


State 70

   71 simpleDatatype: ATOMIC . AUDATATYPE

    AUDATATYPE  shift, and go to state 45


State 71

  116 func_invoke: INVOKE . IDENTIFIER COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 132


State 72

  128 input: IP . file_name COLON IDENTIFIER nextip

    ARROW  shift, and go to state 133

    $default  reduce using rule 127 (file_name)

    file_name  go to state 134


State 73

  134 output: OP . COLON opstring file_name SEMICOLON

    COLON  shift, and go to state 135


State 74

   86 assignment_statement: IDENTIFIER . EQ RHS
   87 expression_statement: IDENTIFIER . expression_op RHS
  194 access: IDENTIFIER . id
  205 method_invoke: IDENTIFIER . ARROW func_invoke
  206              | IDENTIFIER . id ARROW func_invoke

    ARROW          shift, and go to state 136
    EQ             shift, and go to state 137
    INCR           shift, and go to state 138
    DECR           shift, and go to state 139
    ASSN_MODULO    shift, and go to state 140
    ASSN_EXPONENT  shift, and go to state 141
    ASSN_DIV       shift, and go to state 142
    ASSN_MUL       shift, and go to state 143

    expression_op  go to state 144
    id             go to state 145


State 75

  156 func_scope: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_scope            go to state 95
    func_statements       go to state 146
    access                go to state 97
    method_invoke         go to state 98


State 76

   47 nonAtomicSimple: NDEC .
  123 get_statement: NDEC . IDENTIFIER EQ get_invoke SEMICOLON

    IDENTIFIER  shift, and go to state 147

    IDENTIFIER  [reduce using rule 47 (nonAtomicSimple)]


State 77

   53 atomicSimple: ADEC .
  122 get_statement: ADEC . IDENTIFIER EQ get_invoke SEMICOLON

    IDENTIFIER  shift, and go to state 148

    IDENTIFIER  [reduce using rule 53 (atomicSimple)]


State 78

  145 func_scope: declaration .

    $default  reduce using rule 145 (func_scope)


State 79

   88 log: assignment_statement . SEMICOLON

    SEMICOLON  shift, and go to state 149


State 80

   89 log: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 81

  146 func_scope: log .

    $default  reduce using rule 146 (func_scope)


State 82

  149 func_scope: loop .

    $default  reduce using rule 149 (func_scope)


State 83

   92 loop: for_loop .

    $default  reduce using rule 92 (loop)


State 84

   93 loop: while_loop .

    $default  reduce using rule 93 (loop)


State 85

  151 func_scope: conditional .

    $default  reduce using rule 151 (func_scope)


State 86

   98 conditional: when_statement . when_default
  102 when_statement: when_statement . ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    ELSE_WHEN  shift, and go to state 151
    DEFAULT    shift, and go to state 152

    $default  reduce using rule 105 (when_default)

    when_default  go to state 153


State 87

  152 func_scope: analyze_syntax .

    $default  reduce using rule 152 (func_scope)


State 88

  148 func_scope: func_invoke .

    $default  reduce using rule 148 (func_scope)


State 89

  147 func_scope: task_invoke .

    $default  reduce using rule 147 (func_scope)


State 90

  157 func_scope: get_statement .

    $default  reduce using rule 157 (func_scope)


State 91

  155 func_scope: sleep .

    $default  reduce using rule 155 (func_scope)


State 92

  153 func_scope: input .

    $default  reduce using rule 153 (func_scope)


State 93

  150 func_scope: return_statement .

    $default  reduce using rule 150 (func_scope)


State 94

  154 func_scope: output .

    $default  reduce using rule 154 (func_scope)


State 95

  160 func_statements: func_scope .

    $default  reduce using rule 160 (func_statements)


State 96

  144 func_body: SCOPEOPEN func_statements . SCOPECLOSE
  161 func_statements: func_statements . func_scope

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    SCOPECLOSE     shift, and go to state 154
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_scope            go to state 155
    access                go to state 97
    method_invoke         go to state 98


State 97

  159 func_scope: access .

    $default  reduce using rule 159 (func_scope)


State 98

  158 func_scope: method_invoke .

    $default  reduce using rule 158 (func_scope)


State 99

  140 func_args: IDENTIFIER .

    $default  reduce using rule 140 (func_args)


State 100

  141 func_args: func_args . COMMA IDENTIFIER
  163 task: TASK IDENTIFIER COLON func_args . $@6 SCOPEOPEN taskscope SCOPECLOSE

    COMMA  shift, and go to state 156

    $default  reduce using rule 162 ($@6)

    $@6  go to state 157


State 101

  200 attribute: simpleDatatype . IDENTIFIER

    IDENTIFIER  shift, and go to state 158


State 102

  201 attribute: arrayDatatype . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

    IDENTIFIER  shift, and go to state 159


State 103

  197 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes . methods SCOPECLOSE
  199 attributes: attributes . attribute SEMICOLON

    ATOMIC     shift, and go to state 70
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 101
    arrayDatatype    go to state 102
    func_decl        go to state 160
    attribute        go to state 161
    methods          go to state 162
    method           go to state 163


State 104

  198 attributes: attribute . SEMICOLON

    SEMICOLON  shift, and go to state 164


State 105

  143 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 99

    func_args  go to state 165


State 106

  141 func_args: func_args . COMMA IDENTIFIER
  142 func_decl: FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 156
    COLON  shift, and go to state 166


State 107

   45 RHS: NEG . ROUNDOPEN RHS ROUNDCLOSE

    ROUNDOPEN  shift, and go to state 167


State 108

   34 constants: INTEGERLITERAL .

    $default  reduce using rule 34 (constants)


State 109

   38 constants: STRINGLITERAL .

    $default  reduce using rule 38 (constants)


State 110

   35 constants: CHARACTERLITERAL .

    $default  reduce using rule 35 (constants)


State 111

   37 constants: BOOLEANLITERAL .

    $default  reduce using rule 37 (constants)


State 112

   36 constants: FLOATLITERAL .

    $default  reduce using rule 36 (constants)


State 113

   28 T: IDENTIFIER .

    $default  reduce using rule 28 (T)


State 114

   43 RHS: ROUNDOPEN . RHS all_ops next ROUNDCLOSE
   44    | ROUNDOPEN . RHS ROUNDCLOSE

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 168
    func_invoke  go to state 118


State 115

   42 RHS: T .

    $default  reduce using rule 42 (RHS)


State 116

   41 RHS: constants .

    $default  reduce using rule 41 (RHS)


State 117

   78 simpleList: IDENTIFIER EQ RHS .

    $default  reduce using rule 78 (simpleList)


State 118

   29 T: func_invoke .

    $default  reduce using rule 29 (T)


State 119

   77 simpleList: simpleList COMMA IDENTIFIER .
   79           | simpleList COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 169

    $default  reduce using rule 77 (simpleList)


State 120

   85 dimlist: INTEGERLITERAL .

    $default  reduce using rule 85 (dimlist)


State 121

   80 arrayList: IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   82          | IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   84 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 170
    SQUARECLOSE  shift, and go to state 171


State 122

   81 arrayList: arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   83          | arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 172


State 123

  100 when_statement: WHEN SQUAREOPEN . RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 173
    func_invoke  go to state 118


State 124

   97 while_loop: REPEAT SQUAREOPEN . RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 174
    func_invoke  go to state 118


State 125

   95 for_loop: FOR SQUAREOPEN . both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    ATOMIC      shift, and go to state 70
    IDENTIFIER  shift, and go to state 175
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 176
    assignment_statement  go to state 177
    both_assignment       go to state 178


State 126

  120 task_invoke: MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 179


State 127

  110 analyze_label: STRINGLITERAL .

    $default  reduce using rule 110 (analyze_label)


State 128

  111 analyze_label: IDENTIFIER .

    $default  reduce using rule 111 (analyze_label)


State 129

  112 analyze_syntax: ANALYZE analyze_label . COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 180


State 130

  124 sleep: SLEEP ROUNDOPEN . FLOATLITERAL ROUNDCLOSE SEMICOLON

    FLOATLITERAL  shift, and go to state 181


State 131

  133 return_statement: RETURN RHS . SEMICOLON

    SEMICOLON  shift, and go to state 182


State 132

  116 func_invoke: INVOKE IDENTIFIER . COLON arguments SEMICOLON

    COLON  shift, and go to state 183


State 133

  125 file_name: ARROW . STRINGLITERAL
  126          | ARROW . IDENTIFIER

    STRINGLITERAL  shift, and go to state 184
    IDENTIFIER     shift, and go to state 185


State 134

  128 input: IP file_name . COLON IDENTIFIER nextip

    COLON  shift, and go to state 186


State 135

  134 output: OP COLON . opstring file_name SEMICOLON

    STRINGLITERAL  shift, and go to state 187
    IDENTIFIER     shift, and go to state 188

    stringvalues  go to state 189
    opstring      go to state 190


State 136

  195 id: ARROW . IDENTIFIER
  205 method_invoke: IDENTIFIER ARROW . func_invoke

    INVOKE      shift, and go to state 71
    IDENTIFIER  shift, and go to state 191

    func_invoke  go to state 192


State 137

   86 assignment_statement: IDENTIFIER EQ . RHS

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 193
    func_invoke  go to state 118


State 138

    5 expression_op: INCR .

    $default  reduce using rule 5 (expression_op)


State 139

    6 expression_op: DECR .

    $default  reduce using rule 6 (expression_op)


State 140

    3 expression_op: ASSN_MODULO .

    $default  reduce using rule 3 (expression_op)


State 141

    2 expression_op: ASSN_EXPONENT .

    $default  reduce using rule 2 (expression_op)


State 142

    1 expression_op: ASSN_DIV .

    $default  reduce using rule 1 (expression_op)


State 143

    4 expression_op: ASSN_MUL .

    $default  reduce using rule 4 (expression_op)


State 144

   87 expression_statement: IDENTIFIER expression_op . RHS

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 194
    func_invoke  go to state 118


State 145

  194 access: IDENTIFIER id .
  196 id: id . ARROW IDENTIFIER
  206 method_invoke: IDENTIFIER id . ARROW func_invoke

    ARROW  shift, and go to state 195

    $default  reduce using rule 194 (access)


State 146

  156 func_scope: SCOPEOPEN func_statements . SCOPECLOSE
  161 func_statements: func_statements . func_scope

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    SCOPECLOSE     shift, and go to state 196
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_scope            go to state 155
    access                go to state 97
    method_invoke         go to state 98


State 147

  123 get_statement: NDEC IDENTIFIER . EQ get_invoke SEMICOLON

    EQ  shift, and go to state 197


State 148

  122 get_statement: ADEC IDENTIFIER . EQ get_invoke SEMICOLON

    EQ  shift, and go to state 198


State 149

   88 log: assignment_statement SEMICOLON .

    $default  reduce using rule 88 (log)


State 150

   89 log: expression_statement SEMICOLON .

    $default  reduce using rule 89 (log)


State 151

  102 when_statement: when_statement ELSE_WHEN . SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 199


State 152

  104 when_default: DEFAULT . SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 200


State 153

   98 conditional: when_statement when_default .

    $default  reduce using rule 98 (conditional)


State 154

  144 func_body: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 144 (func_body)


State 155

  161 func_statements: func_statements func_scope .

    $default  reduce using rule 161 (func_statements)


State 156

  141 func_args: func_args COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 201


State 157

  163 task: TASK IDENTIFIER COLON func_args $@6 . SCOPEOPEN taskscope SCOPECLOSE

    SCOPEOPEN  shift, and go to state 202


State 158

  200 attribute: simpleDatatype IDENTIFIER .

    $default  reduce using rule 200 (attribute)


State 159

  201 attribute: arrayDatatype IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE

    SQUAREOPEN  shift, and go to state 203


State 160

  204 method: func_decl . SCOPEOPEN method_body SCOPECLOSE

    SCOPEOPEN  shift, and go to state 204


State 161

  199 attributes: attributes attribute . SEMICOLON

    SEMICOLON  shift, and go to state 205


State 162

  197 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods . SCOPECLOSE
  203 methods: methods . method

    FUNC        shift, and go to state 6
    SCOPECLOSE  shift, and go to state 206

    func_decl  go to state 160
    method     go to state 207


State 163

  202 methods: method .

    $default  reduce using rule 202 (methods)


State 164

  198 attributes: attribute SEMICOLON .

    $default  reduce using rule 198 (attributes)


State 165

  141 func_args: func_args . COMMA IDENTIFIER
  143 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 156
    COLON  shift, and go to state 208


State 166

  142 func_decl: FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 209
    nonAtomicSimple      go to state 210
    nonAtomicArray       go to state 211


State 167

   45 RHS: NEG ROUNDOPEN . RHS ROUNDCLOSE

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 212
    func_invoke  go to state 118


State 168

   43 RHS: ROUNDOPEN RHS . all_ops next ROUNDCLOSE
   44    | ROUNDOPEN RHS . ROUNDCLOSE

    DIV         shift, and go to state 213
    ADD         shift, and go to state 214
    SUB         shift, and go to state 215
    MUL         shift, and go to state 216
    EXPONENT    shift, and go to state 217
    MODULO      shift, and go to state 218
    AND         shift, and go to state 219
    OR          shift, and go to state 220
    GT          shift, and go to state 221
    LT          shift, and go to state 222
    GTEQ        shift, and go to state 223
    LTEQ        shift, and go to state 224
    NOT_EQ      shift, and go to state 225
    EQUAL_TWO   shift, and go to state 226
    ROUNDCLOSE  shift, and go to state 227
    HASH        shift, and go to state 228

    comparison_op  go to state 229
    arithmetic_op  go to state 230
    logical_op     go to state 231
    all_ops        go to state 232


State 169

   79 simpleList: simpleList COMMA IDENTIFIER EQ . RHS

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 233
    func_invoke  go to state 118


State 170

   84 dimlist: dimlist COMMA . INTEGERLITERAL

    INTEGERLITERAL  shift, and go to state 234


State 171

   80 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   82          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 235

    $default  reduce using rule 80 (arrayList)


State 172

   81 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   83          | arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 120

    dimlist  go to state 236


State 173

  100 when_statement: WHEN SQUAREOPEN RHS . SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 237


State 174

   97 while_loop: REPEAT SQUAREOPEN RHS . SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 238


State 175

   86 assignment_statement: IDENTIFIER . EQ RHS

    EQ  shift, and go to state 137


State 176

   91 both_assignment: declarationStmt .

    $default  reduce using rule 91 (both_assignment)


State 177

   90 both_assignment: assignment_statement .

    $default  reduce using rule 90 (both_assignment)


State 178

   95 for_loop: FOR SQUAREOPEN both_assignment . SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 239


State 179

  120 task_invoke: MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 240


State 180

  112 analyze_syntax: ANALYZE analyze_label COLON . analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 127
    IDENTIFIER     shift, and go to state 128

    analyze_label  go to state 241


State 181

  124 sleep: SLEEP ROUNDOPEN FLOATLITERAL . ROUNDCLOSE SEMICOLON

    ROUNDCLOSE  shift, and go to state 242


State 182

  133 return_statement: RETURN RHS SEMICOLON .

    $default  reduce using rule 133 (return_statement)


State 183

  116 func_invoke: INVOKE IDENTIFIER COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 243
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 244
    is           go to state 245
    func_invoke  go to state 118
    arguments    go to state 246


State 184

  125 file_name: ARROW STRINGLITERAL .

    $default  reduce using rule 125 (file_name)


State 185

  126 file_name: ARROW IDENTIFIER .

    $default  reduce using rule 126 (file_name)


State 186

  128 input: IP file_name COLON . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 247


State 187

  131 stringvalues: STRINGLITERAL .

    $default  reduce using rule 131 (stringvalues)


State 188

  132 stringvalues: IDENTIFIER .

    $default  reduce using rule 132 (stringvalues)


State 189

  135 opstring: stringvalues . nextop

    HASH  shift, and go to state 248

    $default  reduce using rule 137 (nextop)

    nextop  go to state 249


State 190

  134 output: OP COLON opstring . file_name SEMICOLON

    ARROW  shift, and go to state 133

    $default  reduce using rule 127 (file_name)

    file_name  go to state 250


State 191

  195 id: ARROW IDENTIFIER .

    $default  reduce using rule 195 (id)


State 192

  205 method_invoke: IDENTIFIER ARROW func_invoke .

    $default  reduce using rule 205 (method_invoke)


State 193

   86 assignment_statement: IDENTIFIER EQ RHS .

    $default  reduce using rule 86 (assignment_statement)


State 194

   87 expression_statement: IDENTIFIER expression_op RHS .

    $default  reduce using rule 87 (expression_statement)


State 195

  196 id: id ARROW . IDENTIFIER
  206 method_invoke: IDENTIFIER id ARROW . func_invoke

    INVOKE      shift, and go to state 71
    IDENTIFIER  shift, and go to state 251

    func_invoke  go to state 252


State 196

  156 func_scope: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 156 (func_scope)


State 197

  123 get_statement: NDEC IDENTIFIER EQ . get_invoke SEMICOLON

    GET  shift, and go to state 253

    get_invoke  go to state 254


State 198

  122 get_statement: ADEC IDENTIFIER EQ . get_invoke SEMICOLON

    GET  shift, and go to state 253

    get_invoke  go to state 255


State 199

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN . RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 256
    func_invoke  go to state 118


State 200

  104 when_default: DEFAULT SQUAREOPEN . RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 257
    func_invoke  go to state 118


State 201

  141 func_args: func_args COMMA IDENTIFIER .

    $default  reduce using rule 141 (func_args)


State 202

  163 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN . taskscope SCOPECLOSE

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 269
    access                go to state 270
    method_invoke         go to state 271


State 203

  201 attribute: arrayDatatype IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 120

    dimlist  go to state 272


State 204

  204 method: func_decl SCOPEOPEN . method_body SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 273
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 274
    COLON          shift, and go to state 275
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 276
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 277
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 278
    loop                  go to state 279
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 280
    when_statement        go to state 86
    analyze_statement     go to state 281
    func_invoke           go to state 282
    task_invoke           go to state 283
    get_statement         go to state 284
    sleep                 go to state 285
    input                 go to state 286
    return_statement      go to state 287
    output                go to state 288
    access                go to state 289
    method_invoke         go to state 290
    in_statement          go to state 291
    method_statements     go to state 292
    method_body           go to state 293


State 205

  199 attributes: attributes attribute SEMICOLON .

    $default  reduce using rule 199 (attributes)


State 206

  197 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE .

    $default  reduce using rule 197 (type_declaration)


State 207

  203 methods: methods method .

    $default  reduce using rule 203 (methods)


State 208

  143 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 294
    nonAtomicSimple      go to state 210
    nonAtomicArray       go to state 211


State 209

  142 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 142 (func_decl)


State 210

   22 nonAtomic_datatypes: nonAtomicSimple .

    $default  reduce using rule 22 (nonAtomic_datatypes)


State 211

   21 nonAtomic_datatypes: nonAtomicArray .

    $default  reduce using rule 21 (nonAtomic_datatypes)


State 212

   45 RHS: NEG ROUNDOPEN RHS . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 295


State 213

   16 arithmetic_op: DIV .

    $default  reduce using rule 16 (arithmetic_op)


State 214

   13 arithmetic_op: ADD .

    $default  reduce using rule 13 (arithmetic_op)


State 215

   14 arithmetic_op: SUB .

    $default  reduce using rule 14 (arithmetic_op)


State 216

   15 arithmetic_op: MUL .

    $default  reduce using rule 15 (arithmetic_op)


State 217

   18 arithmetic_op: EXPONENT .

    $default  reduce using rule 18 (arithmetic_op)


State 218

   17 arithmetic_op: MODULO .

    $default  reduce using rule 17 (arithmetic_op)


State 219

   19 logical_op: AND .

    $default  reduce using rule 19 (logical_op)


State 220

   20 logical_op: OR .

    $default  reduce using rule 20 (logical_op)


State 221

    8 comparison_op: GT .

    $default  reduce using rule 8 (comparison_op)


State 222

    7 comparison_op: LT .

    $default  reduce using rule 7 (comparison_op)


State 223

    9 comparison_op: GTEQ .

    $default  reduce using rule 9 (comparison_op)


State 224

   10 comparison_op: LTEQ .

    $default  reduce using rule 10 (comparison_op)


State 225

   11 comparison_op: NOT_EQ .

    $default  reduce using rule 11 (comparison_op)


State 226

   12 comparison_op: EQUAL_TWO .

    $default  reduce using rule 12 (comparison_op)


State 227

   44 RHS: ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 44 (RHS)


State 228

   33 all_ops: HASH .

    $default  reduce using rule 33 (all_ops)


State 229

   31 all_ops: comparison_op .

    $default  reduce using rule 31 (all_ops)


State 230

   30 all_ops: arithmetic_op .

    $default  reduce using rule 30 (all_ops)


State 231

   32 all_ops: logical_op .

    $default  reduce using rule 32 (all_ops)


State 232

   43 RHS: ROUNDOPEN RHS all_ops . next ROUNDCLOSE

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    next         go to state 296
    RHS          go to state 297
    func_invoke  go to state 118


State 233

   79 simpleList: simpleList COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 79 (simpleList)


State 234

   84 dimlist: dimlist COMMA INTEGERLITERAL .

    $default  reduce using rule 84 (dimlist)


State 235

   82 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 298
    func_invoke  go to state 118


State 236

   81 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   83          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   84 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 170
    SQUARECLOSE  shift, and go to state 299


State 237

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE . $@3 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 99 ($@3)

    $@3  go to state 300


State 238

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE . $@2 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 96 ($@2)

    $@2  go to state 301


State 239

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON . RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 302
    func_invoke  go to state 118


State 240

  120 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 303


State 241

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label . COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 304


State 242

  124 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 305


State 243

  119 arguments: NULL_ARGS .

    $default  reduce using rule 119 (arguments)


State 244

  115 is: RHS .

    $default  reduce using rule 115 (is)


State 245

  117 arguments: is .

    $default  reduce using rule 117 (arguments)


State 246

  116 func_invoke: INVOKE IDENTIFIER COLON arguments . SEMICOLON
  118 arguments: arguments . COMMA is

    COMMA      shift, and go to state 306
    SEMICOLON  shift, and go to state 307


State 247

  128 input: IP file_name COLON IDENTIFIER . nextip

    COMMA      shift, and go to state 308
    SEMICOLON  shift, and go to state 309

    nextip  go to state 310


State 248

  136 nextop: HASH . stringvalues nextop

    STRINGLITERAL  shift, and go to state 187
    IDENTIFIER     shift, and go to state 188

    stringvalues  go to state 311


State 249

  135 opstring: stringvalues nextop .

    $default  reduce using rule 135 (opstring)


State 250

  134 output: OP COLON opstring file_name . SEMICOLON

    SEMICOLON  shift, and go to state 312


State 251

  196 id: id ARROW IDENTIFIER .

    $default  reduce using rule 196 (id)


State 252

  206 method_invoke: IDENTIFIER id ARROW func_invoke .

    $default  reduce using rule 206 (method_invoke)


State 253

  121 get_invoke: GET . ARROW TIME

    ARROW  shift, and go to state 313


State 254

  123 get_statement: NDEC IDENTIFIER EQ get_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 314


State 255

  122 get_statement: ADEC IDENTIFIER EQ get_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 315


State 256

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS . SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 316


State 257

  104 when_default: DEFAULT SQUAREOPEN RHS . SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 317


State 258

  173 taskscope: SCOPEOPEN . taskscope SCOPECLOSE taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 318
    access                go to state 270
    method_invoke         go to state 271


State 259

   46 nonAtomicSimple: NNUM .
  164 tid_expr: NNUM . IDENTIFIER EQ TID SEMICOLON

    IDENTIFIER  shift, and go to state 319

    IDENTIFIER  [reduce using rule 46 (nonAtomicSimple)]


State 260

   52 atomicSimple: ANUM .
  165 tid_expr: ANUM . IDENTIFIER EQ TID SEMICOLON

    IDENTIFIER  shift, and go to state 320

    IDENTIFIER  [reduce using rule 52 (atomicSimple)]


State 261

  166 taskscope: declaration . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 321
    access                go to state 270
    method_invoke         go to state 271


State 262

  167 taskscope: log . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 322
    access                go to state 270
    method_invoke         go to state 271


State 263

  169 taskscope: loop . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 323
    access                go to state 270
    method_invoke         go to state 271


State 264

  168 taskscope: conditional . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 324
    access                go to state 270
    method_invoke         go to state 271


State 265

  170 taskscope: func_invoke . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 325
    access                go to state 270
    method_invoke         go to state 271


State 266

  174 taskscope: sleep . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 326
    access                go to state 270
    method_invoke         go to state 271


State 267

  171 taskscope: output . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 327
    access                go to state 270
    method_invoke         go to state 271


State 268

  172 taskscope: tid_expr . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 328
    access                go to state 270
    method_invoke         go to state 271


State 269

  163 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 329


State 270

  176 taskscope: access .

    $default  reduce using rule 176 (taskscope)


State 271

  175 taskscope: method_invoke .

    $default  reduce using rule 175 (taskscope)


State 272

   84 dimlist: dimlist . COMMA INTEGERLITERAL
  201 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE

    COMMA        shift, and go to state 170
    SQUARECLOSE  shift, and go to state 330


State 273

  207 in_statement: IN . ARROW IDENTIFIER SEMICOLON
  208             | IN . ARROW func_invoke

    ARROW  shift, and go to state 331


State 274

  114 analyze_statement: SEMICOLON .

    $default  reduce using rule 114 (analyze_statement)


State 275

  113 analyze_statement: COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 332
    NARRDEC  shift, and go to state 333
    AARRNUM  shift, and go to state 334
    AARRDEC  shift, and go to state 335

    analysis_arrays  go to state 336


State 276

  220 method_statements: SCOPEOPEN . method_statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 273
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 274
    COLON          shift, and go to state 275
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 276
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 277
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 278
    loop                  go to state 279
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 280
    when_statement        go to state 86
    analyze_statement     go to state 281
    func_invoke           go to state 282
    task_invoke           go to state 283
    get_statement         go to state 284
    sleep                 go to state 285
    input                 go to state 286
    return_statement      go to state 287
    output                go to state 288
    access                go to state 289
    method_invoke         go to state 290
    in_statement          go to state 291
    method_statements     go to state 337


State 277

  209 method_statements: declaration .

    $default  reduce using rule 209 (method_statements)


State 278

  210 method_statements: log .

    $default  reduce using rule 210 (method_statements)


State 279

  213 method_statements: loop .

    $default  reduce using rule 213 (method_statements)


State 280

  215 method_statements: conditional .

    $default  reduce using rule 215 (method_statements)


State 281

  216 method_statements: analyze_statement .

    $default  reduce using rule 216 (method_statements)


State 282

  212 method_statements: func_invoke .

    $default  reduce using rule 212 (method_statements)


State 283

  211 method_statements: task_invoke .

    $default  reduce using rule 211 (method_statements)


State 284

  221 method_statements: get_statement .

    $default  reduce using rule 221 (method_statements)


State 285

  219 method_statements: sleep .

    $default  reduce using rule 219 (method_statements)


State 286

  217 method_statements: input .

    $default  reduce using rule 217 (method_statements)


State 287

  214 method_statements: return_statement .

    $default  reduce using rule 214 (method_statements)


State 288

  218 method_statements: output .

    $default  reduce using rule 218 (method_statements)


State 289

  224 method_statements: access .

    $default  reduce using rule 224 (method_statements)


State 290

  223 method_statements: method_invoke .

    $default  reduce using rule 223 (method_statements)


State 291

  222 method_statements: in_statement .

    $default  reduce using rule 222 (method_statements)


State 292

  225 method_body: method_statements .

    $default  reduce using rule 225 (method_body)


State 293

  204 method: func_decl SCOPEOPEN method_body . SCOPECLOSE
  226 method_body: method_body . method_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 273
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 274
    COLON          shift, and go to state 275
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 276
    SCOPECLOSE     shift, and go to state 338
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 277
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 278
    loop                  go to state 279
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 280
    when_statement        go to state 86
    analyze_statement     go to state 281
    func_invoke           go to state 282
    task_invoke           go to state 283
    get_statement         go to state 284
    sleep                 go to state 285
    input                 go to state 286
    return_statement      go to state 287
    output                go to state 288
    access                go to state 289
    method_invoke         go to state 290
    in_statement          go to state 291
    method_statements     go to state 339


State 294

  143 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 143 (atomic_func_decl)


State 295

   45 RHS: NEG ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 45 (RHS)


State 296

   43 RHS: ROUNDOPEN RHS all_ops next . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 340


State 297

   39 next: RHS . all_ops next
   40     | RHS .

    DIV        shift, and go to state 213
    ADD        shift, and go to state 214
    SUB        shift, and go to state 215
    MUL        shift, and go to state 216
    EXPONENT   shift, and go to state 217
    MODULO     shift, and go to state 218
    AND        shift, and go to state 219
    OR         shift, and go to state 220
    GT         shift, and go to state 221
    LT         shift, and go to state 222
    GTEQ       shift, and go to state 223
    LTEQ       shift, and go to state 224
    NOT_EQ     shift, and go to state 225
    EQUAL_TWO  shift, and go to state 226
    HASH       shift, and go to state 228

    $default  reduce using rule 40 (next)

    comparison_op  go to state 229
    arithmetic_op  go to state 230
    logical_op     go to state 231
    all_ops        go to state 341


State 298

   82 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 82 (arrayList)


State 299

   81 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   83          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 342

    $default  reduce using rule 81 (arrayList)


State 300

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 343


State 301

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 344


State 302

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS . SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 345


State 303

  120 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 346


State 304

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON . analysis_arrays COLON analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 332
    NARRDEC  shift, and go to state 333
    AARRNUM  shift, and go to state 334
    AARRDEC  shift, and go to state 335

    analysis_arrays  go to state 347


State 305

  124 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON .

    $default  reduce using rule 124 (sleep)


State 306

  118 arguments: arguments COMMA . is

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 244
    is           go to state 348
    func_invoke  go to state 118


State 307

  116 func_invoke: INVOKE IDENTIFIER COLON arguments SEMICOLON .

    $default  reduce using rule 116 (func_invoke)


State 308

  129 nextip: COMMA . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 349


State 309

  130 nextip: SEMICOLON .

    $default  reduce using rule 130 (nextip)


State 310

  128 input: IP file_name COLON IDENTIFIER nextip .

    $default  reduce using rule 128 (input)


State 311

  136 nextop: HASH stringvalues . nextop

    HASH  shift, and go to state 248

    $default  reduce using rule 137 (nextop)

    nextop  go to state 350


State 312

  134 output: OP COLON opstring file_name SEMICOLON .

    $default  reduce using rule 134 (output)


State 313

  121 get_invoke: GET ARROW . TIME

    TIME  shift, and go to state 351


State 314

  123 get_statement: NDEC IDENTIFIER EQ get_invoke SEMICOLON .

    $default  reduce using rule 123 (get_statement)


State 315

  122 get_statement: ADEC IDENTIFIER EQ get_invoke SEMICOLON .

    $default  reduce using rule 122 (get_statement)


State 316

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE . $@4 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 101 ($@4)

    $@4  go to state 352


State 317

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE . $@5 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 103 ($@5)

    $@5  go to state 353


State 318

  173 taskscope: SCOPEOPEN taskscope . SCOPECLOSE taskscope

    SCOPECLOSE  shift, and go to state 354


State 319

  164 tid_expr: NNUM IDENTIFIER . EQ TID SEMICOLON

    EQ  shift, and go to state 355


State 320

  165 tid_expr: ANUM IDENTIFIER . EQ TID SEMICOLON

    EQ  shift, and go to state 356


State 321

  166 taskscope: declaration taskscope .

    $default  reduce using rule 166 (taskscope)


State 322

  167 taskscope: log taskscope .

    $default  reduce using rule 167 (taskscope)


State 323

  169 taskscope: loop taskscope .

    $default  reduce using rule 169 (taskscope)


State 324

  168 taskscope: conditional taskscope .

    $default  reduce using rule 168 (taskscope)


State 325

  170 taskscope: func_invoke taskscope .

    $default  reduce using rule 170 (taskscope)


State 326

  174 taskscope: sleep taskscope .

    $default  reduce using rule 174 (taskscope)


State 327

  171 taskscope: output taskscope .

    $default  reduce using rule 171 (taskscope)


State 328

  172 taskscope: tid_expr taskscope .

    $default  reduce using rule 172 (taskscope)


State 329

  163 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE .

    $default  reduce using rule 163 (task)


State 330

  201 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .

    $default  reduce using rule 201 (attribute)


State 331

  207 in_statement: IN ARROW . IDENTIFIER SEMICOLON
  208             | IN ARROW . func_invoke

    INVOKE      shift, and go to state 71
    IDENTIFIER  shift, and go to state 357

    func_invoke  go to state 358


State 332

  107 analysis_arrays: NARRNUM .

    $default  reduce using rule 107 (analysis_arrays)


State 333

  106 analysis_arrays: NARRDEC .

    $default  reduce using rule 106 (analysis_arrays)


State 334

  109 analysis_arrays: AARRNUM .

    $default  reduce using rule 109 (analysis_arrays)


State 335

  108 analysis_arrays: AARRDEC .

    $default  reduce using rule 108 (analysis_arrays)


State 336

  113 analyze_statement: COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 274
    COLON      shift, and go to state 275

    analyze_statement  go to state 359


State 337

  220 method_statements: SCOPEOPEN method_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 360


State 338

  204 method: func_decl SCOPEOPEN method_body SCOPECLOSE .

    $default  reduce using rule 204 (method)


State 339

  226 method_body: method_body method_statements .

    $default  reduce using rule 226 (method_body)


State 340

   43 RHS: ROUNDOPEN RHS all_ops next ROUNDCLOSE .

    $default  reduce using rule 43 (RHS)


State 341

   39 next: RHS all_ops . next

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    next         go to state 361
    RHS          go to state 297
    func_invoke  go to state 118


State 342

   83 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 362
    func_invoke  go to state 118


State 343

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 376
    statements            go to state 377
    access                go to state 378
    method_invoke         go to state 379


State 344

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 376
    statements            go to state 380
    access                go to state 378
    method_invoke         go to state 379


State 345

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON . expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    IDENTIFIER  shift, and go to state 381

    expression_statement  go to state 382


State 346

  120 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON arguments SEMICOLON

    COLON  shift, and go to state 383


State 347

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays . COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 384


State 348

  118 arguments: arguments COMMA is .

    $default  reduce using rule 118 (arguments)


State 349

  129 nextip: COMMA IDENTIFIER . nextip

    COMMA      shift, and go to state 308
    SEMICOLON  shift, and go to state 309

    nextip  go to state 385


State 350

  136 nextop: HASH stringvalues nextop .

    $default  reduce using rule 136 (nextop)


State 351

  121 get_invoke: GET ARROW TIME .

    $default  reduce using rule 121 (get_invoke)


State 352

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 386


State 353

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 387


State 354

  173 taskscope: SCOPEOPEN taskscope SCOPECLOSE . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 258
    NNUM        shift, and go to state 259
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 260
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 261
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 262
    loop                  go to state 263
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 264
    when_statement        go to state 86
    func_invoke           go to state 265
    sleep                 go to state 266
    output                go to state 267
    tid_expr              go to state 268
    taskscope             go to state 388
    access                go to state 270
    method_invoke         go to state 271


State 355

  164 tid_expr: NNUM IDENTIFIER EQ . TID SEMICOLON

    TID  shift, and go to state 389


State 356

  165 tid_expr: ANUM IDENTIFIER EQ . TID SEMICOLON

    TID  shift, and go to state 390


State 357

  207 in_statement: IN ARROW IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 391


State 358

  208 in_statement: IN ARROW func_invoke .

    $default  reduce using rule 208 (in_statement)


State 359

  113 analyze_statement: COLON analysis_arrays analyze_statement .

    $default  reduce using rule 113 (analyze_statement)


State 360

  220 method_statements: SCOPEOPEN method_statements SCOPECLOSE .

    $default  reduce using rule 220 (method_statements)


State 361

   39 next: RHS all_ops next .

    $default  reduce using rule 39 (next)


State 362

   83 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 83 (arrayList)


State 363

  187 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 392


State 364

  188 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 393


State 365

  177 statement: declaration .

    $default  reduce using rule 177 (statement)


State 366

  178 statement: log .

    $default  reduce using rule 178 (statement)


State 367

  180 statement: loop .

    $default  reduce using rule 180 (statement)


State 368

  179 statement: conditional .

    $default  reduce using rule 179 (statement)


State 369

  184 statement: analyze_syntax .

    $default  reduce using rule 184 (statement)


State 370

  182 statement: func_invoke .

    $default  reduce using rule 182 (statement)


State 371

  183 statement: task_invoke .

    $default  reduce using rule 183 (statement)


State 372

  186 statement: sleep .

    $default  reduce using rule 186 (statement)


State 373

  189 statement: input .

    $default  reduce using rule 189 (statement)


State 374

  181 statement: return_statement .

    $default  reduce using rule 181 (statement)


State 375

  185 statement: output .

    $default  reduce using rule 185 (statement)


State 376

  192 statements: statement .

    $default  reduce using rule 192 (statements)


State 377

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements . SCOPECLOSE
  193 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 394
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 395
    access                go to state 378
    method_invoke         go to state 379


State 378

  191 statement: access .

    $default  reduce using rule 191 (statement)


State 379

  190 statement: method_invoke .

    $default  reduce using rule 190 (statement)


State 380

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements . SCOPECLOSE
  193 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 396
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 395
    access                go to state 378
    method_invoke         go to state 379


State 381

   87 expression_statement: IDENTIFIER . expression_op RHS

    INCR           shift, and go to state 138
    DECR           shift, and go to state 139
    ASSN_MODULO    shift, and go to state 140
    ASSN_EXPONENT  shift, and go to state 141
    ASSN_DIV       shift, and go to state 142
    ASSN_MUL       shift, and go to state 143

    expression_op  go to state 144


State 382

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement . SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 397


State 383

  120 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 243
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 244
    is           go to state 245
    func_invoke  go to state 118
    arguments    go to state 398


State 384

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 332
    NARRDEC  shift, and go to state 333
    AARRNUM  shift, and go to state 334
    AARRDEC  shift, and go to state 335

    analysis_arrays  go to state 399


State 385

  129 nextip: COMMA IDENTIFIER nextip .

    $default  reduce using rule 129 (nextip)


State 386

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 376
    statements            go to state 400
    access                go to state 378
    method_invoke         go to state 379


State 387

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 376
    statements            go to state 401
    access                go to state 378
    method_invoke         go to state 379


State 388

  173 taskscope: SCOPEOPEN taskscope SCOPECLOSE taskscope .

    $default  reduce using rule 173 (taskscope)


State 389

  164 tid_expr: NNUM IDENTIFIER EQ TID . SEMICOLON

    SEMICOLON  shift, and go to state 402


State 390

  165 tid_expr: ANUM IDENTIFIER EQ TID . SEMICOLON

    SEMICOLON  shift, and go to state 403


State 391

  207 in_statement: IN ARROW IDENTIFIER SEMICOLON .

    $default  reduce using rule 207 (in_statement)


State 392

  187 statement: BREAK SEMICOLON .

    $default  reduce using rule 187 (statement)


State 393

  188 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 188 (statement)


State 394

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 100 (when_statement)


State 395

  193 statements: statements statement .

    $default  reduce using rule 193 (statements)


State 396

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 97 (while_loop)


State 397

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE . $@1 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 94 ($@1)

    $@1  go to state 404


State 398

  118 arguments: arguments . COMMA is
  120 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments . SEMICOLON

    COMMA      shift, and go to state 306
    SEMICOLON  shift, and go to state 405


State 399

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 274
    COLON      shift, and go to state 275

    analyze_statement  go to state 406


State 400

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements . SCOPECLOSE
  193 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 407
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 395
    access                go to state 378
    method_invoke         go to state 379


State 401

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements . SCOPECLOSE
  193 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 408
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 395
    access                go to state 378
    method_invoke         go to state 379


State 402

  164 tid_expr: NNUM IDENTIFIER EQ TID SEMICOLON .

    $default  reduce using rule 164 (tid_expr)


State 403

  165 tid_expr: ANUM IDENTIFIER EQ TID SEMICOLON .

    $default  reduce using rule 165 (tid_expr)


State 404

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 409


State 405

  120 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON .

    $default  reduce using rule 120 (task_invoke)


State 406

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement .

    $default  reduce using rule 112 (analyze_syntax)


State 407

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 102 (when_statement)


State 408

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 104 (when_default)


State 409

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 376
    statements            go to state 410
    access                go to state 378
    method_invoke         go to state 379


State 410

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements . SCOPECLOSE
  193 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 363
    CONTINUE       shift, and go to state 364
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 411
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 365
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 366
    loop                  go to state 367
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 368
    when_statement        go to state 86
    analyze_syntax        go to state 369
    func_invoke           go to state 370
    task_invoke           go to state 371
    sleep                 go to state 372
    input                 go to state 373
    return_statement      go to state 374
    output                go to state 375
    statement             go to state 395
    access                go to state 378
    method_invoke         go to state 379


State 411

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 95 (for_loop)
