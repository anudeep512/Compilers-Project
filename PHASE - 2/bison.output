Nonterminals useless in grammar

    log


Terminals unused in grammar

    START
    LEXERROR


Rules useless in grammar

  233 log: assignment_statement SEMICOLON
  234    | expression_statement SEMICOLON


Rules useless in parser due to conflicts

  115 is: IDENTIFIER
  116   | constants
  117   | func_invoke


State 33 conflicts: 23 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 215 conflicts: 36 reduce/reduce
State 262 conflicts: 2 reduce/reduce
State 263 conflicts: 2 reduce/reduce
State 266 conflicts: 2 reduce/reduce
State 280 conflicts: 1 shift/reduce
State 281 conflicts: 1 shift/reduce
State 299 conflicts: 23 shift/reduce
State 387 conflicts: 23 shift/reduce


Grammar

    0 $accept: begin $end

    1 expression_op: ASSN_DIV
    2              | ASSN_EXPONENT
    3              | ASSN_MODULO
    4              | ASSN_MUL
    5              | INCR
    6              | DECR

    7 comparison_op: LT
    8              | GT
    9              | GTEQ
   10              | LTEQ
   11              | NOT_EQ
   12              | EQUAL_TWO

   13 arithmetic_op: ADD
   14              | SUB
   15              | MUL
   16              | DIV
   17              | MODULO
   18              | EXPONENT

   19 logical_op: AND
   20           | OR

   21 nonAtomic_datatypes: nonAtomicArray
   22                    | nonAtomicSimple

   23 begin: %empty
   24      | begin declaration
   25      | begin function
   26      | begin task
   27      | begin type_declaration

   28 T: IDENTIFIER
   29  | func_invoke

   30 all_ops: arithmetic_op
   31        | comparison_op
   32        | logical_op
   33        | HASH

   34 constants: INTEGERLITERAL
   35          | CHARACTERLITERAL
   36          | FLOATLITERAL
   37          | BOOLEANLITERAL
   38          | STRINGLITERAL

   39 next: RHS all_ops next
   40     | RHS

   41 RHS: constants
   42    | T
   43    | ROUNDOPEN RHS all_ops next ROUNDCLOSE
   44    | ROUNDOPEN RHS ROUNDCLOSE
   45    | NEG ROUNDOPEN RHS ROUNDCLOSE
   46    | get_invoke

   47 nonAtomicSimple: NNUM
   48                | NDEC
   49                | NBOOL
   50                | NLET
   51                | NTEXT
   52                | NVOID

   53 atomicSimple: ANUM
   54             | ADEC
   55             | ABOOL
   56             | ALET
   57             | ATEXT

   58 nonAtomicArray: NARRNUM
   59               | NARRDEC
   60               | NARRBOOL
   61               | NARRLET
   62               | NARRTEXT

   63 atomicArray: AARRNUM
   64            | AARRDEC
   65            | AARRBOOL
   66            | AARRLET
   67            | AARRTEXT

   68 declaration: declarationStmt SEMICOLON
   69            | declaration declarationStmt SEMICOLON

   70 simpleDatatype: nonAtomicSimple
   71               | atomicSimple
   72               | UDATATYPE
   73               | ATOMIC AUDATATYPE

   74 arrayDatatype: nonAtomicArray
   75              | atomicArray

   76 declarationStmt: simpleDatatype simpleList
   77                | arrayDatatype arrayList

   78 simpleList: IDENTIFIER
   79           | simpleList COMMA IDENTIFIER
   80           | IDENTIFIER EQ RHS
   81           | simpleList COMMA IDENTIFIER EQ RHS

   82 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   83          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   84          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS
   85          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

   86 dimlist: dimlist COMMA INTEGERLITERAL
   87        | INTEGERLITERAL

   88 assignment_statement: IDENTIFIER EQ RHS

   89 expression_statement: IDENTIFIER expression_op RHS

   90 both_assignment: assignment_statement
   91                | declarationStmt

   92 loop: for_loop
   93     | while_loop

   94 $@1: %empty

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

   96 $@2: %empty

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

   98 conditional: when_statement when_default

   99 $@3: %empty

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

  101 $@4: %empty

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

  103 $@5: %empty

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE
  105             | %empty

  106 analysis_arrays: NARRDEC
  107                | NARRNUM
  108                | AARRDEC
  109                | AARRNUM

  110 analyze_label: STRINGLITERAL
  111              | IDENTIFIER

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

  113 analyze_statement: COLON analysis_arrays analyze_statement
  114                  | SEMICOLON

  115 is: IDENTIFIER
  116   | constants
  117   | func_invoke
  118   | RHS

  119 func_invoke: INVOKE IDENTIFIER COLON arguments SEMICOLON

  120 arguments: is
  121          | arguments COMMA is
  122          | NULL_ARGS

  123 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

  124 get_invoke: GET ARROW TIME

  125 get_statement: NDEC IDENTIFIER EQ get_invoke SEMICOLON
  126              | ADEC IDENTIFIER EQ get_invoke SEMICOLON

  127 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

  128 file_name: ARROW STRINGLITERAL
  129          | ARROW IDENTIFIER
  130          | %empty

  131 input: IP file_name COLON IDENTIFIER nextip

  132 nextip: COMMA IDENTIFIER nextip
  133       | SEMICOLON

  134 stringvalues: STRINGLITERAL
  135             | IDENTIFIER

  136 return_statement: RETURN RHS SEMICOLON

  137 output: OP COLON opstring file_name SEMICOLON

  138 opstring: stringvalues nextop

  139 nextop: HASH stringvalues nextop
  140       | %empty

  141 function: func_decl func_body
  142         | atomic_func_decl func_body

  143 func_args: IDENTIFIER
  144          | func_args COMMA IDENTIFIER

  145 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  146 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  147 func_body: SCOPEOPEN func_statements SCOPECLOSE

  148 func_statements: declaration func_statements
  149                | assignment_statement func_statements
  150                | expression_statement func_statements
  151                | task_invoke func_statements
  152                | func_invoke func_statements
  153                | loop func_statements
  154                | return_statement func_statements
  155                | conditional func_statements
  156                | analyze_syntax func_statements
  157                | input func_statements
  158                | output func_statements
  159                | sleep func_statements
  160                | SCOPEOPEN func_statements SCOPECLOSE func_statements
  161                | get_statement func_statements
  162                | method_invoke func_statements
  163                | access func_statements
  164                | %empty

  165 $@6: %empty

  166 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

  167 tid_expr: NNUM IDENTIFIER EQ TID SEMICOLON
  168         | ANUM IDENTIFIER EQ TID SEMICOLON

  169 taskscope: declaration taskscope
  170          | assignment_statement taskscope
  171          | expression_statement taskscope
  172          | conditional taskscope
  173          | loop taskscope
  174          | func_invoke taskscope
  175          | output taskscope
  176          | tid_expr taskscope
  177          | SCOPEOPEN taskscope SCOPECLOSE taskscope
  178          | sleep taskscope
  179          | method_invoke
  180          | access

  181 statement: declaration
  182          | assignment_statement
  183          | expression_statement
  184          | conditional
  185          | loop
  186          | return_statement
  187          | func_invoke
  188          | task_invoke
  189          | analyze_syntax
  190          | output
  191          | sleep
  192          | BREAK SEMICOLON
  193          | CONTINUE SEMICOLON
  194          | input
  195          | method_invoke
  196          | access

  197 statements: statement
  198           | statements statement

  199 access: IDENTIFIER id

  200 id: ARROW IDENTIFIER
  201   | id ARROW IDENTIFIER

  202 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE

  203 attributes: attribute SEMICOLON
  204           | attributes attribute SEMICOLON

  205 attribute: simpleDatatype IDENTIFIER
  206          | arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

  207 methods: method
  208        | methods method

  209 method: func_decl SCOPEOPEN method_body SCOPECLOSE

  210 method_invoke: IDENTIFIER ARROW func_invoke
  211              | IDENTIFIER id ARROW func_invoke

  212 in_statement: IN ARROW IDENTIFIER SEMICOLON
  213             | IN ARROW func_invoke

  214 method_statements: declaration
  215                  | assignment_statement
  216                  | expression_statement
  217                  | task_invoke
  218                  | func_invoke
  219                  | loop
  220                  | return_statement
  221                  | conditional
  222                  | analyze_statement
  223                  | input
  224                  | output
  225                  | sleep
  226                  | SCOPEOPEN method_statements SCOPECLOSE
  227                  | get_statement
  228                  | in_statement
  229                  | method_invoke
  230                  | access

  231 method_body: method_statements
  232            | method_body method_statements


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN (258) 100
    REPEAT (259) 97
    ELSE_WHEN (260) 102
    DEFAULT (261) 104
    FOR (262) 95
    BREAK (263) 192
    CONTINUE (264) 193
    TASK (265) 166
    MAKE_PARALLEL (266) 123
    NULL_ARGS (267) 122
    TID (268) 167 168
    ANALYZE (269) 112
    GET (270) 124
    SLEEP (271) 127
    TIME (272) 124
    START (273)
    RETURN (274) 136
    TYPE (275) 202
    ATOMIC (276) 73 146
    IN (277) 212 213
    FUNC (278) 145 146
    INVOKE (279) 119
    IP (280) 131
    OP (281) 137
    DIV (282) 16
    ADD (283) 13
    SUB (284) 14
    MUL (285) 15
    EXPONENT (286) 18
    MODULO (287) 17
    ARROW (288) 124 128 129 200 201 210 211 212 213
    EQ (289) 80 81 84 85 88 125 126 167 168
    INCR (290) 5
    DECR (291) 6
    ASSN_MODULO (292) 3
    ASSN_EXPONENT (293) 2
    ASSN_DIV (294) 1
    ASSN_MUL (295) 4
    AND (296) 19
    OR (297) 20
    GT (298) 8
    LT (299) 7
    GTEQ (300) 9
    LTEQ (301) 10
    NOT_EQ (302) 11
    NEG (303) 45
    EQUAL_TWO (304) 12
    INTEGERLITERAL (305) 34 86 87 123
    STRINGLITERAL (306) 38 110 128 134
    CHARACTERLITERAL (307) 35
    BOOLEANLITERAL (308) 37
    FLOATLITERAL (309) 36 127
    COMMA (310) 79 81 83 85 86 121 132 144
    SEMICOLON (311) 68 69 95 114 119 123 125 126 127 133 136 137 167 168 192 193 203 204 212
    COLON (312) 112 113 119 123 131 137 145 146 166
    IDENTIFIER (313) 28 78 79 80 81 82 83 84 85 88 89 111 115 119 123 125 126 129 131 132 135 143 144 145 146 166 167 168 199 200 201 205 206 210 211 212
    SCOPEOPEN (314) 95 97 100 102 104 147 160 166 177 202 209 226
    SCOPECLOSE (315) 95 97 100 102 104 147 160 166 177 202 209 226
    ROUNDOPEN (316) 43 44 45 127
    ROUNDCLOSE (317) 43 44 45 127
    SQUAREOPEN (318) 82 83 84 85 95 97 100 102 104 206
    SQUARECLOSE (319) 82 83 84 85 95 97 100 102 104 206
    HASH (320) 33 139
    LEXERROR (321)
    NNUM (322) 47 167
    NDEC (323) 48 125
    NBOOL (324) 49
    NLET (325) 50
    NTEXT (326) 51
    NVOID (327) 52
    NARRNUM (328) 58 107
    NARRDEC (329) 59 106
    NARRBOOL (330) 60
    NARRLET (331) 61
    NARRTEXT (332) 62
    ANUM (333) 53 168
    ADEC (334) 54 126
    ABOOL (335) 55
    ALET (336) 56
    ATEXT (337) 57
    AARRNUM (338) 63 109
    AARRDEC (339) 64 108
    AARRBOOL (340) 65
    AARRLET (341) 66
    AARRTEXT (342) 67
    UDATATYPE (343) 72 202
    AUDATATYPE (344) 73


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    expression_op (91)
        on left: 1 2 3 4 5 6
        on right: 89
    comparison_op (92)
        on left: 7 8 9 10 11 12
        on right: 31
    arithmetic_op (93)
        on left: 13 14 15 16 17 18
        on right: 30
    logical_op (94)
        on left: 19 20
        on right: 32
    nonAtomic_datatypes (95)
        on left: 21 22
        on right: 145 146
    begin (96)
        on left: 23 24 25 26 27
        on right: 0 24 25 26 27
    T (97)
        on left: 28 29
        on right: 42
    all_ops (98)
        on left: 30 31 32 33
        on right: 39 43
    constants (99)
        on left: 34 35 36 37 38
        on right: 41 116
    next (100)
        on left: 39 40
        on right: 39 43
    RHS (101)
        on left: 41 42 43 44 45 46
        on right: 39 40 43 44 45 80 81 84 85 88 89 95 97 100 102 104 118 136
    nonAtomicSimple (102)
        on left: 47 48 49 50 51 52
        on right: 22 70
    atomicSimple (103)
        on left: 53 54 55 56 57
        on right: 71
    nonAtomicArray (104)
        on left: 58 59 60 61 62
        on right: 21 74
    atomicArray (105)
        on left: 63 64 65 66 67
        on right: 75
    declaration (106)
        on left: 68 69
        on right: 24 69 148 169 181 214
    simpleDatatype (107)
        on left: 70 71 72 73
        on right: 76 205
    arrayDatatype (108)
        on left: 74 75
        on right: 77 206
    declarationStmt (109)
        on left: 76 77
        on right: 68 69 91
    simpleList (110)
        on left: 78 79 80 81
        on right: 76 79 81
    arrayList (111)
        on left: 82 83 84 85
        on right: 77 83 85
    dimlist (112)
        on left: 86 87
        on right: 82 83 84 85 86 206
    assignment_statement (113)
        on left: 88
        on right: 90 149 170 182 215
    expression_statement (114)
        on left: 89
        on right: 95 150 171 183 216
    both_assignment (115)
        on left: 90 91
        on right: 95
    loop (116)
        on left: 92 93
        on right: 153 173 185 219
    for_loop (117)
        on left: 95
        on right: 92
    $@1 (118)
        on left: 94
        on right: 95
    while_loop (119)
        on left: 97
        on right: 93
    $@2 (120)
        on left: 96
        on right: 97
    conditional (121)
        on left: 98
        on right: 155 172 184 221
    when_statement (122)
        on left: 100 102
        on right: 98 102
    $@3 (123)
        on left: 99
        on right: 100
    $@4 (124)
        on left: 101
        on right: 102
    when_default (125)
        on left: 104 105
        on right: 98
    $@5 (126)
        on left: 103
        on right: 104
    analysis_arrays (127)
        on left: 106 107 108 109
        on right: 112 113
    analyze_label (128)
        on left: 110 111
        on right: 112
    analyze_syntax (129)
        on left: 112
        on right: 156 189
    analyze_statement (130)
        on left: 113 114
        on right: 112 113 222
    is (131)
        on left: 115 116 117 118
        on right: 120 121
    func_invoke (132)
        on left: 119
        on right: 29 117 152 174 187 210 211 213 218
    arguments (133)
        on left: 120 121 122
        on right: 119 121 123
    task_invoke (134)
        on left: 123
        on right: 151 188 217
    get_invoke (135)
        on left: 124
        on right: 46 125 126
    get_statement (136)
        on left: 125 126
        on right: 161 227
    sleep (137)
        on left: 127
        on right: 159 178 191 225
    file_name (138)
        on left: 128 129 130
        on right: 131 137
    input (139)
        on left: 131
        on right: 157 194 223
    nextip (140)
        on left: 132 133
        on right: 131 132
    stringvalues (141)
        on left: 134 135
        on right: 138 139
    return_statement (142)
        on left: 136
        on right: 154 186 220
    output (143)
        on left: 137
        on right: 158 175 190 224
    opstring (144)
        on left: 138
        on right: 137
    nextop (145)
        on left: 139 140
        on right: 138 139
    function (146)
        on left: 141 142
        on right: 25
    func_args (147)
        on left: 143 144
        on right: 144 145 146 166
    func_decl (148)
        on left: 145
        on right: 141 209
    atomic_func_decl (149)
        on left: 146
        on right: 142
    func_body (150)
        on left: 147
        on right: 141 142
    func_statements (151)
        on left: 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
        on right: 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
    task (152)
        on left: 166
        on right: 26
    $@6 (153)
        on left: 165
        on right: 166
    tid_expr (154)
        on left: 167 168
        on right: 176
    taskscope (155)
        on left: 169 170 171 172 173 174 175 176 177 178 179 180
        on right: 166 169 170 171 172 173 174 175 176 177 178
    statement (156)
        on left: 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196
        on right: 197 198
    statements (157)
        on left: 197 198
        on right: 95 97 100 102 104 198
    access (158)
        on left: 199
        on right: 163 180 196 230
    id (159)
        on left: 200 201
        on right: 199 201 211
    type_declaration (160)
        on left: 202
        on right: 27
    attributes (161)
        on left: 203 204
        on right: 202 204
    attribute (162)
        on left: 205 206
        on right: 203 204
    methods (163)
        on left: 207 208
        on right: 202 208
    method (164)
        on left: 209
        on right: 207 208
    method_invoke (165)
        on left: 210 211
        on right: 162 179 195 229
    in_statement (166)
        on left: 212 213
        on right: 228
    method_statements (167)
        on left: 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230
        on right: 226 231 232
    method_body (168)
        on left: 231 232
        on right: 209 232


State 0

    0 $accept: . begin $end

    $default  reduce using rule 23 (begin)

    begin  go to state 1


State 1

    0 $accept: begin . $end
   24 begin: begin . declaration
   25      | begin . function
   26      | begin . task
   27      | begin . type_declaration

    $end       shift, and go to state 2
    TASK       shift, and go to state 3
    TYPE       shift, and go to state 4
    ATOMIC     shift, and go to state 5
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple   go to state 29
    atomicSimple      go to state 30
    nonAtomicArray    go to state 31
    atomicArray       go to state 32
    declaration       go to state 33
    simpleDatatype    go to state 34
    arrayDatatype     go to state 35
    declarationStmt   go to state 36
    function          go to state 37
    func_decl         go to state 38
    atomic_func_decl  go to state 39
    task              go to state 40
    type_declaration  go to state 41


State 2

    0 $accept: begin $end .

    $default  accept


State 3

  166 task: TASK . IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 42


State 4

  202 type_declaration: TYPE . UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE

    UDATATYPE  shift, and go to state 43


State 5

   73 simpleDatatype: ATOMIC . AUDATATYPE
  146 atomic_func_decl: ATOMIC . FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    FUNC        shift, and go to state 44
    AUDATATYPE  shift, and go to state 45


State 6

  145 func_decl: FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 46


State 7

   47 nonAtomicSimple: NNUM .

    $default  reduce using rule 47 (nonAtomicSimple)


State 8

   48 nonAtomicSimple: NDEC .

    $default  reduce using rule 48 (nonAtomicSimple)


State 9

   49 nonAtomicSimple: NBOOL .

    $default  reduce using rule 49 (nonAtomicSimple)


State 10

   50 nonAtomicSimple: NLET .

    $default  reduce using rule 50 (nonAtomicSimple)


State 11

   51 nonAtomicSimple: NTEXT .

    $default  reduce using rule 51 (nonAtomicSimple)


State 12

   52 nonAtomicSimple: NVOID .

    $default  reduce using rule 52 (nonAtomicSimple)


State 13

   58 nonAtomicArray: NARRNUM .

    $default  reduce using rule 58 (nonAtomicArray)


State 14

   59 nonAtomicArray: NARRDEC .

    $default  reduce using rule 59 (nonAtomicArray)


State 15

   60 nonAtomicArray: NARRBOOL .

    $default  reduce using rule 60 (nonAtomicArray)


State 16

   61 nonAtomicArray: NARRLET .

    $default  reduce using rule 61 (nonAtomicArray)


State 17

   62 nonAtomicArray: NARRTEXT .

    $default  reduce using rule 62 (nonAtomicArray)


State 18

   53 atomicSimple: ANUM .

    $default  reduce using rule 53 (atomicSimple)


State 19

   54 atomicSimple: ADEC .

    $default  reduce using rule 54 (atomicSimple)


State 20

   55 atomicSimple: ABOOL .

    $default  reduce using rule 55 (atomicSimple)


State 21

   56 atomicSimple: ALET .

    $default  reduce using rule 56 (atomicSimple)


State 22

   57 atomicSimple: ATEXT .

    $default  reduce using rule 57 (atomicSimple)


State 23

   63 atomicArray: AARRNUM .

    $default  reduce using rule 63 (atomicArray)


State 24

   64 atomicArray: AARRDEC .

    $default  reduce using rule 64 (atomicArray)


State 25

   65 atomicArray: AARRBOOL .

    $default  reduce using rule 65 (atomicArray)


State 26

   66 atomicArray: AARRLET .

    $default  reduce using rule 66 (atomicArray)


State 27

   67 atomicArray: AARRTEXT .

    $default  reduce using rule 67 (atomicArray)


State 28

   72 simpleDatatype: UDATATYPE .

    $default  reduce using rule 72 (simpleDatatype)


State 29

   70 simpleDatatype: nonAtomicSimple .

    $default  reduce using rule 70 (simpleDatatype)


State 30

   71 simpleDatatype: atomicSimple .

    $default  reduce using rule 71 (simpleDatatype)


State 31

   74 arrayDatatype: nonAtomicArray .

    $default  reduce using rule 74 (arrayDatatype)


State 32

   75 arrayDatatype: atomicArray .

    $default  reduce using rule 75 (arrayDatatype)


State 33

   24 begin: begin declaration .
   69 declaration: declaration . declarationStmt SEMICOLON

    ATOMIC     shift, and go to state 47
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    ATOMIC     [reduce using rule 24 (begin)]
    NNUM       [reduce using rule 24 (begin)]
    NDEC       [reduce using rule 24 (begin)]
    NBOOL      [reduce using rule 24 (begin)]
    NLET       [reduce using rule 24 (begin)]
    NTEXT      [reduce using rule 24 (begin)]
    NVOID      [reduce using rule 24 (begin)]
    NARRNUM    [reduce using rule 24 (begin)]
    NARRDEC    [reduce using rule 24 (begin)]
    NARRBOOL   [reduce using rule 24 (begin)]
    NARRLET    [reduce using rule 24 (begin)]
    NARRTEXT   [reduce using rule 24 (begin)]
    ANUM       [reduce using rule 24 (begin)]
    ADEC       [reduce using rule 24 (begin)]
    ABOOL      [reduce using rule 24 (begin)]
    ALET       [reduce using rule 24 (begin)]
    ATEXT      [reduce using rule 24 (begin)]
    AARRNUM    [reduce using rule 24 (begin)]
    AARRDEC    [reduce using rule 24 (begin)]
    AARRBOOL   [reduce using rule 24 (begin)]
    AARRLET    [reduce using rule 24 (begin)]
    AARRTEXT   [reduce using rule 24 (begin)]
    UDATATYPE  [reduce using rule 24 (begin)]
    $default   reduce using rule 24 (begin)

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 34
    arrayDatatype    go to state 35
    declarationStmt  go to state 48


State 34

   76 declarationStmt: simpleDatatype . simpleList

    IDENTIFIER  shift, and go to state 49

    simpleList  go to state 50


State 35

   77 declarationStmt: arrayDatatype . arrayList

    IDENTIFIER  shift, and go to state 51

    arrayList  go to state 52


State 36

   68 declaration: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 37

   25 begin: begin function .

    $default  reduce using rule 25 (begin)


State 38

  141 function: func_decl . func_body

    SCOPEOPEN  shift, and go to state 54

    func_body  go to state 55


State 39

  142 function: atomic_func_decl . func_body

    SCOPEOPEN  shift, and go to state 54

    func_body  go to state 56


State 40

   26 begin: begin task .

    $default  reduce using rule 26 (begin)


State 41

   27 begin: begin type_declaration .

    $default  reduce using rule 27 (begin)


State 42

  166 task: TASK IDENTIFIER . COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    COLON  shift, and go to state 57


State 43

  202 type_declaration: TYPE UDATATYPE . SCOPEOPEN attributes methods SCOPECLOSE

    SCOPEOPEN  shift, and go to state 58


State 44

  146 atomic_func_decl: ATOMIC FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 59


State 45

   73 simpleDatatype: ATOMIC AUDATATYPE .

    $default  reduce using rule 73 (simpleDatatype)


State 46

  145 func_decl: FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 60


State 47

   73 simpleDatatype: ATOMIC . AUDATATYPE

    AUDATATYPE  shift, and go to state 45


State 48

   69 declaration: declaration declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 49

   78 simpleList: IDENTIFIER .
   80           | IDENTIFIER . EQ RHS

    EQ  shift, and go to state 62

    $default  reduce using rule 78 (simpleList)


State 50

   76 declarationStmt: simpleDatatype simpleList .
   79 simpleList: simpleList . COMMA IDENTIFIER
   81           | simpleList . COMMA IDENTIFIER EQ RHS

    COMMA  shift, and go to state 63

    $default  reduce using rule 76 (declarationStmt)


State 51

   82 arrayList: IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   84          | IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 64


State 52

   77 declarationStmt: arrayDatatype arrayList .
   83 arrayList: arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   85          | arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    COMMA  shift, and go to state 65

    $default  reduce using rule 77 (declarationStmt)


State 53

   68 declaration: declarationStmt SEMICOLON .

    $default  reduce using rule 68 (declaration)


State 54

  147 func_body: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 96
    access                go to state 97
    method_invoke         go to state 98


State 55

  141 function: func_decl func_body .

    $default  reduce using rule 141 (function)


State 56

  142 function: atomic_func_decl func_body .

    $default  reduce using rule 142 (function)


State 57

  166 task: TASK IDENTIFIER COLON . func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 99

    func_args  go to state 100


State 58

  202 type_declaration: TYPE UDATATYPE SCOPEOPEN . attributes methods SCOPECLOSE

    ATOMIC     shift, and go to state 47
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 101
    arrayDatatype    go to state 102
    attributes       go to state 103
    attribute        go to state 104


State 59

  146 atomic_func_decl: ATOMIC FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 105


State 60

  145 func_decl: FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 99

    func_args  go to state 106


State 61

   69 declaration: declaration declarationStmt SEMICOLON .

    $default  reduce using rule 69 (declaration)


State 62

   80 simpleList: IDENTIFIER EQ . RHS

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 118
    func_invoke  go to state 119
    get_invoke   go to state 120


State 63

   79 simpleList: simpleList COMMA . IDENTIFIER
   81           | simpleList COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 121


State 64

   82 arrayList: IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   84          | IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 122

    dimlist  go to state 123


State 65

   83 arrayList: arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   85          | arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    IDENTIFIER  shift, and go to state 124


State 66

  100 when_statement: WHEN . SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 125


State 67

   97 while_loop: REPEAT . SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 126


State 68

   95 for_loop: FOR . SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 127


State 69

  123 task_invoke: MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 128


State 70

  112 analyze_syntax: ANALYZE . analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 129
    IDENTIFIER     shift, and go to state 130

    analyze_label  go to state 131


State 71

  127 sleep: SLEEP . ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

    ROUNDOPEN  shift, and go to state 132


State 72

  136 return_statement: RETURN . RHS SEMICOLON

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 133
    func_invoke  go to state 119
    get_invoke   go to state 120


State 73

  119 func_invoke: INVOKE . IDENTIFIER COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 134


State 74

  131 input: IP . file_name COLON IDENTIFIER nextip

    ARROW  shift, and go to state 135

    $default  reduce using rule 130 (file_name)

    file_name  go to state 136


State 75

  137 output: OP . COLON opstring file_name SEMICOLON

    COLON  shift, and go to state 137


State 76

   88 assignment_statement: IDENTIFIER . EQ RHS
   89 expression_statement: IDENTIFIER . expression_op RHS
  199 access: IDENTIFIER . id
  210 method_invoke: IDENTIFIER . ARROW func_invoke
  211              | IDENTIFIER . id ARROW func_invoke

    ARROW          shift, and go to state 138
    EQ             shift, and go to state 139
    INCR           shift, and go to state 140
    DECR           shift, and go to state 141
    ASSN_MODULO    shift, and go to state 142
    ASSN_EXPONENT  shift, and go to state 143
    ASSN_DIV       shift, and go to state 144
    ASSN_MUL       shift, and go to state 145

    expression_op  go to state 146
    id             go to state 147


State 77

  160 func_statements: SCOPEOPEN . func_statements SCOPECLOSE func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 148
    access                go to state 97
    method_invoke         go to state 98


State 78

   48 nonAtomicSimple: NDEC .
  125 get_statement: NDEC . IDENTIFIER EQ get_invoke SEMICOLON

    IDENTIFIER  shift, and go to state 149

    IDENTIFIER  [reduce using rule 48 (nonAtomicSimple)]


State 79

   54 atomicSimple: ADEC .
  126 get_statement: ADEC . IDENTIFIER EQ get_invoke SEMICOLON

    IDENTIFIER  shift, and go to state 150

    IDENTIFIER  [reduce using rule 54 (atomicSimple)]


State 80

   69 declaration: declaration . declarationStmt SEMICOLON
  148 func_statements: declaration . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 151
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 152
    access                go to state 97
    method_invoke         go to state 98


State 81

  149 func_statements: assignment_statement . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 153
    access                go to state 97
    method_invoke         go to state 98


State 82

  150 func_statements: expression_statement . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 154
    access                go to state 97
    method_invoke         go to state 98


State 83

  153 func_statements: loop . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 155
    access                go to state 97
    method_invoke         go to state 98


State 84

   92 loop: for_loop .

    $default  reduce using rule 92 (loop)


State 85

   93 loop: while_loop .

    $default  reduce using rule 93 (loop)


State 86

  155 func_statements: conditional . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 156
    access                go to state 97
    method_invoke         go to state 98


State 87

   98 conditional: when_statement . when_default
  102 when_statement: when_statement . ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    ELSE_WHEN  shift, and go to state 157
    DEFAULT    shift, and go to state 158

    $default  reduce using rule 105 (when_default)

    when_default  go to state 159


State 88

  156 func_statements: analyze_syntax . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 160
    access                go to state 97
    method_invoke         go to state 98


State 89

  152 func_statements: func_invoke . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 161
    access                go to state 97
    method_invoke         go to state 98


State 90

  151 func_statements: task_invoke . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 162
    access                go to state 97
    method_invoke         go to state 98


State 91

  161 func_statements: get_statement . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 163
    access                go to state 97
    method_invoke         go to state 98


State 92

  159 func_statements: sleep . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 164
    access                go to state 97
    method_invoke         go to state 98


State 93

  157 func_statements: input . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 165
    access                go to state 97
    method_invoke         go to state 98


State 94

  154 func_statements: return_statement . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 166
    access                go to state 97
    method_invoke         go to state 98


State 95

  158 func_statements: output . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 167
    access                go to state 97
    method_invoke         go to state 98


State 96

  147 func_body: SCOPEOPEN func_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 168


State 97

  163 func_statements: access . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 169
    access                go to state 97
    method_invoke         go to state 98


State 98

  162 func_statements: method_invoke . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 170
    access                go to state 97
    method_invoke         go to state 98


State 99

  143 func_args: IDENTIFIER .

    $default  reduce using rule 143 (func_args)


State 100

  144 func_args: func_args . COMMA IDENTIFIER
  166 task: TASK IDENTIFIER COLON func_args . $@6 SCOPEOPEN taskscope SCOPECLOSE

    COMMA  shift, and go to state 171

    $default  reduce using rule 165 ($@6)

    $@6  go to state 172


State 101

  205 attribute: simpleDatatype . IDENTIFIER

    IDENTIFIER  shift, and go to state 173


State 102

  206 attribute: arrayDatatype . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

    IDENTIFIER  shift, and go to state 174


State 103

  202 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes . methods SCOPECLOSE
  204 attributes: attributes . attribute SEMICOLON

    ATOMIC     shift, and go to state 47
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 101
    arrayDatatype    go to state 102
    func_decl        go to state 175
    attribute        go to state 176
    methods          go to state 177
    method           go to state 178


State 104

  203 attributes: attribute . SEMICOLON

    SEMICOLON  shift, and go to state 179


State 105

  146 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 99

    func_args  go to state 180


State 106

  144 func_args: func_args . COMMA IDENTIFIER
  145 func_decl: FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 171
    COLON  shift, and go to state 181


State 107

  124 get_invoke: GET . ARROW TIME

    ARROW  shift, and go to state 182


State 108

   45 RHS: NEG . ROUNDOPEN RHS ROUNDCLOSE

    ROUNDOPEN  shift, and go to state 183


State 109

   34 constants: INTEGERLITERAL .

    $default  reduce using rule 34 (constants)


State 110

   38 constants: STRINGLITERAL .

    $default  reduce using rule 38 (constants)


State 111

   35 constants: CHARACTERLITERAL .

    $default  reduce using rule 35 (constants)


State 112

   37 constants: BOOLEANLITERAL .

    $default  reduce using rule 37 (constants)


State 113

   36 constants: FLOATLITERAL .

    $default  reduce using rule 36 (constants)


State 114

   28 T: IDENTIFIER .

    $default  reduce using rule 28 (T)


State 115

   43 RHS: ROUNDOPEN . RHS all_ops next ROUNDCLOSE
   44    | ROUNDOPEN . RHS ROUNDCLOSE

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 184
    func_invoke  go to state 119
    get_invoke   go to state 120


State 116

   42 RHS: T .

    $default  reduce using rule 42 (RHS)


State 117

   41 RHS: constants .

    $default  reduce using rule 41 (RHS)


State 118

   80 simpleList: IDENTIFIER EQ RHS .

    $default  reduce using rule 80 (simpleList)


State 119

   29 T: func_invoke .

    $default  reduce using rule 29 (T)


State 120

   46 RHS: get_invoke .

    $default  reduce using rule 46 (RHS)


State 121

   79 simpleList: simpleList COMMA IDENTIFIER .
   81           | simpleList COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 185

    $default  reduce using rule 79 (simpleList)


State 122

   87 dimlist: INTEGERLITERAL .

    $default  reduce using rule 87 (dimlist)


State 123

   82 arrayList: IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   84          | IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   86 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 186
    SQUARECLOSE  shift, and go to state 187


State 124

   83 arrayList: arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   85          | arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 188


State 125

  100 when_statement: WHEN SQUAREOPEN . RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 189
    func_invoke  go to state 119
    get_invoke   go to state 120


State 126

   97 while_loop: REPEAT SQUAREOPEN . RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 190
    func_invoke  go to state 119
    get_invoke   go to state 120


State 127

   95 for_loop: FOR SQUAREOPEN . both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    ATOMIC      shift, and go to state 47
    IDENTIFIER  shift, and go to state 191
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 192
    assignment_statement  go to state 193
    both_assignment       go to state 194


State 128

  123 task_invoke: MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 195


State 129

  110 analyze_label: STRINGLITERAL .

    $default  reduce using rule 110 (analyze_label)


State 130

  111 analyze_label: IDENTIFIER .

    $default  reduce using rule 111 (analyze_label)


State 131

  112 analyze_syntax: ANALYZE analyze_label . COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 196


State 132

  127 sleep: SLEEP ROUNDOPEN . FLOATLITERAL ROUNDCLOSE SEMICOLON

    FLOATLITERAL  shift, and go to state 197


State 133

  136 return_statement: RETURN RHS . SEMICOLON

    SEMICOLON  shift, and go to state 198


State 134

  119 func_invoke: INVOKE IDENTIFIER . COLON arguments SEMICOLON

    COLON  shift, and go to state 199


State 135

  128 file_name: ARROW . STRINGLITERAL
  129          | ARROW . IDENTIFIER

    STRINGLITERAL  shift, and go to state 200
    IDENTIFIER     shift, and go to state 201


State 136

  131 input: IP file_name . COLON IDENTIFIER nextip

    COLON  shift, and go to state 202


State 137

  137 output: OP COLON . opstring file_name SEMICOLON

    STRINGLITERAL  shift, and go to state 203
    IDENTIFIER     shift, and go to state 204

    stringvalues  go to state 205
    opstring      go to state 206


State 138

  200 id: ARROW . IDENTIFIER
  210 method_invoke: IDENTIFIER ARROW . func_invoke

    INVOKE      shift, and go to state 73
    IDENTIFIER  shift, and go to state 207

    func_invoke  go to state 208


State 139

   88 assignment_statement: IDENTIFIER EQ . RHS

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 209
    func_invoke  go to state 119
    get_invoke   go to state 120


State 140

    5 expression_op: INCR .

    $default  reduce using rule 5 (expression_op)


State 141

    6 expression_op: DECR .

    $default  reduce using rule 6 (expression_op)


State 142

    3 expression_op: ASSN_MODULO .

    $default  reduce using rule 3 (expression_op)


State 143

    2 expression_op: ASSN_EXPONENT .

    $default  reduce using rule 2 (expression_op)


State 144

    1 expression_op: ASSN_DIV .

    $default  reduce using rule 1 (expression_op)


State 145

    4 expression_op: ASSN_MUL .

    $default  reduce using rule 4 (expression_op)


State 146

   89 expression_statement: IDENTIFIER expression_op . RHS

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 210
    func_invoke  go to state 119
    get_invoke   go to state 120


State 147

  199 access: IDENTIFIER id .
  201 id: id . ARROW IDENTIFIER
  211 method_invoke: IDENTIFIER id . ARROW func_invoke

    ARROW  shift, and go to state 211

    $default  reduce using rule 199 (access)


State 148

  160 func_statements: SCOPEOPEN func_statements . SCOPECLOSE func_statements

    SCOPECLOSE  shift, and go to state 212


State 149

  125 get_statement: NDEC IDENTIFIER . EQ get_invoke SEMICOLON

    EQ  shift, and go to state 213


State 150

  126 get_statement: ADEC IDENTIFIER . EQ get_invoke SEMICOLON

    EQ  shift, and go to state 214


State 151

   68 declaration: declarationStmt . SEMICOLON
   69            | declaration declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 215


State 152

  148 func_statements: declaration func_statements .

    $default  reduce using rule 148 (func_statements)


State 153

  149 func_statements: assignment_statement func_statements .

    $default  reduce using rule 149 (func_statements)


State 154

  150 func_statements: expression_statement func_statements .

    $default  reduce using rule 150 (func_statements)


State 155

  153 func_statements: loop func_statements .

    $default  reduce using rule 153 (func_statements)


State 156

  155 func_statements: conditional func_statements .

    $default  reduce using rule 155 (func_statements)


State 157

  102 when_statement: when_statement ELSE_WHEN . SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 216


State 158

  104 when_default: DEFAULT . SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 217


State 159

   98 conditional: when_statement when_default .

    $default  reduce using rule 98 (conditional)


State 160

  156 func_statements: analyze_syntax func_statements .

    $default  reduce using rule 156 (func_statements)


State 161

  152 func_statements: func_invoke func_statements .

    $default  reduce using rule 152 (func_statements)


State 162

  151 func_statements: task_invoke func_statements .

    $default  reduce using rule 151 (func_statements)


State 163

  161 func_statements: get_statement func_statements .

    $default  reduce using rule 161 (func_statements)


State 164

  159 func_statements: sleep func_statements .

    $default  reduce using rule 159 (func_statements)


State 165

  157 func_statements: input func_statements .

    $default  reduce using rule 157 (func_statements)


State 166

  154 func_statements: return_statement func_statements .

    $default  reduce using rule 154 (func_statements)


State 167

  158 func_statements: output func_statements .

    $default  reduce using rule 158 (func_statements)


State 168

  147 func_body: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 147 (func_body)


State 169

  163 func_statements: access func_statements .

    $default  reduce using rule 163 (func_statements)


State 170

  162 func_statements: method_invoke func_statements .

    $default  reduce using rule 162 (func_statements)


State 171

  144 func_args: func_args COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 218


State 172

  166 task: TASK IDENTIFIER COLON func_args $@6 . SCOPEOPEN taskscope SCOPECLOSE

    SCOPEOPEN  shift, and go to state 219


State 173

  205 attribute: simpleDatatype IDENTIFIER .

    $default  reduce using rule 205 (attribute)


State 174

  206 attribute: arrayDatatype IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE

    SQUAREOPEN  shift, and go to state 220


State 175

  209 method: func_decl . SCOPEOPEN method_body SCOPECLOSE

    SCOPEOPEN  shift, and go to state 221


State 176

  204 attributes: attributes attribute . SEMICOLON

    SEMICOLON  shift, and go to state 222


State 177

  202 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods . SCOPECLOSE
  208 methods: methods . method

    FUNC        shift, and go to state 6
    SCOPECLOSE  shift, and go to state 223

    func_decl  go to state 175
    method     go to state 224


State 178

  207 methods: method .

    $default  reduce using rule 207 (methods)


State 179

  203 attributes: attribute SEMICOLON .

    $default  reduce using rule 203 (attributes)


State 180

  144 func_args: func_args . COMMA IDENTIFIER
  146 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 171
    COLON  shift, and go to state 225


State 181

  145 func_decl: FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 226
    nonAtomicSimple      go to state 227
    nonAtomicArray       go to state 228


State 182

  124 get_invoke: GET ARROW . TIME

    TIME  shift, and go to state 229


State 183

   45 RHS: NEG ROUNDOPEN . RHS ROUNDCLOSE

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 230
    func_invoke  go to state 119
    get_invoke   go to state 120


State 184

   43 RHS: ROUNDOPEN RHS . all_ops next ROUNDCLOSE
   44    | ROUNDOPEN RHS . ROUNDCLOSE

    DIV         shift, and go to state 231
    ADD         shift, and go to state 232
    SUB         shift, and go to state 233
    MUL         shift, and go to state 234
    EXPONENT    shift, and go to state 235
    MODULO      shift, and go to state 236
    AND         shift, and go to state 237
    OR          shift, and go to state 238
    GT          shift, and go to state 239
    LT          shift, and go to state 240
    GTEQ        shift, and go to state 241
    LTEQ        shift, and go to state 242
    NOT_EQ      shift, and go to state 243
    EQUAL_TWO   shift, and go to state 244
    ROUNDCLOSE  shift, and go to state 245
    HASH        shift, and go to state 246

    comparison_op  go to state 247
    arithmetic_op  go to state 248
    logical_op     go to state 249
    all_ops        go to state 250


State 185

   81 simpleList: simpleList COMMA IDENTIFIER EQ . RHS

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 251
    func_invoke  go to state 119
    get_invoke   go to state 120


State 186

   86 dimlist: dimlist COMMA . INTEGERLITERAL

    INTEGERLITERAL  shift, and go to state 252


State 187

   82 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   84          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 253

    $default  reduce using rule 82 (arrayList)


State 188

   83 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   85          | arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 122

    dimlist  go to state 254


State 189

  100 when_statement: WHEN SQUAREOPEN RHS . SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 255


State 190

   97 while_loop: REPEAT SQUAREOPEN RHS . SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 256


State 191

   88 assignment_statement: IDENTIFIER . EQ RHS

    EQ  shift, and go to state 139


State 192

   91 both_assignment: declarationStmt .

    $default  reduce using rule 91 (both_assignment)


State 193

   90 both_assignment: assignment_statement .

    $default  reduce using rule 90 (both_assignment)


State 194

   95 for_loop: FOR SQUAREOPEN both_assignment . SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 257


State 195

  123 task_invoke: MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 258


State 196

  112 analyze_syntax: ANALYZE analyze_label COLON . analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 129
    IDENTIFIER     shift, and go to state 130

    analyze_label  go to state 259


State 197

  127 sleep: SLEEP ROUNDOPEN FLOATLITERAL . ROUNDCLOSE SEMICOLON

    ROUNDCLOSE  shift, and go to state 260


State 198

  136 return_statement: RETURN RHS SEMICOLON .

    $default  reduce using rule 136 (return_statement)


State 199

  119 func_invoke: INVOKE IDENTIFIER COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 261
    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 262
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 263
    RHS          go to state 264
    is           go to state 265
    func_invoke  go to state 266
    arguments    go to state 267
    get_invoke   go to state 120


State 200

  128 file_name: ARROW STRINGLITERAL .

    $default  reduce using rule 128 (file_name)


State 201

  129 file_name: ARROW IDENTIFIER .

    $default  reduce using rule 129 (file_name)


State 202

  131 input: IP file_name COLON . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 268


State 203

  134 stringvalues: STRINGLITERAL .

    $default  reduce using rule 134 (stringvalues)


State 204

  135 stringvalues: IDENTIFIER .

    $default  reduce using rule 135 (stringvalues)


State 205

  138 opstring: stringvalues . nextop

    HASH  shift, and go to state 269

    $default  reduce using rule 140 (nextop)

    nextop  go to state 270


State 206

  137 output: OP COLON opstring . file_name SEMICOLON

    ARROW  shift, and go to state 135

    $default  reduce using rule 130 (file_name)

    file_name  go to state 271


State 207

  200 id: ARROW IDENTIFIER .

    $default  reduce using rule 200 (id)


State 208

  210 method_invoke: IDENTIFIER ARROW func_invoke .

    $default  reduce using rule 210 (method_invoke)


State 209

   88 assignment_statement: IDENTIFIER EQ RHS .

    $default  reduce using rule 88 (assignment_statement)


State 210

   89 expression_statement: IDENTIFIER expression_op RHS .

    $default  reduce using rule 89 (expression_statement)


State 211

  201 id: id ARROW . IDENTIFIER
  211 method_invoke: IDENTIFIER id ARROW . func_invoke

    INVOKE      shift, and go to state 73
    IDENTIFIER  shift, and go to state 272

    func_invoke  go to state 273


State 212

  160 func_statements: SCOPEOPEN func_statements SCOPECLOSE . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    loop                  go to state 83
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 86
    when_statement        go to state 87
    analyze_syntax        go to state 88
    func_invoke           go to state 89
    task_invoke           go to state 90
    get_statement         go to state 91
    sleep                 go to state 92
    input                 go to state 93
    return_statement      go to state 94
    output                go to state 95
    func_statements       go to state 274
    access                go to state 97
    method_invoke         go to state 98


State 213

  125 get_statement: NDEC IDENTIFIER EQ . get_invoke SEMICOLON

    GET  shift, and go to state 107

    get_invoke  go to state 275


State 214

  126 get_statement: ADEC IDENTIFIER EQ . get_invoke SEMICOLON

    GET  shift, and go to state 107

    get_invoke  go to state 276


State 215

   68 declaration: declarationStmt SEMICOLON .
   69            | declaration declarationStmt SEMICOLON .

    WHEN           reduce using rule 68 (declaration)
    WHEN           [reduce using rule 69 (declaration)]
    REPEAT         reduce using rule 68 (declaration)
    REPEAT         [reduce using rule 69 (declaration)]
    FOR            reduce using rule 68 (declaration)
    FOR            [reduce using rule 69 (declaration)]
    MAKE_PARALLEL  reduce using rule 68 (declaration)
    MAKE_PARALLEL  [reduce using rule 69 (declaration)]
    ANALYZE        reduce using rule 68 (declaration)
    ANALYZE        [reduce using rule 69 (declaration)]
    SLEEP          reduce using rule 68 (declaration)
    SLEEP          [reduce using rule 69 (declaration)]
    RETURN         reduce using rule 68 (declaration)
    RETURN         [reduce using rule 69 (declaration)]
    ATOMIC         reduce using rule 68 (declaration)
    ATOMIC         [reduce using rule 69 (declaration)]
    INVOKE         reduce using rule 68 (declaration)
    INVOKE         [reduce using rule 69 (declaration)]
    IP             reduce using rule 68 (declaration)
    IP             [reduce using rule 69 (declaration)]
    OP             reduce using rule 68 (declaration)
    OP             [reduce using rule 69 (declaration)]
    IDENTIFIER     reduce using rule 68 (declaration)
    IDENTIFIER     [reduce using rule 69 (declaration)]
    SCOPEOPEN      reduce using rule 68 (declaration)
    SCOPEOPEN      [reduce using rule 69 (declaration)]
    SCOPECLOSE     reduce using rule 68 (declaration)
    SCOPECLOSE     [reduce using rule 69 (declaration)]
    NNUM           reduce using rule 68 (declaration)
    NNUM           [reduce using rule 69 (declaration)]
    NDEC           reduce using rule 68 (declaration)
    NDEC           [reduce using rule 69 (declaration)]
    NBOOL          reduce using rule 68 (declaration)
    NBOOL          [reduce using rule 69 (declaration)]
    NLET           reduce using rule 68 (declaration)
    NLET           [reduce using rule 69 (declaration)]
    NTEXT          reduce using rule 68 (declaration)
    NTEXT          [reduce using rule 69 (declaration)]
    NVOID          reduce using rule 68 (declaration)
    NVOID          [reduce using rule 69 (declaration)]
    NARRNUM        reduce using rule 68 (declaration)
    NARRNUM        [reduce using rule 69 (declaration)]
    NARRDEC        reduce using rule 68 (declaration)
    NARRDEC        [reduce using rule 69 (declaration)]
    NARRBOOL       reduce using rule 68 (declaration)
    NARRBOOL       [reduce using rule 69 (declaration)]
    NARRLET        reduce using rule 68 (declaration)
    NARRLET        [reduce using rule 69 (declaration)]
    NARRTEXT       reduce using rule 68 (declaration)
    NARRTEXT       [reduce using rule 69 (declaration)]
    ANUM           reduce using rule 68 (declaration)
    ANUM           [reduce using rule 69 (declaration)]
    ADEC           reduce using rule 68 (declaration)
    ADEC           [reduce using rule 69 (declaration)]
    ABOOL          reduce using rule 68 (declaration)
    ABOOL          [reduce using rule 69 (declaration)]
    ALET           reduce using rule 68 (declaration)
    ALET           [reduce using rule 69 (declaration)]
    ATEXT          reduce using rule 68 (declaration)
    ATEXT          [reduce using rule 69 (declaration)]
    AARRNUM        reduce using rule 68 (declaration)
    AARRNUM        [reduce using rule 69 (declaration)]
    AARRDEC        reduce using rule 68 (declaration)
    AARRDEC        [reduce using rule 69 (declaration)]
    AARRBOOL       reduce using rule 68 (declaration)
    AARRBOOL       [reduce using rule 69 (declaration)]
    AARRLET        reduce using rule 68 (declaration)
    AARRLET        [reduce using rule 69 (declaration)]
    AARRTEXT       reduce using rule 68 (declaration)
    AARRTEXT       [reduce using rule 69 (declaration)]
    UDATATYPE      reduce using rule 68 (declaration)
    UDATATYPE      [reduce using rule 69 (declaration)]
    $default       reduce using rule 68 (declaration)


State 216

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN . RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 277
    func_invoke  go to state 119
    get_invoke   go to state 120


State 217

  104 when_default: DEFAULT SQUAREOPEN . RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 278
    func_invoke  go to state 119
    get_invoke   go to state 120


State 218

  144 func_args: func_args COMMA IDENTIFIER .

    $default  reduce using rule 144 (func_args)


State 219

  166 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN . taskscope SCOPECLOSE

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 291
    access                go to state 292
    method_invoke         go to state 293


State 220

  206 attribute: arrayDatatype IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 122

    dimlist  go to state 294


State 221

  209 method: func_decl SCOPEOPEN . method_body SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    IN             shift, and go to state 295
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    SEMICOLON      shift, and go to state 296
    COLON          shift, and go to state 297
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 298
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 299
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 300
    expression_statement  go to state 301
    loop                  go to state 302
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 303
    when_statement        go to state 87
    analyze_statement     go to state 304
    func_invoke           go to state 305
    task_invoke           go to state 306
    get_statement         go to state 307
    sleep                 go to state 308
    input                 go to state 309
    return_statement      go to state 310
    output                go to state 311
    access                go to state 312
    method_invoke         go to state 313
    in_statement          go to state 314
    method_statements     go to state 315
    method_body           go to state 316


State 222

  204 attributes: attributes attribute SEMICOLON .

    $default  reduce using rule 204 (attributes)


State 223

  202 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE .

    $default  reduce using rule 202 (type_declaration)


State 224

  208 methods: methods method .

    $default  reduce using rule 208 (methods)


State 225

  146 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 317
    nonAtomicSimple      go to state 227
    nonAtomicArray       go to state 228


State 226

  145 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 145 (func_decl)


State 227

   22 nonAtomic_datatypes: nonAtomicSimple .

    $default  reduce using rule 22 (nonAtomic_datatypes)


State 228

   21 nonAtomic_datatypes: nonAtomicArray .

    $default  reduce using rule 21 (nonAtomic_datatypes)


State 229

  124 get_invoke: GET ARROW TIME .

    $default  reduce using rule 124 (get_invoke)


State 230

   45 RHS: NEG ROUNDOPEN RHS . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 318


State 231

   16 arithmetic_op: DIV .

    $default  reduce using rule 16 (arithmetic_op)


State 232

   13 arithmetic_op: ADD .

    $default  reduce using rule 13 (arithmetic_op)


State 233

   14 arithmetic_op: SUB .

    $default  reduce using rule 14 (arithmetic_op)


State 234

   15 arithmetic_op: MUL .

    $default  reduce using rule 15 (arithmetic_op)


State 235

   18 arithmetic_op: EXPONENT .

    $default  reduce using rule 18 (arithmetic_op)


State 236

   17 arithmetic_op: MODULO .

    $default  reduce using rule 17 (arithmetic_op)


State 237

   19 logical_op: AND .

    $default  reduce using rule 19 (logical_op)


State 238

   20 logical_op: OR .

    $default  reduce using rule 20 (logical_op)


State 239

    8 comparison_op: GT .

    $default  reduce using rule 8 (comparison_op)


State 240

    7 comparison_op: LT .

    $default  reduce using rule 7 (comparison_op)


State 241

    9 comparison_op: GTEQ .

    $default  reduce using rule 9 (comparison_op)


State 242

   10 comparison_op: LTEQ .

    $default  reduce using rule 10 (comparison_op)


State 243

   11 comparison_op: NOT_EQ .

    $default  reduce using rule 11 (comparison_op)


State 244

   12 comparison_op: EQUAL_TWO .

    $default  reduce using rule 12 (comparison_op)


State 245

   44 RHS: ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 44 (RHS)


State 246

   33 all_ops: HASH .

    $default  reduce using rule 33 (all_ops)


State 247

   31 all_ops: comparison_op .

    $default  reduce using rule 31 (all_ops)


State 248

   30 all_ops: arithmetic_op .

    $default  reduce using rule 30 (all_ops)


State 249

   32 all_ops: logical_op .

    $default  reduce using rule 32 (all_ops)


State 250

   43 RHS: ROUNDOPEN RHS all_ops . next ROUNDCLOSE

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    next         go to state 319
    RHS          go to state 320
    func_invoke  go to state 119
    get_invoke   go to state 120


State 251

   81 simpleList: simpleList COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 81 (simpleList)


State 252

   86 dimlist: dimlist COMMA INTEGERLITERAL .

    $default  reduce using rule 86 (dimlist)


State 253

   84 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 321
    func_invoke  go to state 119
    get_invoke   go to state 120


State 254

   83 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   85          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   86 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 186
    SQUARECLOSE  shift, and go to state 322


State 255

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE . $@3 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 99 ($@3)

    $@3  go to state 323


State 256

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE . $@2 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 96 ($@2)

    $@2  go to state 324


State 257

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON . RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 325
    func_invoke  go to state 119
    get_invoke   go to state 120


State 258

  123 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 326


State 259

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label . COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 327


State 260

  127 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 328


State 261

  122 arguments: NULL_ARGS .

    $default  reduce using rule 122 (arguments)


State 262

   28 T: IDENTIFIER .
  115 is: IDENTIFIER .

    COMMA      reduce using rule 28 (T)
    COMMA      [reduce using rule 115 (is)]
    SEMICOLON  reduce using rule 28 (T)
    SEMICOLON  [reduce using rule 115 (is)]
    $default   reduce using rule 28 (T)


State 263

   41 RHS: constants .
  116 is: constants .

    COMMA      reduce using rule 41 (RHS)
    COMMA      [reduce using rule 116 (is)]
    SEMICOLON  reduce using rule 41 (RHS)
    SEMICOLON  [reduce using rule 116 (is)]
    $default   reduce using rule 41 (RHS)


State 264

  118 is: RHS .

    $default  reduce using rule 118 (is)


State 265

  120 arguments: is .

    $default  reduce using rule 120 (arguments)


State 266

   29 T: func_invoke .
  117 is: func_invoke .

    COMMA      reduce using rule 29 (T)
    COMMA      [reduce using rule 117 (is)]
    SEMICOLON  reduce using rule 29 (T)
    SEMICOLON  [reduce using rule 117 (is)]
    $default   reduce using rule 29 (T)


State 267

  119 func_invoke: INVOKE IDENTIFIER COLON arguments . SEMICOLON
  121 arguments: arguments . COMMA is

    COMMA      shift, and go to state 329
    SEMICOLON  shift, and go to state 330


State 268

  131 input: IP file_name COLON IDENTIFIER . nextip

    COMMA      shift, and go to state 331
    SEMICOLON  shift, and go to state 332

    nextip  go to state 333


State 269

  139 nextop: HASH . stringvalues nextop

    STRINGLITERAL  shift, and go to state 203
    IDENTIFIER     shift, and go to state 204

    stringvalues  go to state 334


State 270

  138 opstring: stringvalues nextop .

    $default  reduce using rule 138 (opstring)


State 271

  137 output: OP COLON opstring file_name . SEMICOLON

    SEMICOLON  shift, and go to state 335


State 272

  201 id: id ARROW IDENTIFIER .

    $default  reduce using rule 201 (id)


State 273

  211 method_invoke: IDENTIFIER id ARROW func_invoke .

    $default  reduce using rule 211 (method_invoke)


State 274

  160 func_statements: SCOPEOPEN func_statements SCOPECLOSE func_statements .

    $default  reduce using rule 160 (func_statements)


State 275

  125 get_statement: NDEC IDENTIFIER EQ get_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 336


State 276

  126 get_statement: ADEC IDENTIFIER EQ get_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 337


State 277

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS . SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 338


State 278

  104 when_default: DEFAULT SQUAREOPEN RHS . SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 339


State 279

  177 taskscope: SCOPEOPEN . taskscope SCOPECLOSE taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 340
    access                go to state 292
    method_invoke         go to state 293


State 280

   47 nonAtomicSimple: NNUM .
  167 tid_expr: NNUM . IDENTIFIER EQ TID SEMICOLON

    IDENTIFIER  shift, and go to state 341

    IDENTIFIER  [reduce using rule 47 (nonAtomicSimple)]


State 281

   53 atomicSimple: ANUM .
  168 tid_expr: ANUM . IDENTIFIER EQ TID SEMICOLON

    IDENTIFIER  shift, and go to state 342

    IDENTIFIER  [reduce using rule 53 (atomicSimple)]


State 282

   69 declaration: declaration . declarationStmt SEMICOLON
  169 taskscope: declaration . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 151
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 343
    access                go to state 292
    method_invoke         go to state 293


State 283

  170 taskscope: assignment_statement . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 344
    access                go to state 292
    method_invoke         go to state 293


State 284

  171 taskscope: expression_statement . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 345
    access                go to state 292
    method_invoke         go to state 293


State 285

  173 taskscope: loop . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 346
    access                go to state 292
    method_invoke         go to state 293


State 286

  172 taskscope: conditional . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 347
    access                go to state 292
    method_invoke         go to state 293


State 287

  174 taskscope: func_invoke . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 348
    access                go to state 292
    method_invoke         go to state 293


State 288

  178 taskscope: sleep . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 349
    access                go to state 292
    method_invoke         go to state 293


State 289

  175 taskscope: output . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 350
    access                go to state 292
    method_invoke         go to state 293


State 290

  176 taskscope: tid_expr . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 351
    access                go to state 292
    method_invoke         go to state 293


State 291

  166 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 352


State 292

  180 taskscope: access .

    $default  reduce using rule 180 (taskscope)


State 293

  179 taskscope: method_invoke .

    $default  reduce using rule 179 (taskscope)


State 294

   86 dimlist: dimlist . COMMA INTEGERLITERAL
  206 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE

    COMMA        shift, and go to state 186
    SQUARECLOSE  shift, and go to state 353


State 295

  212 in_statement: IN . ARROW IDENTIFIER SEMICOLON
  213             | IN . ARROW func_invoke

    ARROW  shift, and go to state 354


State 296

  114 analyze_statement: SEMICOLON .

    $default  reduce using rule 114 (analyze_statement)


State 297

  113 analyze_statement: COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 355
    NARRDEC  shift, and go to state 356
    AARRNUM  shift, and go to state 357
    AARRDEC  shift, and go to state 358

    analysis_arrays  go to state 359


State 298

  226 method_statements: SCOPEOPEN . method_statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    IN             shift, and go to state 295
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    SEMICOLON      shift, and go to state 296
    COLON          shift, and go to state 297
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 298
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 299
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 300
    expression_statement  go to state 301
    loop                  go to state 302
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 303
    when_statement        go to state 87
    analyze_statement     go to state 304
    func_invoke           go to state 305
    task_invoke           go to state 306
    get_statement         go to state 307
    sleep                 go to state 308
    input                 go to state 309
    return_statement      go to state 310
    output                go to state 311
    access                go to state 312
    method_invoke         go to state 313
    in_statement          go to state 314
    method_statements     go to state 360


State 299

   69 declaration: declaration . declarationStmt SEMICOLON
  214 method_statements: declaration .

    ATOMIC     shift, and go to state 47
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    ATOMIC     [reduce using rule 214 (method_statements)]
    NNUM       [reduce using rule 214 (method_statements)]
    NDEC       [reduce using rule 214 (method_statements)]
    NBOOL      [reduce using rule 214 (method_statements)]
    NLET       [reduce using rule 214 (method_statements)]
    NTEXT      [reduce using rule 214 (method_statements)]
    NVOID      [reduce using rule 214 (method_statements)]
    NARRNUM    [reduce using rule 214 (method_statements)]
    NARRDEC    [reduce using rule 214 (method_statements)]
    NARRBOOL   [reduce using rule 214 (method_statements)]
    NARRLET    [reduce using rule 214 (method_statements)]
    NARRTEXT   [reduce using rule 214 (method_statements)]
    ANUM       [reduce using rule 214 (method_statements)]
    ADEC       [reduce using rule 214 (method_statements)]
    ABOOL      [reduce using rule 214 (method_statements)]
    ALET       [reduce using rule 214 (method_statements)]
    ATEXT      [reduce using rule 214 (method_statements)]
    AARRNUM    [reduce using rule 214 (method_statements)]
    AARRDEC    [reduce using rule 214 (method_statements)]
    AARRBOOL   [reduce using rule 214 (method_statements)]
    AARRLET    [reduce using rule 214 (method_statements)]
    AARRTEXT   [reduce using rule 214 (method_statements)]
    UDATATYPE  [reduce using rule 214 (method_statements)]
    $default   reduce using rule 214 (method_statements)

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 34
    arrayDatatype    go to state 35
    declarationStmt  go to state 48


State 300

  215 method_statements: assignment_statement .

    $default  reduce using rule 215 (method_statements)


State 301

  216 method_statements: expression_statement .

    $default  reduce using rule 216 (method_statements)


State 302

  219 method_statements: loop .

    $default  reduce using rule 219 (method_statements)


State 303

  221 method_statements: conditional .

    $default  reduce using rule 221 (method_statements)


State 304

  222 method_statements: analyze_statement .

    $default  reduce using rule 222 (method_statements)


State 305

  218 method_statements: func_invoke .

    $default  reduce using rule 218 (method_statements)


State 306

  217 method_statements: task_invoke .

    $default  reduce using rule 217 (method_statements)


State 307

  227 method_statements: get_statement .

    $default  reduce using rule 227 (method_statements)


State 308

  225 method_statements: sleep .

    $default  reduce using rule 225 (method_statements)


State 309

  223 method_statements: input .

    $default  reduce using rule 223 (method_statements)


State 310

  220 method_statements: return_statement .

    $default  reduce using rule 220 (method_statements)


State 311

  224 method_statements: output .

    $default  reduce using rule 224 (method_statements)


State 312

  230 method_statements: access .

    $default  reduce using rule 230 (method_statements)


State 313

  229 method_statements: method_invoke .

    $default  reduce using rule 229 (method_statements)


State 314

  228 method_statements: in_statement .

    $default  reduce using rule 228 (method_statements)


State 315

  231 method_body: method_statements .

    $default  reduce using rule 231 (method_body)


State 316

  209 method: func_decl SCOPEOPEN method_body . SCOPECLOSE
  232 method_body: method_body . method_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    IN             shift, and go to state 295
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    SEMICOLON      shift, and go to state 296
    COLON          shift, and go to state 297
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 298
    SCOPECLOSE     shift, and go to state 361
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 299
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 300
    expression_statement  go to state 301
    loop                  go to state 302
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 303
    when_statement        go to state 87
    analyze_statement     go to state 304
    func_invoke           go to state 305
    task_invoke           go to state 306
    get_statement         go to state 307
    sleep                 go to state 308
    input                 go to state 309
    return_statement      go to state 310
    output                go to state 311
    access                go to state 312
    method_invoke         go to state 313
    in_statement          go to state 314
    method_statements     go to state 362


State 317

  146 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 146 (atomic_func_decl)


State 318

   45 RHS: NEG ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 45 (RHS)


State 319

   43 RHS: ROUNDOPEN RHS all_ops next . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 363


State 320

   39 next: RHS . all_ops next
   40     | RHS .

    DIV        shift, and go to state 231
    ADD        shift, and go to state 232
    SUB        shift, and go to state 233
    MUL        shift, and go to state 234
    EXPONENT   shift, and go to state 235
    MODULO     shift, and go to state 236
    AND        shift, and go to state 237
    OR         shift, and go to state 238
    GT         shift, and go to state 239
    LT         shift, and go to state 240
    GTEQ       shift, and go to state 241
    LTEQ       shift, and go to state 242
    NOT_EQ     shift, and go to state 243
    EQUAL_TWO  shift, and go to state 244
    HASH       shift, and go to state 246

    $default  reduce using rule 40 (next)

    comparison_op  go to state 247
    arithmetic_op  go to state 248
    logical_op     go to state 249
    all_ops        go to state 364


State 321

   84 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 84 (arrayList)


State 322

   83 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   85          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 365

    $default  reduce using rule 83 (arrayList)


State 323

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 366


State 324

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 367


State 325

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS . SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 368


State 326

  123 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 369


State 327

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON . analysis_arrays COLON analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 355
    NARRDEC  shift, and go to state 356
    AARRNUM  shift, and go to state 357
    AARRDEC  shift, and go to state 358

    analysis_arrays  go to state 370


State 328

  127 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON .

    $default  reduce using rule 127 (sleep)


State 329

  121 arguments: arguments COMMA . is

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 262
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 263
    RHS          go to state 264
    is           go to state 371
    func_invoke  go to state 266
    get_invoke   go to state 120


State 330

  119 func_invoke: INVOKE IDENTIFIER COLON arguments SEMICOLON .

    $default  reduce using rule 119 (func_invoke)


State 331

  132 nextip: COMMA . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 372


State 332

  133 nextip: SEMICOLON .

    $default  reduce using rule 133 (nextip)


State 333

  131 input: IP file_name COLON IDENTIFIER nextip .

    $default  reduce using rule 131 (input)


State 334

  139 nextop: HASH stringvalues . nextop

    HASH  shift, and go to state 269

    $default  reduce using rule 140 (nextop)

    nextop  go to state 373


State 335

  137 output: OP COLON opstring file_name SEMICOLON .

    $default  reduce using rule 137 (output)


State 336

  125 get_statement: NDEC IDENTIFIER EQ get_invoke SEMICOLON .

    $default  reduce using rule 125 (get_statement)


State 337

  126 get_statement: ADEC IDENTIFIER EQ get_invoke SEMICOLON .

    $default  reduce using rule 126 (get_statement)


State 338

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE . $@4 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 101 ($@4)

    $@4  go to state 374


State 339

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE . $@5 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 103 ($@5)

    $@5  go to state 375


State 340

  177 taskscope: SCOPEOPEN taskscope . SCOPECLOSE taskscope

    SCOPECLOSE  shift, and go to state 376


State 341

  167 tid_expr: NNUM IDENTIFIER . EQ TID SEMICOLON

    EQ  shift, and go to state 377


State 342

  168 tid_expr: ANUM IDENTIFIER . EQ TID SEMICOLON

    EQ  shift, and go to state 378


State 343

  169 taskscope: declaration taskscope .

    $default  reduce using rule 169 (taskscope)


State 344

  170 taskscope: assignment_statement taskscope .

    $default  reduce using rule 170 (taskscope)


State 345

  171 taskscope: expression_statement taskscope .

    $default  reduce using rule 171 (taskscope)


State 346

  173 taskscope: loop taskscope .

    $default  reduce using rule 173 (taskscope)


State 347

  172 taskscope: conditional taskscope .

    $default  reduce using rule 172 (taskscope)


State 348

  174 taskscope: func_invoke taskscope .

    $default  reduce using rule 174 (taskscope)


State 349

  178 taskscope: sleep taskscope .

    $default  reduce using rule 178 (taskscope)


State 350

  175 taskscope: output taskscope .

    $default  reduce using rule 175 (taskscope)


State 351

  176 taskscope: tid_expr taskscope .

    $default  reduce using rule 176 (taskscope)


State 352

  166 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE .

    $default  reduce using rule 166 (task)


State 353

  206 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .

    $default  reduce using rule 206 (attribute)


State 354

  212 in_statement: IN ARROW . IDENTIFIER SEMICOLON
  213             | IN ARROW . func_invoke

    INVOKE      shift, and go to state 73
    IDENTIFIER  shift, and go to state 379

    func_invoke  go to state 380


State 355

  107 analysis_arrays: NARRNUM .

    $default  reduce using rule 107 (analysis_arrays)


State 356

  106 analysis_arrays: NARRDEC .

    $default  reduce using rule 106 (analysis_arrays)


State 357

  109 analysis_arrays: AARRNUM .

    $default  reduce using rule 109 (analysis_arrays)


State 358

  108 analysis_arrays: AARRDEC .

    $default  reduce using rule 108 (analysis_arrays)


State 359

  113 analyze_statement: COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 296
    COLON      shift, and go to state 297

    analyze_statement  go to state 381


State 360

  226 method_statements: SCOPEOPEN method_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 382


State 361

  209 method: func_decl SCOPEOPEN method_body SCOPECLOSE .

    $default  reduce using rule 209 (method)


State 362

  232 method_body: method_body method_statements .

    $default  reduce using rule 232 (method_body)


State 363

   43 RHS: ROUNDOPEN RHS all_ops next ROUNDCLOSE .

    $default  reduce using rule 43 (RHS)


State 364

   39 next: RHS all_ops . next

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    next         go to state 383
    RHS          go to state 320
    func_invoke  go to state 119
    get_invoke   go to state 120


State 365

   85 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 117
    RHS          go to state 384
    func_invoke  go to state 119
    get_invoke   go to state 120


State 366

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 400
    access                go to state 401
    method_invoke         go to state 402


State 367

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 403
    access                go to state 401
    method_invoke         go to state 402


State 368

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON . expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    IDENTIFIER  shift, and go to state 404

    expression_statement  go to state 405


State 369

  123 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON arguments SEMICOLON

    COLON  shift, and go to state 406


State 370

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays . COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 407


State 371

  121 arguments: arguments COMMA is .

    $default  reduce using rule 121 (arguments)


State 372

  132 nextip: COMMA IDENTIFIER . nextip

    COMMA      shift, and go to state 331
    SEMICOLON  shift, and go to state 332

    nextip  go to state 408


State 373

  139 nextop: HASH stringvalues nextop .

    $default  reduce using rule 139 (nextop)


State 374

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 409


State 375

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 410


State 376

  177 taskscope: SCOPEOPEN taskscope SCOPECLOSE . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 279
    NNUM        shift, and go to state 280
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 281
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 282
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 283
    expression_statement  go to state 284
    loop                  go to state 285
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 286
    when_statement        go to state 87
    func_invoke           go to state 287
    sleep                 go to state 288
    output                go to state 289
    tid_expr              go to state 290
    taskscope             go to state 411
    access                go to state 292
    method_invoke         go to state 293


State 377

  167 tid_expr: NNUM IDENTIFIER EQ . TID SEMICOLON

    TID  shift, and go to state 412


State 378

  168 tid_expr: ANUM IDENTIFIER EQ . TID SEMICOLON

    TID  shift, and go to state 413


State 379

  212 in_statement: IN ARROW IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 414


State 380

  213 in_statement: IN ARROW func_invoke .

    $default  reduce using rule 213 (in_statement)


State 381

  113 analyze_statement: COLON analysis_arrays analyze_statement .

    $default  reduce using rule 113 (analyze_statement)


State 382

  226 method_statements: SCOPEOPEN method_statements SCOPECLOSE .

    $default  reduce using rule 226 (method_statements)


State 383

   39 next: RHS all_ops next .

    $default  reduce using rule 39 (next)


State 384

   85 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 85 (arrayList)


State 385

  192 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 415


State 386

  193 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 416


State 387

   69 declaration: declaration . declarationStmt SEMICOLON
  181 statement: declaration .

    ATOMIC     shift, and go to state 47
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    ATOMIC     [reduce using rule 181 (statement)]
    NNUM       [reduce using rule 181 (statement)]
    NDEC       [reduce using rule 181 (statement)]
    NBOOL      [reduce using rule 181 (statement)]
    NLET       [reduce using rule 181 (statement)]
    NTEXT      [reduce using rule 181 (statement)]
    NVOID      [reduce using rule 181 (statement)]
    NARRNUM    [reduce using rule 181 (statement)]
    NARRDEC    [reduce using rule 181 (statement)]
    NARRBOOL   [reduce using rule 181 (statement)]
    NARRLET    [reduce using rule 181 (statement)]
    NARRTEXT   [reduce using rule 181 (statement)]
    ANUM       [reduce using rule 181 (statement)]
    ADEC       [reduce using rule 181 (statement)]
    ABOOL      [reduce using rule 181 (statement)]
    ALET       [reduce using rule 181 (statement)]
    ATEXT      [reduce using rule 181 (statement)]
    AARRNUM    [reduce using rule 181 (statement)]
    AARRDEC    [reduce using rule 181 (statement)]
    AARRBOOL   [reduce using rule 181 (statement)]
    AARRLET    [reduce using rule 181 (statement)]
    AARRTEXT   [reduce using rule 181 (statement)]
    UDATATYPE  [reduce using rule 181 (statement)]
    $default   reduce using rule 181 (statement)

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 34
    arrayDatatype    go to state 35
    declarationStmt  go to state 48


State 388

  182 statement: assignment_statement .

    $default  reduce using rule 182 (statement)


State 389

  183 statement: expression_statement .

    $default  reduce using rule 183 (statement)


State 390

  185 statement: loop .

    $default  reduce using rule 185 (statement)


State 391

  184 statement: conditional .

    $default  reduce using rule 184 (statement)


State 392

  189 statement: analyze_syntax .

    $default  reduce using rule 189 (statement)


State 393

  187 statement: func_invoke .

    $default  reduce using rule 187 (statement)


State 394

  188 statement: task_invoke .

    $default  reduce using rule 188 (statement)


State 395

  191 statement: sleep .

    $default  reduce using rule 191 (statement)


State 396

  194 statement: input .

    $default  reduce using rule 194 (statement)


State 397

  186 statement: return_statement .

    $default  reduce using rule 186 (statement)


State 398

  190 statement: output .

    $default  reduce using rule 190 (statement)


State 399

  197 statements: statement .

    $default  reduce using rule 197 (statements)


State 400

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements . SCOPECLOSE
  198 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 417
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 418
    access                go to state 401
    method_invoke         go to state 402


State 401

  196 statement: access .

    $default  reduce using rule 196 (statement)


State 402

  195 statement: method_invoke .

    $default  reduce using rule 195 (statement)


State 403

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements . SCOPECLOSE
  198 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 419
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 418
    access                go to state 401
    method_invoke         go to state 402


State 404

   89 expression_statement: IDENTIFIER . expression_op RHS

    INCR           shift, and go to state 140
    DECR           shift, and go to state 141
    ASSN_MODULO    shift, and go to state 142
    ASSN_EXPONENT  shift, and go to state 143
    ASSN_DIV       shift, and go to state 144
    ASSN_MUL       shift, and go to state 145

    expression_op  go to state 146


State 405

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement . SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 420


State 406

  123 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 261
    GET               shift, and go to state 107
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 108
    INTEGERLITERAL    shift, and go to state 109
    STRINGLITERAL     shift, and go to state 110
    CHARACTERLITERAL  shift, and go to state 111
    BOOLEANLITERAL    shift, and go to state 112
    FLOATLITERAL      shift, and go to state 113
    IDENTIFIER        shift, and go to state 262
    ROUNDOPEN         shift, and go to state 115

    T            go to state 116
    constants    go to state 263
    RHS          go to state 264
    is           go to state 265
    func_invoke  go to state 266
    arguments    go to state 421
    get_invoke   go to state 120


State 407

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 355
    NARRDEC  shift, and go to state 356
    AARRNUM  shift, and go to state 357
    AARRDEC  shift, and go to state 358

    analysis_arrays  go to state 422


State 408

  132 nextip: COMMA IDENTIFIER nextip .

    $default  reduce using rule 132 (nextip)


State 409

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 423
    access                go to state 401
    method_invoke         go to state 402


State 410

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 424
    access                go to state 401
    method_invoke         go to state 402


State 411

  177 taskscope: SCOPEOPEN taskscope SCOPECLOSE taskscope .

    $default  reduce using rule 177 (taskscope)


State 412

  167 tid_expr: NNUM IDENTIFIER EQ TID . SEMICOLON

    SEMICOLON  shift, and go to state 425


State 413

  168 tid_expr: ANUM IDENTIFIER EQ TID . SEMICOLON

    SEMICOLON  shift, and go to state 426


State 414

  212 in_statement: IN ARROW IDENTIFIER SEMICOLON .

    $default  reduce using rule 212 (in_statement)


State 415

  192 statement: BREAK SEMICOLON .

    $default  reduce using rule 192 (statement)


State 416

  193 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 193 (statement)


State 417

  100 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 100 (when_statement)


State 418

  198 statements: statements statement .

    $default  reduce using rule 198 (statements)


State 419

   97 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 97 (while_loop)


State 420

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE . $@1 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 94 ($@1)

    $@1  go to state 427


State 421

  121 arguments: arguments . COMMA is
  123 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments . SEMICOLON

    COMMA      shift, and go to state 329
    SEMICOLON  shift, and go to state 428


State 422

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 296
    COLON      shift, and go to state 297

    analyze_statement  go to state 429


State 423

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements . SCOPECLOSE
  198 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 430
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 418
    access                go to state 401
    method_invoke         go to state 402


State 424

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements . SCOPECLOSE
  198 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 431
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 418
    access                go to state 401
    method_invoke         go to state 402


State 425

  167 tid_expr: NNUM IDENTIFIER EQ TID SEMICOLON .

    $default  reduce using rule 167 (tid_expr)


State 426

  168 tid_expr: ANUM IDENTIFIER EQ TID SEMICOLON .

    $default  reduce using rule 168 (tid_expr)


State 427

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 432


State 428

  123 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON .

    $default  reduce using rule 123 (task_invoke)


State 429

  112 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement .

    $default  reduce using rule 112 (analyze_syntax)


State 430

  102 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 102 (when_statement)


State 431

  104 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 104 (when_default)


State 432

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 433
    access                go to state 401
    method_invoke         go to state 402


State 433

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements . SCOPECLOSE
  198 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 385
    CONTINUE       shift, and go to state 386
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 434
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 387
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 388
    expression_statement  go to state 389
    loop                  go to state 390
    for_loop              go to state 84
    while_loop            go to state 85
    conditional           go to state 391
    when_statement        go to state 87
    analyze_syntax        go to state 392
    func_invoke           go to state 393
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 418
    access                go to state 401
    method_invoke         go to state 402


State 434

   95 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 95 (for_loop)
