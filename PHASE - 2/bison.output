Terminals unused in grammar

    START
    LEXERROR


State 199 conflicts: 1 shift/reduce
State 254 conflicts: 1 shift/reduce
State 260 conflicts: 1 shift/reduce


Grammar

    0 $accept: begin $end

    1 all_datatypes: UDATATYPE
    2              | AUDATATYPE
    3              | NBOOL
    4              | NDEC
    5              | NNUM
    6              | NTEXT
    7              | NLET
    8              | ABOOL
    9              | ADEC
   10              | ALET
   11              | ATEXT
   12              | ANUM

   13 expression_op: ASSN_DIV
   14              | ASSN_EXPONENT
   15              | ASSN_MODULO
   16              | ASSN_MUL
   17              | INCR
   18              | DECR

   19 comparison_op: LT
   20              | GT
   21              | GTEQ
   22              | LTEQ
   23              | NOT_EQ
   24              | EQUAL_TWO

   25 arithmetic_op: ADD
   26              | SUB
   27              | MUL
   28              | DIV
   29              | MODULO
   30              | EXPONENT

   31 logical_op: AND
   32           | OR

   33 nonAtomic_datatypes: nonAtomicArray
   34                    | nonAtomicSimple

   35 begin: %empty
   36      | begin declaration
   37      | begin function
   38      | begin task
   39      | begin type_declaration

   40 T: IDENTIFIER
   41  | func_invoke

   42 all_ops: arithmetic_op
   43        | comparison_op
   44        | logical_op
   45        | HASH

   46 constants: INTEGERLITERAL
   47          | CHARACTERLITERAL
   48          | FLOATLITERAL
   49          | BOOLEANLITERAL
   50          | STRINGLITERAL

   51 next: RHS all_ops next
   52     | RHS

   53 RHS: constants
   54    | T
   55    | TID
   56    | get_invoke
   57    | ROUNDOPEN RHS all_ops next ROUNDCLOSE
   58    | ROUNDOPEN RHS ROUNDCLOSE
   59    | NEG ROUNDOPEN RHS ROUNDCLOSE

   60 nonAtomicSimple: NNUM
   61                | NDEC
   62                | NBOOL
   63                | NLET
   64                | NTEXT
   65                | NVOID

   66 atomicSimple: ANUM
   67             | ADEC
   68             | ABOOL
   69             | ALET
   70             | ATEXT

   71 nonAtomicArray: NARRNUM
   72               | NARRDEC
   73               | NARRBOOL
   74               | NARRLET
   75               | NARRTEXT

   76 atomicArray: AARRNUM
   77            | AARRDEC
   78            | AARRBOOL
   79            | AARRLET
   80            | AARRTEXT

   81 declaration: declarationStmt SEMICOLON

   82 simpleDatatype: nonAtomicSimple
   83               | atomicSimple
   84               | UDATATYPE
   85               | ATOMIC AUDATATYPE

   86 arrayDatatype: nonAtomicArray
   87              | atomicArray

   88 declarationStmt: simpleDatatype simpleList
   89                | arrayDatatype arrayList

   90 simpleList: IDENTIFIER
   91           | simpleList COMMA IDENTIFIER
   92           | IDENTIFIER EQ RHS
   93           | simpleList COMMA IDENTIFIER EQ RHS

   94 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   95          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   96          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS
   97          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

   98 dimlist: dimlist COMMA INTEGERLITERAL
   99        | INTEGERLITERAL

  100 assignment_statement: IDENTIFIER EQ RHS

  101 expression_statement: IDENTIFIER expression_op RHS

  102 log: assignment_statement SEMICOLON
  103    | expression_statement SEMICOLON

  104 both_assignment: assignment_statement
  105                | declarationStmt

  106 loop: for_loop
  107     | while_loop

  108 $@1: %empty

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

  110 $@2: %empty

  111 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

  112 conditional: when_statement when_default

  113 $@3: %empty

  114 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

  115 $@4: %empty

  116 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

  117 $@5: %empty

  118 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE
  119             | %empty

  120 analysis_arrays: NARRDEC
  121                | NARRNUM
  122                | AARRDEC
  123                | AARRNUM

  124 analyze_label: STRINGLITERAL
  125              | IDENTIFIER

  126 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

  127 analyze_statement: COLON analysis_arrays analyze_statement
  128                  | SEMICOLON

  129 is: RHS

  130 func_invoke2: func_invoke SEMICOLON

  131 func_invoke: INVOKE IDENTIFIER COLON arguments

  132 arguments: is
  133          | arguments COMMA is
  134          | NULL_ARGS

  135 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

  136 get_invoke: GET ARROW TIME

  137 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

  138 file_name: ARROW STRINGLITERAL
  139          | ARROW IDENTIFIER
  140          | %empty

  141 input: IP file_name COLON IDENTIFIER nextip

  142 nextip: COMMA IDENTIFIER nextip
  143       | SEMICOLON

  144 stringvalues: STRINGLITERAL
  145             | IDENTIFIER

  146 return_statement: RETURN RHS SEMICOLON

  147 output: OP COLON opstring file_name SEMICOLON

  148 opstring: stringvalues nextop

  149 nextop: HASH stringvalues nextop
  150       | %empty

  151 function: func_decl func_body
  152         | atomic_func_decl func_body

  153 func_args: all_datatypes IDENTIFIER
  154          | func_args COMMA all_datatypes IDENTIFIER

  155 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  156 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  157 func_body: SCOPEOPEN func_statements SCOPECLOSE

  158 func_scope: declaration
  159           | log
  160           | task_invoke
  161           | func_invoke2
  162           | loop
  163           | return_statement
  164           | conditional
  165           | analyze_syntax
  166           | input
  167           | output
  168           | sleep
  169           | SCOPEOPEN func_statements SCOPECLOSE
  170           | method_invoke
  171           | access

  172 func_statements: func_scope
  173                | func_statements func_scope

  174 $@6: %empty

  175 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

  176 taskscope: declaration taskscope
  177          | log taskscope
  178          | conditional taskscope
  179          | loop taskscope
  180          | func_invoke2 taskscope
  181          | output taskscope
  182          | SCOPEOPEN taskscope SCOPECLOSE taskscope
  183          | sleep taskscope
  184          | method_invoke
  185          | access

  186 statement: declaration
  187          | log
  188          | conditional
  189          | loop
  190          | return_statement
  191          | func_invoke2
  192          | task_invoke
  193          | analyze_syntax
  194          | output
  195          | sleep
  196          | BREAK SEMICOLON
  197          | CONTINUE SEMICOLON
  198          | input
  199          | method_invoke
  200          | access

  201 statements: statement
  202           | statements statement

  203 access: IDENTIFIER id

  204 id: ARROW IDENTIFIER
  205   | id ARROW IDENTIFIER

  206 $@7: %empty

  207 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE

  208 attributes: attribute SEMICOLON
  209           | attributes attribute SEMICOLON

  210 attribute: simpleDatatype IDENTIFIER
  211          | arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

  212 methods: method
  213        | methods method

  214 method: func_decl SCOPEOPEN method_body SCOPECLOSE

  215 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON arguments
  216              | IDENTIFIER id ARROW IDENTIFIER COLON arguments

  217 in_statement: IN ARROW IDENTIFIER SEMICOLON
  218             | IN ARROW IDENTIFIER COLON arguments

  219 method_statements: declaration
  220                  | log
  221                  | task_invoke
  222                  | func_invoke2
  223                  | loop
  224                  | return_statement
  225                  | conditional
  226                  | analyze_statement
  227                  | input
  228                  | output
  229                  | sleep
  230                  | SCOPEOPEN method_statements SCOPECLOSE
  231                  | in_statement
  232                  | method_invoke
  233                  | access

  234 method_body: method_statements
  235            | method_body method_statements


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN (258) 114
    REPEAT (259) 111
    ELSE_WHEN (260) 116
    DEFAULT (261) 118
    FOR (262) 109
    BREAK (263) 196
    CONTINUE (264) 197
    TASK (265) 175
    MAKE_PARALLEL (266) 135
    NULL_ARGS (267) 134
    TID (268) 55
    ANALYZE (269) 126
    GET (270) 136
    SLEEP (271) 137
    TIME (272) 136
    START (273)
    RETURN (274) 146
    TYPE (275) 207
    ATOMIC (276) 85 156
    IN (277) 217 218
    FUNC (278) 155 156
    INVOKE (279) 131
    IP (280) 141
    OP (281) 147
    DIV (282) 28
    ADD (283) 25
    SUB (284) 26
    MUL (285) 27
    EXPONENT (286) 30
    MODULO (287) 29
    ARROW (288) 136 138 139 204 205 215 216 217 218
    EQ (289) 92 93 96 97 100
    INCR (290) 17
    DECR (291) 18
    ASSN_MODULO (292) 15
    ASSN_EXPONENT (293) 14
    ASSN_DIV (294) 13
    ASSN_MUL (295) 16
    AND (296) 31
    OR (297) 32
    GT (298) 20
    LT (299) 19
    GTEQ (300) 21
    LTEQ (301) 22
    NOT_EQ (302) 23
    NEG (303) 59
    EQUAL_TWO (304) 24
    INTEGERLITERAL (305) 46 98 99 135
    STRINGLITERAL (306) 50 124 138 144
    CHARACTERLITERAL (307) 47
    BOOLEANLITERAL (308) 49
    FLOATLITERAL (309) 48 137
    COMMA (310) 91 93 95 97 98 133 142 154
    SEMICOLON (311) 81 102 103 109 128 130 135 137 143 146 147 196 197 208 209 217
    COLON (312) 126 127 131 135 141 147 155 156 175 215 216 218
    IDENTIFIER (313) 40 90 91 92 93 94 95 96 97 100 101 125 131 135 139 141 142 145 153 154 155 156 175 203 204 205 210 211 215 216 217 218
    SCOPEOPEN (314) 109 111 114 116 118 157 169 175 182 207 214 230
    SCOPECLOSE (315) 109 111 114 116 118 157 169 175 182 207 214 230
    ROUNDOPEN (316) 57 58 59 137
    ROUNDCLOSE (317) 57 58 59 137
    SQUAREOPEN (318) 94 95 96 97 109 111 114 116 118 211
    SQUARECLOSE (319) 94 95 96 97 109 111 114 116 118 211
    HASH (320) 45 149
    LEXERROR (321)
    NNUM (322) 5 60
    NDEC (323) 4 61
    NBOOL (324) 3 62
    NLET (325) 7 63
    NTEXT (326) 6 64
    NVOID (327) 65
    NARRNUM (328) 71 121
    NARRDEC (329) 72 120
    NARRBOOL (330) 73
    NARRLET (331) 74
    NARRTEXT (332) 75
    ANUM (333) 12 66
    ADEC (334) 9 67
    ABOOL (335) 8 68
    ALET (336) 10 69
    ATEXT (337) 11 70
    AARRNUM (338) 76 123
    AARRDEC (339) 77 122
    AARRBOOL (340) 78
    AARRLET (341) 79
    AARRTEXT (342) 80
    UDATATYPE (343) 1 84 207
    AUDATATYPE (344) 2 85


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    all_datatypes (91)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12
        on right: 153 154
    expression_op (92)
        on left: 13 14 15 16 17 18
        on right: 101
    comparison_op (93)
        on left: 19 20 21 22 23 24
        on right: 43
    arithmetic_op (94)
        on left: 25 26 27 28 29 30
        on right: 42
    logical_op (95)
        on left: 31 32
        on right: 44
    nonAtomic_datatypes (96)
        on left: 33 34
        on right: 155 156
    begin (97)
        on left: 35 36 37 38 39
        on right: 0 36 37 38 39
    T (98)
        on left: 40 41
        on right: 54
    all_ops (99)
        on left: 42 43 44 45
        on right: 51 57
    constants (100)
        on left: 46 47 48 49 50
        on right: 53
    next (101)
        on left: 51 52
        on right: 51 57
    RHS (102)
        on left: 53 54 55 56 57 58 59
        on right: 51 52 57 58 59 92 93 96 97 100 101 109 111 114 116 118 129 146
    nonAtomicSimple (103)
        on left: 60 61 62 63 64 65
        on right: 34 82
    atomicSimple (104)
        on left: 66 67 68 69 70
        on right: 83
    nonAtomicArray (105)
        on left: 71 72 73 74 75
        on right: 33 86
    atomicArray (106)
        on left: 76 77 78 79 80
        on right: 87
    declaration (107)
        on left: 81
        on right: 36 158 176 186 219
    simpleDatatype (108)
        on left: 82 83 84 85
        on right: 88 210
    arrayDatatype (109)
        on left: 86 87
        on right: 89 211
    declarationStmt (110)
        on left: 88 89
        on right: 81 105
    simpleList (111)
        on left: 90 91 92 93
        on right: 88 91 93
    arrayList (112)
        on left: 94 95 96 97
        on right: 89 95 97
    dimlist (113)
        on left: 98 99
        on right: 94 95 96 97 98 211
    assignment_statement (114)
        on left: 100
        on right: 102 104
    expression_statement (115)
        on left: 101
        on right: 103 109
    log (116)
        on left: 102 103
        on right: 159 177 187 220
    both_assignment (117)
        on left: 104 105
        on right: 109
    loop (118)
        on left: 106 107
        on right: 162 179 189 223
    for_loop (119)
        on left: 109
        on right: 106
    $@1 (120)
        on left: 108
        on right: 109
    while_loop (121)
        on left: 111
        on right: 107
    $@2 (122)
        on left: 110
        on right: 111
    conditional (123)
        on left: 112
        on right: 164 178 188 225
    when_statement (124)
        on left: 114 116
        on right: 112 116
    $@3 (125)
        on left: 113
        on right: 114
    $@4 (126)
        on left: 115
        on right: 116
    when_default (127)
        on left: 118 119
        on right: 112
    $@5 (128)
        on left: 117
        on right: 118
    analysis_arrays (129)
        on left: 120 121 122 123
        on right: 126 127
    analyze_label (130)
        on left: 124 125
        on right: 126
    analyze_syntax (131)
        on left: 126
        on right: 165 193
    analyze_statement (132)
        on left: 127 128
        on right: 126 127 226
    is (133)
        on left: 129
        on right: 132 133
    func_invoke2 (134)
        on left: 130
        on right: 161 180 191 222
    func_invoke (135)
        on left: 131
        on right: 41 130
    arguments (136)
        on left: 132 133 134
        on right: 131 133 135 215 216 218
    task_invoke (137)
        on left: 135
        on right: 160 192 221
    get_invoke (138)
        on left: 136
        on right: 56
    sleep (139)
        on left: 137
        on right: 168 183 195 229
    file_name (140)
        on left: 138 139 140
        on right: 141 147
    input (141)
        on left: 141
        on right: 166 198 227
    nextip (142)
        on left: 142 143
        on right: 141 142
    stringvalues (143)
        on left: 144 145
        on right: 148 149
    return_statement (144)
        on left: 146
        on right: 163 190 224
    output (145)
        on left: 147
        on right: 167 181 194 228
    opstring (146)
        on left: 148
        on right: 147
    nextop (147)
        on left: 149 150
        on right: 148 149
    function (148)
        on left: 151 152
        on right: 37
    func_args (149)
        on left: 153 154
        on right: 154 155 156 175
    func_decl (150)
        on left: 155
        on right: 151 214
    atomic_func_decl (151)
        on left: 156
        on right: 152
    func_body (152)
        on left: 157
        on right: 151 152
    func_scope (153)
        on left: 158 159 160 161 162 163 164 165 166 167 168 169 170 171
        on right: 172 173
    func_statements (154)
        on left: 172 173
        on right: 157 169 173
    task (155)
        on left: 175
        on right: 38
    $@6 (156)
        on left: 174
        on right: 175
    taskscope (157)
        on left: 176 177 178 179 180 181 182 183 184 185
        on right: 175 176 177 178 179 180 181 182 183
    statement (158)
        on left: 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200
        on right: 201 202
    statements (159)
        on left: 201 202
        on right: 109 111 114 116 118 202
    access (160)
        on left: 203
        on right: 171 185 200 233
    id (161)
        on left: 204 205
        on right: 203 205 216
    type_declaration (162)
        on left: 207
        on right: 39
    $@7 (163)
        on left: 206
        on right: 207
    attributes (164)
        on left: 208 209
        on right: 207 209
    attribute (165)
        on left: 210 211
        on right: 208 209
    methods (166)
        on left: 212 213
        on right: 207 213
    method (167)
        on left: 214
        on right: 212 213
    method_invoke (168)
        on left: 215 216
        on right: 170 184 199 232
    in_statement (169)
        on left: 217 218
        on right: 231
    method_statements (170)
        on left: 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
        on right: 230 234 235
    method_body (171)
        on left: 234 235
        on right: 214 235


State 0

    0 $accept: . begin $end

    $default  reduce using rule 35 (begin)

    begin  go to state 1


State 1

    0 $accept: begin . $end
   36 begin: begin . declaration
   37      | begin . function
   38      | begin . task
   39      | begin . type_declaration

    $end       shift, and go to state 2
    TASK       shift, and go to state 3
    TYPE       shift, and go to state 4
    ATOMIC     shift, and go to state 5
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple   go to state 29
    atomicSimple      go to state 30
    nonAtomicArray    go to state 31
    atomicArray       go to state 32
    declaration       go to state 33
    simpleDatatype    go to state 34
    arrayDatatype     go to state 35
    declarationStmt   go to state 36
    function          go to state 37
    func_decl         go to state 38
    atomic_func_decl  go to state 39
    task              go to state 40
    type_declaration  go to state 41


State 2

    0 $accept: begin $end .

    $default  accept


State 3

  175 task: TASK . IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 42


State 4

  207 type_declaration: TYPE . UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE

    UDATATYPE  shift, and go to state 43


State 5

   85 simpleDatatype: ATOMIC . AUDATATYPE
  156 atomic_func_decl: ATOMIC . FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    FUNC        shift, and go to state 44
    AUDATATYPE  shift, and go to state 45


State 6

  155 func_decl: FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 46


State 7

   60 nonAtomicSimple: NNUM .

    $default  reduce using rule 60 (nonAtomicSimple)


State 8

   61 nonAtomicSimple: NDEC .

    $default  reduce using rule 61 (nonAtomicSimple)


State 9

   62 nonAtomicSimple: NBOOL .

    $default  reduce using rule 62 (nonAtomicSimple)


State 10

   63 nonAtomicSimple: NLET .

    $default  reduce using rule 63 (nonAtomicSimple)


State 11

   64 nonAtomicSimple: NTEXT .

    $default  reduce using rule 64 (nonAtomicSimple)


State 12

   65 nonAtomicSimple: NVOID .

    $default  reduce using rule 65 (nonAtomicSimple)


State 13

   71 nonAtomicArray: NARRNUM .

    $default  reduce using rule 71 (nonAtomicArray)


State 14

   72 nonAtomicArray: NARRDEC .

    $default  reduce using rule 72 (nonAtomicArray)


State 15

   73 nonAtomicArray: NARRBOOL .

    $default  reduce using rule 73 (nonAtomicArray)


State 16

   74 nonAtomicArray: NARRLET .

    $default  reduce using rule 74 (nonAtomicArray)


State 17

   75 nonAtomicArray: NARRTEXT .

    $default  reduce using rule 75 (nonAtomicArray)


State 18

   66 atomicSimple: ANUM .

    $default  reduce using rule 66 (atomicSimple)


State 19

   67 atomicSimple: ADEC .

    $default  reduce using rule 67 (atomicSimple)


State 20

   68 atomicSimple: ABOOL .

    $default  reduce using rule 68 (atomicSimple)


State 21

   69 atomicSimple: ALET .

    $default  reduce using rule 69 (atomicSimple)


State 22

   70 atomicSimple: ATEXT .

    $default  reduce using rule 70 (atomicSimple)


State 23

   76 atomicArray: AARRNUM .

    $default  reduce using rule 76 (atomicArray)


State 24

   77 atomicArray: AARRDEC .

    $default  reduce using rule 77 (atomicArray)


State 25

   78 atomicArray: AARRBOOL .

    $default  reduce using rule 78 (atomicArray)


State 26

   79 atomicArray: AARRLET .

    $default  reduce using rule 79 (atomicArray)


State 27

   80 atomicArray: AARRTEXT .

    $default  reduce using rule 80 (atomicArray)


State 28

   84 simpleDatatype: UDATATYPE .

    $default  reduce using rule 84 (simpleDatatype)


State 29

   82 simpleDatatype: nonAtomicSimple .

    $default  reduce using rule 82 (simpleDatatype)


State 30

   83 simpleDatatype: atomicSimple .

    $default  reduce using rule 83 (simpleDatatype)


State 31

   86 arrayDatatype: nonAtomicArray .

    $default  reduce using rule 86 (arrayDatatype)


State 32

   87 arrayDatatype: atomicArray .

    $default  reduce using rule 87 (arrayDatatype)


State 33

   36 begin: begin declaration .

    $default  reduce using rule 36 (begin)


State 34

   88 declarationStmt: simpleDatatype . simpleList

    IDENTIFIER  shift, and go to state 47

    simpleList  go to state 48


State 35

   89 declarationStmt: arrayDatatype . arrayList

    IDENTIFIER  shift, and go to state 49

    arrayList  go to state 50


State 36

   81 declaration: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 37

   37 begin: begin function .

    $default  reduce using rule 37 (begin)


State 38

  151 function: func_decl . func_body

    SCOPEOPEN  shift, and go to state 52

    func_body  go to state 53


State 39

  152 function: atomic_func_decl . func_body

    SCOPEOPEN  shift, and go to state 52

    func_body  go to state 54


State 40

   38 begin: begin task .

    $default  reduce using rule 38 (begin)


State 41

   39 begin: begin type_declaration .

    $default  reduce using rule 39 (begin)


State 42

  175 task: TASK IDENTIFIER . COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    COLON  shift, and go to state 55


State 43

  207 type_declaration: TYPE UDATATYPE . $@7 SCOPEOPEN attributes methods SCOPECLOSE

    $default  reduce using rule 206 ($@7)

    $@7  go to state 56


State 44

  156 atomic_func_decl: ATOMIC FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 57


State 45

   85 simpleDatatype: ATOMIC AUDATATYPE .

    $default  reduce using rule 85 (simpleDatatype)


State 46

  155 func_decl: FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 58


State 47

   90 simpleList: IDENTIFIER .
   92           | IDENTIFIER . EQ RHS

    EQ  shift, and go to state 59

    $default  reduce using rule 90 (simpleList)


State 48

   88 declarationStmt: simpleDatatype simpleList .
   91 simpleList: simpleList . COMMA IDENTIFIER
   93           | simpleList . COMMA IDENTIFIER EQ RHS

    COMMA  shift, and go to state 60

    $default  reduce using rule 88 (declarationStmt)


State 49

   94 arrayList: IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   96          | IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 61


State 50

   89 declarationStmt: arrayDatatype arrayList .
   95 arrayList: arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   97          | arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    COMMA  shift, and go to state 62

    $default  reduce using rule 89 (declarationStmt)


State 51

   81 declaration: declarationStmt SEMICOLON .

    $default  reduce using rule 81 (declaration)


State 52

  157 func_body: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 76
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 79
    loop                  go to state 80
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 83
    when_statement        go to state 84
    analyze_syntax        go to state 85
    func_invoke2          go to state 86
    func_invoke           go to state 87
    task_invoke           go to state 88
    sleep                 go to state 89
    input                 go to state 90
    return_statement      go to state 91
    output                go to state 92
    func_scope            go to state 93
    func_statements       go to state 94
    access                go to state 95
    method_invoke         go to state 96


State 53

  151 function: func_decl func_body .

    $default  reduce using rule 151 (function)


State 54

  152 function: atomic_func_decl func_body .

    $default  reduce using rule 152 (function)


State 55

  175 task: TASK IDENTIFIER COLON . func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    NNUM        shift, and go to state 97
    NDEC        shift, and go to state 98
    NBOOL       shift, and go to state 99
    NLET        shift, and go to state 100
    NTEXT       shift, and go to state 101
    ANUM        shift, and go to state 102
    ADEC        shift, and go to state 103
    ABOOL       shift, and go to state 104
    ALET        shift, and go to state 105
    ATEXT       shift, and go to state 106
    UDATATYPE   shift, and go to state 107
    AUDATATYPE  shift, and go to state 108

    all_datatypes  go to state 109
    func_args      go to state 110


State 56

  207 type_declaration: TYPE UDATATYPE $@7 . SCOPEOPEN attributes methods SCOPECLOSE

    SCOPEOPEN  shift, and go to state 111


State 57

  156 atomic_func_decl: ATOMIC FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 112


State 58

  155 func_decl: FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    NNUM        shift, and go to state 97
    NDEC        shift, and go to state 98
    NBOOL       shift, and go to state 99
    NLET        shift, and go to state 100
    NTEXT       shift, and go to state 101
    ANUM        shift, and go to state 102
    ADEC        shift, and go to state 103
    ABOOL       shift, and go to state 104
    ALET        shift, and go to state 105
    ATEXT       shift, and go to state 106
    UDATATYPE   shift, and go to state 107
    AUDATATYPE  shift, and go to state 108

    all_datatypes  go to state 109
    func_args      go to state 113


State 59

   92 simpleList: IDENTIFIER EQ . RHS

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 126
    func_invoke  go to state 127
    get_invoke   go to state 128


State 60

   91 simpleList: simpleList COMMA . IDENTIFIER
   93           | simpleList COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 129


State 61

   94 arrayList: IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   96          | IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 130

    dimlist  go to state 131


State 62

   95 arrayList: arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   97          | arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    IDENTIFIER  shift, and go to state 132


State 63

  114 when_statement: WHEN . SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 133


State 64

  111 while_loop: REPEAT . SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 134


State 65

  109 for_loop: FOR . SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 135


State 66

  135 task_invoke: MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 136


State 67

  126 analyze_syntax: ANALYZE . analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 137
    IDENTIFIER     shift, and go to state 138

    analyze_label  go to state 139


State 68

  137 sleep: SLEEP . ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

    ROUNDOPEN  shift, and go to state 140


State 69

  146 return_statement: RETURN . RHS SEMICOLON

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 141
    func_invoke  go to state 127
    get_invoke   go to state 128


State 70

   85 simpleDatatype: ATOMIC . AUDATATYPE

    AUDATATYPE  shift, and go to state 45


State 71

  131 func_invoke: INVOKE . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 142


State 72

  141 input: IP . file_name COLON IDENTIFIER nextip

    ARROW  shift, and go to state 143

    $default  reduce using rule 140 (file_name)

    file_name  go to state 144


State 73

  147 output: OP . COLON opstring file_name SEMICOLON

    COLON  shift, and go to state 145


State 74

  100 assignment_statement: IDENTIFIER . EQ RHS
  101 expression_statement: IDENTIFIER . expression_op RHS
  203 access: IDENTIFIER . id
  215 method_invoke: IDENTIFIER . ARROW IDENTIFIER COLON arguments
  216              | IDENTIFIER . id ARROW IDENTIFIER COLON arguments

    ARROW          shift, and go to state 146
    EQ             shift, and go to state 147
    INCR           shift, and go to state 148
    DECR           shift, and go to state 149
    ASSN_MODULO    shift, and go to state 150
    ASSN_EXPONENT  shift, and go to state 151
    ASSN_DIV       shift, and go to state 152
    ASSN_MUL       shift, and go to state 153

    expression_op  go to state 154
    id             go to state 155


State 75

  169 func_scope: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 76
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 79
    loop                  go to state 80
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 83
    when_statement        go to state 84
    analyze_syntax        go to state 85
    func_invoke2          go to state 86
    func_invoke           go to state 87
    task_invoke           go to state 88
    sleep                 go to state 89
    input                 go to state 90
    return_statement      go to state 91
    output                go to state 92
    func_scope            go to state 93
    func_statements       go to state 156
    access                go to state 95
    method_invoke         go to state 96


State 76

  158 func_scope: declaration .

    $default  reduce using rule 158 (func_scope)


State 77

  102 log: assignment_statement . SEMICOLON

    SEMICOLON  shift, and go to state 157


State 78

  103 log: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 79

  159 func_scope: log .

    $default  reduce using rule 159 (func_scope)


State 80

  162 func_scope: loop .

    $default  reduce using rule 162 (func_scope)


State 81

  106 loop: for_loop .

    $default  reduce using rule 106 (loop)


State 82

  107 loop: while_loop .

    $default  reduce using rule 107 (loop)


State 83

  164 func_scope: conditional .

    $default  reduce using rule 164 (func_scope)


State 84

  112 conditional: when_statement . when_default
  116 when_statement: when_statement . ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    ELSE_WHEN  shift, and go to state 159
    DEFAULT    shift, and go to state 160

    $default  reduce using rule 119 (when_default)

    when_default  go to state 161


State 85

  165 func_scope: analyze_syntax .

    $default  reduce using rule 165 (func_scope)


State 86

  161 func_scope: func_invoke2 .

    $default  reduce using rule 161 (func_scope)


State 87

  130 func_invoke2: func_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 162


State 88

  160 func_scope: task_invoke .

    $default  reduce using rule 160 (func_scope)


State 89

  168 func_scope: sleep .

    $default  reduce using rule 168 (func_scope)


State 90

  166 func_scope: input .

    $default  reduce using rule 166 (func_scope)


State 91

  163 func_scope: return_statement .

    $default  reduce using rule 163 (func_scope)


State 92

  167 func_scope: output .

    $default  reduce using rule 167 (func_scope)


State 93

  172 func_statements: func_scope .

    $default  reduce using rule 172 (func_statements)


State 94

  157 func_body: SCOPEOPEN func_statements . SCOPECLOSE
  173 func_statements: func_statements . func_scope

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    SCOPECLOSE     shift, and go to state 163
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 76
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 79
    loop                  go to state 80
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 83
    when_statement        go to state 84
    analyze_syntax        go to state 85
    func_invoke2          go to state 86
    func_invoke           go to state 87
    task_invoke           go to state 88
    sleep                 go to state 89
    input                 go to state 90
    return_statement      go to state 91
    output                go to state 92
    func_scope            go to state 164
    access                go to state 95
    method_invoke         go to state 96


State 95

  171 func_scope: access .

    $default  reduce using rule 171 (func_scope)


State 96

  170 func_scope: method_invoke .

    $default  reduce using rule 170 (func_scope)


State 97

    5 all_datatypes: NNUM .

    $default  reduce using rule 5 (all_datatypes)


State 98

    4 all_datatypes: NDEC .

    $default  reduce using rule 4 (all_datatypes)


State 99

    3 all_datatypes: NBOOL .

    $default  reduce using rule 3 (all_datatypes)


State 100

    7 all_datatypes: NLET .

    $default  reduce using rule 7 (all_datatypes)


State 101

    6 all_datatypes: NTEXT .

    $default  reduce using rule 6 (all_datatypes)


State 102

   12 all_datatypes: ANUM .

    $default  reduce using rule 12 (all_datatypes)


State 103

    9 all_datatypes: ADEC .

    $default  reduce using rule 9 (all_datatypes)


State 104

    8 all_datatypes: ABOOL .

    $default  reduce using rule 8 (all_datatypes)


State 105

   10 all_datatypes: ALET .

    $default  reduce using rule 10 (all_datatypes)


State 106

   11 all_datatypes: ATEXT .

    $default  reduce using rule 11 (all_datatypes)


State 107

    1 all_datatypes: UDATATYPE .

    $default  reduce using rule 1 (all_datatypes)


State 108

    2 all_datatypes: AUDATATYPE .

    $default  reduce using rule 2 (all_datatypes)


State 109

  153 func_args: all_datatypes . IDENTIFIER

    IDENTIFIER  shift, and go to state 165


State 110

  154 func_args: func_args . COMMA all_datatypes IDENTIFIER
  175 task: TASK IDENTIFIER COLON func_args . $@6 SCOPEOPEN taskscope SCOPECLOSE

    COMMA  shift, and go to state 166

    $default  reduce using rule 174 ($@6)

    $@6  go to state 167


State 111

  207 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN . attributes methods SCOPECLOSE

    ATOMIC     shift, and go to state 70
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 168
    arrayDatatype    go to state 169
    attributes       go to state 170
    attribute        go to state 171


State 112

  156 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    NNUM        shift, and go to state 97
    NDEC        shift, and go to state 98
    NBOOL       shift, and go to state 99
    NLET        shift, and go to state 100
    NTEXT       shift, and go to state 101
    ANUM        shift, and go to state 102
    ADEC        shift, and go to state 103
    ABOOL       shift, and go to state 104
    ALET        shift, and go to state 105
    ATEXT       shift, and go to state 106
    UDATATYPE   shift, and go to state 107
    AUDATATYPE  shift, and go to state 108

    all_datatypes  go to state 109
    func_args      go to state 172


State 113

  154 func_args: func_args . COMMA all_datatypes IDENTIFIER
  155 func_decl: FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 166
    COLON  shift, and go to state 173


State 114

   55 RHS: TID .

    $default  reduce using rule 55 (RHS)


State 115

  136 get_invoke: GET . ARROW TIME

    ARROW  shift, and go to state 174


State 116

   59 RHS: NEG . ROUNDOPEN RHS ROUNDCLOSE

    ROUNDOPEN  shift, and go to state 175


State 117

   46 constants: INTEGERLITERAL .

    $default  reduce using rule 46 (constants)


State 118

   50 constants: STRINGLITERAL .

    $default  reduce using rule 50 (constants)


State 119

   47 constants: CHARACTERLITERAL .

    $default  reduce using rule 47 (constants)


State 120

   49 constants: BOOLEANLITERAL .

    $default  reduce using rule 49 (constants)


State 121

   48 constants: FLOATLITERAL .

    $default  reduce using rule 48 (constants)


State 122

   40 T: IDENTIFIER .

    $default  reduce using rule 40 (T)


State 123

   57 RHS: ROUNDOPEN . RHS all_ops next ROUNDCLOSE
   58    | ROUNDOPEN . RHS ROUNDCLOSE

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 176
    func_invoke  go to state 127
    get_invoke   go to state 128


State 124

   54 RHS: T .

    $default  reduce using rule 54 (RHS)


State 125

   53 RHS: constants .

    $default  reduce using rule 53 (RHS)


State 126

   92 simpleList: IDENTIFIER EQ RHS .

    $default  reduce using rule 92 (simpleList)


State 127

   41 T: func_invoke .

    $default  reduce using rule 41 (T)


State 128

   56 RHS: get_invoke .

    $default  reduce using rule 56 (RHS)


State 129

   91 simpleList: simpleList COMMA IDENTIFIER .
   93           | simpleList COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 177

    $default  reduce using rule 91 (simpleList)


State 130

   99 dimlist: INTEGERLITERAL .

    $default  reduce using rule 99 (dimlist)


State 131

   94 arrayList: IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   96          | IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   98 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 178
    SQUARECLOSE  shift, and go to state 179


State 132

   95 arrayList: arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   97          | arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 180


State 133

  114 when_statement: WHEN SQUAREOPEN . RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 181
    func_invoke  go to state 127
    get_invoke   go to state 128


State 134

  111 while_loop: REPEAT SQUAREOPEN . RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 182
    func_invoke  go to state 127
    get_invoke   go to state 128


State 135

  109 for_loop: FOR SQUAREOPEN . both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    ATOMIC      shift, and go to state 70
    IDENTIFIER  shift, and go to state 183
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 184
    assignment_statement  go to state 185
    both_assignment       go to state 186


State 136

  135 task_invoke: MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 187


State 137

  124 analyze_label: STRINGLITERAL .

    $default  reduce using rule 124 (analyze_label)


State 138

  125 analyze_label: IDENTIFIER .

    $default  reduce using rule 125 (analyze_label)


State 139

  126 analyze_syntax: ANALYZE analyze_label . COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 188


State 140

  137 sleep: SLEEP ROUNDOPEN . FLOATLITERAL ROUNDCLOSE SEMICOLON

    FLOATLITERAL  shift, and go to state 189


State 141

  146 return_statement: RETURN RHS . SEMICOLON

    SEMICOLON  shift, and go to state 190


State 142

  131 func_invoke: INVOKE IDENTIFIER . COLON arguments

    COLON  shift, and go to state 191


State 143

  138 file_name: ARROW . STRINGLITERAL
  139          | ARROW . IDENTIFIER

    STRINGLITERAL  shift, and go to state 192
    IDENTIFIER     shift, and go to state 193


State 144

  141 input: IP file_name . COLON IDENTIFIER nextip

    COLON  shift, and go to state 194


State 145

  147 output: OP COLON . opstring file_name SEMICOLON

    STRINGLITERAL  shift, and go to state 195
    IDENTIFIER     shift, and go to state 196

    stringvalues  go to state 197
    opstring      go to state 198


State 146

  204 id: ARROW . IDENTIFIER
  215 method_invoke: IDENTIFIER ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 199


State 147

  100 assignment_statement: IDENTIFIER EQ . RHS

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 200
    func_invoke  go to state 127
    get_invoke   go to state 128


State 148

   17 expression_op: INCR .

    $default  reduce using rule 17 (expression_op)


State 149

   18 expression_op: DECR .

    $default  reduce using rule 18 (expression_op)


State 150

   15 expression_op: ASSN_MODULO .

    $default  reduce using rule 15 (expression_op)


State 151

   14 expression_op: ASSN_EXPONENT .

    $default  reduce using rule 14 (expression_op)


State 152

   13 expression_op: ASSN_DIV .

    $default  reduce using rule 13 (expression_op)


State 153

   16 expression_op: ASSN_MUL .

    $default  reduce using rule 16 (expression_op)


State 154

  101 expression_statement: IDENTIFIER expression_op . RHS

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 201
    func_invoke  go to state 127
    get_invoke   go to state 128


State 155

  203 access: IDENTIFIER id .
  205 id: id . ARROW IDENTIFIER
  216 method_invoke: IDENTIFIER id . ARROW IDENTIFIER COLON arguments

    ARROW  shift, and go to state 202

    $default  reduce using rule 203 (access)


State 156

  169 func_scope: SCOPEOPEN func_statements . SCOPECLOSE
  173 func_statements: func_statements . func_scope

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    SCOPECLOSE     shift, and go to state 203
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 76
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 79
    loop                  go to state 80
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 83
    when_statement        go to state 84
    analyze_syntax        go to state 85
    func_invoke2          go to state 86
    func_invoke           go to state 87
    task_invoke           go to state 88
    sleep                 go to state 89
    input                 go to state 90
    return_statement      go to state 91
    output                go to state 92
    func_scope            go to state 164
    access                go to state 95
    method_invoke         go to state 96


State 157

  102 log: assignment_statement SEMICOLON .

    $default  reduce using rule 102 (log)


State 158

  103 log: expression_statement SEMICOLON .

    $default  reduce using rule 103 (log)


State 159

  116 when_statement: when_statement ELSE_WHEN . SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 204


State 160

  118 when_default: DEFAULT . SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 205


State 161

  112 conditional: when_statement when_default .

    $default  reduce using rule 112 (conditional)


State 162

  130 func_invoke2: func_invoke SEMICOLON .

    $default  reduce using rule 130 (func_invoke2)


State 163

  157 func_body: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 157 (func_body)


State 164

  173 func_statements: func_statements func_scope .

    $default  reduce using rule 173 (func_statements)


State 165

  153 func_args: all_datatypes IDENTIFIER .

    $default  reduce using rule 153 (func_args)


State 166

  154 func_args: func_args COMMA . all_datatypes IDENTIFIER

    NNUM        shift, and go to state 97
    NDEC        shift, and go to state 98
    NBOOL       shift, and go to state 99
    NLET        shift, and go to state 100
    NTEXT       shift, and go to state 101
    ANUM        shift, and go to state 102
    ADEC        shift, and go to state 103
    ABOOL       shift, and go to state 104
    ALET        shift, and go to state 105
    ATEXT       shift, and go to state 106
    UDATATYPE   shift, and go to state 107
    AUDATATYPE  shift, and go to state 108

    all_datatypes  go to state 206


State 167

  175 task: TASK IDENTIFIER COLON func_args $@6 . SCOPEOPEN taskscope SCOPECLOSE

    SCOPEOPEN  shift, and go to state 207


State 168

  210 attribute: simpleDatatype . IDENTIFIER

    IDENTIFIER  shift, and go to state 208


State 169

  211 attribute: arrayDatatype . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

    IDENTIFIER  shift, and go to state 209


State 170

  207 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes . methods SCOPECLOSE
  209 attributes: attributes . attribute SEMICOLON

    ATOMIC     shift, and go to state 70
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 168
    arrayDatatype    go to state 169
    func_decl        go to state 210
    attribute        go to state 211
    methods          go to state 212
    method           go to state 213


State 171

  208 attributes: attribute . SEMICOLON

    SEMICOLON  shift, and go to state 214


State 172

  154 func_args: func_args . COMMA all_datatypes IDENTIFIER
  156 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 166
    COLON  shift, and go to state 215


State 173

  155 func_decl: FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 216
    nonAtomicSimple      go to state 217
    nonAtomicArray       go to state 218


State 174

  136 get_invoke: GET ARROW . TIME

    TIME  shift, and go to state 219


State 175

   59 RHS: NEG ROUNDOPEN . RHS ROUNDCLOSE

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 220
    func_invoke  go to state 127
    get_invoke   go to state 128


State 176

   57 RHS: ROUNDOPEN RHS . all_ops next ROUNDCLOSE
   58    | ROUNDOPEN RHS . ROUNDCLOSE

    DIV         shift, and go to state 221
    ADD         shift, and go to state 222
    SUB         shift, and go to state 223
    MUL         shift, and go to state 224
    EXPONENT    shift, and go to state 225
    MODULO      shift, and go to state 226
    AND         shift, and go to state 227
    OR          shift, and go to state 228
    GT          shift, and go to state 229
    LT          shift, and go to state 230
    GTEQ        shift, and go to state 231
    LTEQ        shift, and go to state 232
    NOT_EQ      shift, and go to state 233
    EQUAL_TWO   shift, and go to state 234
    ROUNDCLOSE  shift, and go to state 235
    HASH        shift, and go to state 236

    comparison_op  go to state 237
    arithmetic_op  go to state 238
    logical_op     go to state 239
    all_ops        go to state 240


State 177

   93 simpleList: simpleList COMMA IDENTIFIER EQ . RHS

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 241
    func_invoke  go to state 127
    get_invoke   go to state 128


State 178

   98 dimlist: dimlist COMMA . INTEGERLITERAL

    INTEGERLITERAL  shift, and go to state 242


State 179

   94 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   96          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 243

    $default  reduce using rule 94 (arrayList)


State 180

   95 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   97          | arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 130

    dimlist  go to state 244


State 181

  114 when_statement: WHEN SQUAREOPEN RHS . SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 245


State 182

  111 while_loop: REPEAT SQUAREOPEN RHS . SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 246


State 183

  100 assignment_statement: IDENTIFIER . EQ RHS

    EQ  shift, and go to state 147


State 184

  105 both_assignment: declarationStmt .

    $default  reduce using rule 105 (both_assignment)


State 185

  104 both_assignment: assignment_statement .

    $default  reduce using rule 104 (both_assignment)


State 186

  109 for_loop: FOR SQUAREOPEN both_assignment . SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 247


State 187

  135 task_invoke: MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 248


State 188

  126 analyze_syntax: ANALYZE analyze_label COLON . analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 137
    IDENTIFIER     shift, and go to state 138

    analyze_label  go to state 249


State 189

  137 sleep: SLEEP ROUNDOPEN FLOATLITERAL . ROUNDCLOSE SEMICOLON

    ROUNDCLOSE  shift, and go to state 250


State 190

  146 return_statement: RETURN RHS SEMICOLON .

    $default  reduce using rule 146 (return_statement)


State 191

  131 func_invoke: INVOKE IDENTIFIER COLON . arguments

    NULL_ARGS         shift, and go to state 251
    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 252
    is           go to state 253
    func_invoke  go to state 127
    arguments    go to state 254
    get_invoke   go to state 128


State 192

  138 file_name: ARROW STRINGLITERAL .

    $default  reduce using rule 138 (file_name)


State 193

  139 file_name: ARROW IDENTIFIER .

    $default  reduce using rule 139 (file_name)


State 194

  141 input: IP file_name COLON . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 255


State 195

  144 stringvalues: STRINGLITERAL .

    $default  reduce using rule 144 (stringvalues)


State 196

  145 stringvalues: IDENTIFIER .

    $default  reduce using rule 145 (stringvalues)


State 197

  148 opstring: stringvalues . nextop

    HASH  shift, and go to state 256

    $default  reduce using rule 150 (nextop)

    nextop  go to state 257


State 198

  147 output: OP COLON opstring . file_name SEMICOLON

    ARROW  shift, and go to state 143

    $default  reduce using rule 140 (file_name)

    file_name  go to state 258


State 199

  204 id: ARROW IDENTIFIER .
  215 method_invoke: IDENTIFIER ARROW IDENTIFIER . COLON arguments

    COLON  shift, and go to state 259

    COLON     [reduce using rule 204 (id)]
    $default  reduce using rule 204 (id)


State 200

  100 assignment_statement: IDENTIFIER EQ RHS .

    $default  reduce using rule 100 (assignment_statement)


State 201

  101 expression_statement: IDENTIFIER expression_op RHS .

    $default  reduce using rule 101 (expression_statement)


State 202

  205 id: id ARROW . IDENTIFIER
  216 method_invoke: IDENTIFIER id ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 260


State 203

  169 func_scope: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 169 (func_scope)


State 204

  116 when_statement: when_statement ELSE_WHEN SQUAREOPEN . RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 261
    func_invoke  go to state 127
    get_invoke   go to state 128


State 205

  118 when_default: DEFAULT SQUAREOPEN . RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 262
    func_invoke  go to state 127
    get_invoke   go to state 128


State 206

  154 func_args: func_args COMMA all_datatypes . IDENTIFIER

    IDENTIFIER  shift, and go to state 263


State 207

  175 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN . taskscope SCOPECLOSE

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 272
    access                go to state 273
    method_invoke         go to state 274


State 208

  210 attribute: simpleDatatype IDENTIFIER .

    $default  reduce using rule 210 (attribute)


State 209

  211 attribute: arrayDatatype IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE

    SQUAREOPEN  shift, and go to state 275


State 210

  214 method: func_decl . SCOPEOPEN method_body SCOPECLOSE

    SCOPEOPEN  shift, and go to state 276


State 211

  209 attributes: attributes attribute . SEMICOLON

    SEMICOLON  shift, and go to state 277


State 212

  207 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods . SCOPECLOSE
  213 methods: methods . method

    FUNC        shift, and go to state 6
    SCOPECLOSE  shift, and go to state 278

    func_decl  go to state 210
    method     go to state 279


State 213

  212 methods: method .

    $default  reduce using rule 212 (methods)


State 214

  208 attributes: attribute SEMICOLON .

    $default  reduce using rule 208 (attributes)


State 215

  156 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 280
    nonAtomicSimple      go to state 217
    nonAtomicArray       go to state 218


State 216

  155 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 155 (func_decl)


State 217

   34 nonAtomic_datatypes: nonAtomicSimple .

    $default  reduce using rule 34 (nonAtomic_datatypes)


State 218

   33 nonAtomic_datatypes: nonAtomicArray .

    $default  reduce using rule 33 (nonAtomic_datatypes)


State 219

  136 get_invoke: GET ARROW TIME .

    $default  reduce using rule 136 (get_invoke)


State 220

   59 RHS: NEG ROUNDOPEN RHS . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 281


State 221

   28 arithmetic_op: DIV .

    $default  reduce using rule 28 (arithmetic_op)


State 222

   25 arithmetic_op: ADD .

    $default  reduce using rule 25 (arithmetic_op)


State 223

   26 arithmetic_op: SUB .

    $default  reduce using rule 26 (arithmetic_op)


State 224

   27 arithmetic_op: MUL .

    $default  reduce using rule 27 (arithmetic_op)


State 225

   30 arithmetic_op: EXPONENT .

    $default  reduce using rule 30 (arithmetic_op)


State 226

   29 arithmetic_op: MODULO .

    $default  reduce using rule 29 (arithmetic_op)


State 227

   31 logical_op: AND .

    $default  reduce using rule 31 (logical_op)


State 228

   32 logical_op: OR .

    $default  reduce using rule 32 (logical_op)


State 229

   20 comparison_op: GT .

    $default  reduce using rule 20 (comparison_op)


State 230

   19 comparison_op: LT .

    $default  reduce using rule 19 (comparison_op)


State 231

   21 comparison_op: GTEQ .

    $default  reduce using rule 21 (comparison_op)


State 232

   22 comparison_op: LTEQ .

    $default  reduce using rule 22 (comparison_op)


State 233

   23 comparison_op: NOT_EQ .

    $default  reduce using rule 23 (comparison_op)


State 234

   24 comparison_op: EQUAL_TWO .

    $default  reduce using rule 24 (comparison_op)


State 235

   58 RHS: ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 58 (RHS)


State 236

   45 all_ops: HASH .

    $default  reduce using rule 45 (all_ops)


State 237

   43 all_ops: comparison_op .

    $default  reduce using rule 43 (all_ops)


State 238

   42 all_ops: arithmetic_op .

    $default  reduce using rule 42 (all_ops)


State 239

   44 all_ops: logical_op .

    $default  reduce using rule 44 (all_ops)


State 240

   57 RHS: ROUNDOPEN RHS all_ops . next ROUNDCLOSE

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    next         go to state 282
    RHS          go to state 283
    func_invoke  go to state 127
    get_invoke   go to state 128


State 241

   93 simpleList: simpleList COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 93 (simpleList)


State 242

   98 dimlist: dimlist COMMA INTEGERLITERAL .

    $default  reduce using rule 98 (dimlist)


State 243

   96 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 284
    func_invoke  go to state 127
    get_invoke   go to state 128


State 244

   95 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   97          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   98 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 178
    SQUARECLOSE  shift, and go to state 285


State 245

  114 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE . $@3 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 113 ($@3)

    $@3  go to state 286


State 246

  111 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE . $@2 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 110 ($@2)

    $@2  go to state 287


State 247

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON . RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 288
    func_invoke  go to state 127
    get_invoke   go to state 128


State 248

  135 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 289


State 249

  126 analyze_syntax: ANALYZE analyze_label COLON analyze_label . COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 290


State 250

  137 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 291


State 251

  134 arguments: NULL_ARGS .

    $default  reduce using rule 134 (arguments)


State 252

  129 is: RHS .

    $default  reduce using rule 129 (is)


State 253

  132 arguments: is .

    $default  reduce using rule 132 (arguments)


State 254

  131 func_invoke: INVOKE IDENTIFIER COLON arguments .
  133 arguments: arguments . COMMA is

    COMMA  shift, and go to state 292

    COMMA     [reduce using rule 131 (func_invoke)]
    $default  reduce using rule 131 (func_invoke)


State 255

  141 input: IP file_name COLON IDENTIFIER . nextip

    COMMA      shift, and go to state 293
    SEMICOLON  shift, and go to state 294

    nextip  go to state 295


State 256

  149 nextop: HASH . stringvalues nextop

    STRINGLITERAL  shift, and go to state 195
    IDENTIFIER     shift, and go to state 196

    stringvalues  go to state 296


State 257

  148 opstring: stringvalues nextop .

    $default  reduce using rule 148 (opstring)


State 258

  147 output: OP COLON opstring file_name . SEMICOLON

    SEMICOLON  shift, and go to state 297


State 259

  215 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON . arguments

    NULL_ARGS         shift, and go to state 251
    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 252
    is           go to state 253
    func_invoke  go to state 127
    arguments    go to state 298
    get_invoke   go to state 128


State 260

  205 id: id ARROW IDENTIFIER .
  216 method_invoke: IDENTIFIER id ARROW IDENTIFIER . COLON arguments

    COLON  shift, and go to state 299

    COLON     [reduce using rule 205 (id)]
    $default  reduce using rule 205 (id)


State 261

  116 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS . SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 300


State 262

  118 when_default: DEFAULT SQUAREOPEN RHS . SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 301


State 263

  154 func_args: func_args COMMA all_datatypes IDENTIFIER .

    $default  reduce using rule 154 (func_args)


State 264

  182 taskscope: SCOPEOPEN . taskscope SCOPECLOSE taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 302
    access                go to state 273
    method_invoke         go to state 274


State 265

  176 taskscope: declaration . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 303
    access                go to state 273
    method_invoke         go to state 274


State 266

  177 taskscope: log . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 304
    access                go to state 273
    method_invoke         go to state 274


State 267

  179 taskscope: loop . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 305
    access                go to state 273
    method_invoke         go to state 274


State 268

  178 taskscope: conditional . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 306
    access                go to state 273
    method_invoke         go to state 274


State 269

  180 taskscope: func_invoke2 . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 307
    access                go to state 273
    method_invoke         go to state 274


State 270

  183 taskscope: sleep . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 308
    access                go to state 273
    method_invoke         go to state 274


State 271

  181 taskscope: output . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 309
    access                go to state 273
    method_invoke         go to state 274


State 272

  175 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 310


State 273

  185 taskscope: access .

    $default  reduce using rule 185 (taskscope)


State 274

  184 taskscope: method_invoke .

    $default  reduce using rule 184 (taskscope)


State 275

  211 attribute: arrayDatatype IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 130

    dimlist  go to state 311


State 276

  214 method: func_decl SCOPEOPEN . method_body SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 312
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 313
    COLON          shift, and go to state 314
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 315
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 316
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 317
    loop                  go to state 318
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 319
    when_statement        go to state 84
    analyze_statement     go to state 320
    func_invoke2          go to state 321
    func_invoke           go to state 87
    task_invoke           go to state 322
    sleep                 go to state 323
    input                 go to state 324
    return_statement      go to state 325
    output                go to state 326
    access                go to state 327
    method_invoke         go to state 328
    in_statement          go to state 329
    method_statements     go to state 330
    method_body           go to state 331


State 277

  209 attributes: attributes attribute SEMICOLON .

    $default  reduce using rule 209 (attributes)


State 278

  207 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE .

    $default  reduce using rule 207 (type_declaration)


State 279

  213 methods: methods method .

    $default  reduce using rule 213 (methods)


State 280

  156 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 156 (atomic_func_decl)


State 281

   59 RHS: NEG ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 59 (RHS)


State 282

   57 RHS: ROUNDOPEN RHS all_ops next . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 332


State 283

   51 next: RHS . all_ops next
   52     | RHS .

    DIV        shift, and go to state 221
    ADD        shift, and go to state 222
    SUB        shift, and go to state 223
    MUL        shift, and go to state 224
    EXPONENT   shift, and go to state 225
    MODULO     shift, and go to state 226
    AND        shift, and go to state 227
    OR         shift, and go to state 228
    GT         shift, and go to state 229
    LT         shift, and go to state 230
    GTEQ       shift, and go to state 231
    LTEQ       shift, and go to state 232
    NOT_EQ     shift, and go to state 233
    EQUAL_TWO  shift, and go to state 234
    HASH       shift, and go to state 236

    $default  reduce using rule 52 (next)

    comparison_op  go to state 237
    arithmetic_op  go to state 238
    logical_op     go to state 239
    all_ops        go to state 333


State 284

   96 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 96 (arrayList)


State 285

   95 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   97          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 334

    $default  reduce using rule 95 (arrayList)


State 286

  114 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 335


State 287

  111 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 336


State 288

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS . SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 337


State 289

  135 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 338


State 290

  126 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON . analysis_arrays COLON analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 339
    NARRDEC  shift, and go to state 340
    AARRNUM  shift, and go to state 341
    AARRDEC  shift, and go to state 342

    analysis_arrays  go to state 343


State 291

  137 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON .

    $default  reduce using rule 137 (sleep)


State 292

  133 arguments: arguments COMMA . is

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 252
    is           go to state 344
    func_invoke  go to state 127
    get_invoke   go to state 128


State 293

  142 nextip: COMMA . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 345


State 294

  143 nextip: SEMICOLON .

    $default  reduce using rule 143 (nextip)


State 295

  141 input: IP file_name COLON IDENTIFIER nextip .

    $default  reduce using rule 141 (input)


State 296

  149 nextop: HASH stringvalues . nextop

    HASH  shift, and go to state 256

    $default  reduce using rule 150 (nextop)

    nextop  go to state 346


State 297

  147 output: OP COLON opstring file_name SEMICOLON .

    $default  reduce using rule 147 (output)


State 298

  133 arguments: arguments . COMMA is
  215 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 292

    $default  reduce using rule 215 (method_invoke)


State 299

  216 method_invoke: IDENTIFIER id ARROW IDENTIFIER COLON . arguments

    NULL_ARGS         shift, and go to state 251
    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 252
    is           go to state 253
    func_invoke  go to state 127
    arguments    go to state 347
    get_invoke   go to state 128


State 300

  116 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE . $@4 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 115 ($@4)

    $@4  go to state 348


State 301

  118 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE . $@5 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 117 ($@5)

    $@5  go to state 349


State 302

  182 taskscope: SCOPEOPEN taskscope . SCOPECLOSE taskscope

    SCOPECLOSE  shift, and go to state 350


State 303

  176 taskscope: declaration taskscope .

    $default  reduce using rule 176 (taskscope)


State 304

  177 taskscope: log taskscope .

    $default  reduce using rule 177 (taskscope)


State 305

  179 taskscope: loop taskscope .

    $default  reduce using rule 179 (taskscope)


State 306

  178 taskscope: conditional taskscope .

    $default  reduce using rule 178 (taskscope)


State 307

  180 taskscope: func_invoke2 taskscope .

    $default  reduce using rule 180 (taskscope)


State 308

  183 taskscope: sleep taskscope .

    $default  reduce using rule 183 (taskscope)


State 309

  181 taskscope: output taskscope .

    $default  reduce using rule 181 (taskscope)


State 310

  175 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE .

    $default  reduce using rule 175 (task)


State 311

   98 dimlist: dimlist . COMMA INTEGERLITERAL
  211 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE

    COMMA        shift, and go to state 178
    SQUARECLOSE  shift, and go to state 351


State 312

  217 in_statement: IN . ARROW IDENTIFIER SEMICOLON
  218             | IN . ARROW IDENTIFIER COLON arguments

    ARROW  shift, and go to state 352


State 313

  128 analyze_statement: SEMICOLON .

    $default  reduce using rule 128 (analyze_statement)


State 314

  127 analyze_statement: COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 339
    NARRDEC  shift, and go to state 340
    AARRNUM  shift, and go to state 341
    AARRDEC  shift, and go to state 342

    analysis_arrays  go to state 353


State 315

  230 method_statements: SCOPEOPEN . method_statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 312
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 313
    COLON          shift, and go to state 314
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 315
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 316
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 317
    loop                  go to state 318
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 319
    when_statement        go to state 84
    analyze_statement     go to state 320
    func_invoke2          go to state 321
    func_invoke           go to state 87
    task_invoke           go to state 322
    sleep                 go to state 323
    input                 go to state 324
    return_statement      go to state 325
    output                go to state 326
    access                go to state 327
    method_invoke         go to state 328
    in_statement          go to state 329
    method_statements     go to state 354


State 316

  219 method_statements: declaration .

    $default  reduce using rule 219 (method_statements)


State 317

  220 method_statements: log .

    $default  reduce using rule 220 (method_statements)


State 318

  223 method_statements: loop .

    $default  reduce using rule 223 (method_statements)


State 319

  225 method_statements: conditional .

    $default  reduce using rule 225 (method_statements)


State 320

  226 method_statements: analyze_statement .

    $default  reduce using rule 226 (method_statements)


State 321

  222 method_statements: func_invoke2 .

    $default  reduce using rule 222 (method_statements)


State 322

  221 method_statements: task_invoke .

    $default  reduce using rule 221 (method_statements)


State 323

  229 method_statements: sleep .

    $default  reduce using rule 229 (method_statements)


State 324

  227 method_statements: input .

    $default  reduce using rule 227 (method_statements)


State 325

  224 method_statements: return_statement .

    $default  reduce using rule 224 (method_statements)


State 326

  228 method_statements: output .

    $default  reduce using rule 228 (method_statements)


State 327

  233 method_statements: access .

    $default  reduce using rule 233 (method_statements)


State 328

  232 method_statements: method_invoke .

    $default  reduce using rule 232 (method_statements)


State 329

  231 method_statements: in_statement .

    $default  reduce using rule 231 (method_statements)


State 330

  234 method_body: method_statements .

    $default  reduce using rule 234 (method_body)


State 331

  214 method: func_decl SCOPEOPEN method_body . SCOPECLOSE
  235 method_body: method_body . method_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 312
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 313
    COLON          shift, and go to state 314
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 315
    SCOPECLOSE     shift, and go to state 355
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 316
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 317
    loop                  go to state 318
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 319
    when_statement        go to state 84
    analyze_statement     go to state 320
    func_invoke2          go to state 321
    func_invoke           go to state 87
    task_invoke           go to state 322
    sleep                 go to state 323
    input                 go to state 324
    return_statement      go to state 325
    output                go to state 326
    access                go to state 327
    method_invoke         go to state 328
    in_statement          go to state 329
    method_statements     go to state 356


State 332

   57 RHS: ROUNDOPEN RHS all_ops next ROUNDCLOSE .

    $default  reduce using rule 57 (RHS)


State 333

   51 next: RHS all_ops . next

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    next         go to state 357
    RHS          go to state 283
    func_invoke  go to state 127
    get_invoke   go to state 128


State 334

   97 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 358
    func_invoke  go to state 127
    get_invoke   go to state 128


State 335

  114 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 372
    statements            go to state 373
    access                go to state 374
    method_invoke         go to state 375


State 336

  111 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 372
    statements            go to state 376
    access                go to state 374
    method_invoke         go to state 375


State 337

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON . expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    IDENTIFIER  shift, and go to state 377

    expression_statement  go to state 378


State 338

  135 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON arguments SEMICOLON

    COLON  shift, and go to state 379


State 339

  121 analysis_arrays: NARRNUM .

    $default  reduce using rule 121 (analysis_arrays)


State 340

  120 analysis_arrays: NARRDEC .

    $default  reduce using rule 120 (analysis_arrays)


State 341

  123 analysis_arrays: AARRNUM .

    $default  reduce using rule 123 (analysis_arrays)


State 342

  122 analysis_arrays: AARRDEC .

    $default  reduce using rule 122 (analysis_arrays)


State 343

  126 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays . COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 380


State 344

  133 arguments: arguments COMMA is .

    $default  reduce using rule 133 (arguments)


State 345

  142 nextip: COMMA IDENTIFIER . nextip

    COMMA      shift, and go to state 293
    SEMICOLON  shift, and go to state 294

    nextip  go to state 381


State 346

  149 nextop: HASH stringvalues nextop .

    $default  reduce using rule 149 (nextop)


State 347

  133 arguments: arguments . COMMA is
  216 method_invoke: IDENTIFIER id ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 292

    $default  reduce using rule 216 (method_invoke)


State 348

  116 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 382


State 349

  118 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 383


State 350

  182 taskscope: SCOPEOPEN taskscope SCOPECLOSE . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 264
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 265
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 266
    loop                  go to state 267
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 268
    when_statement        go to state 84
    func_invoke2          go to state 269
    func_invoke           go to state 87
    sleep                 go to state 270
    output                go to state 271
    taskscope             go to state 384
    access                go to state 273
    method_invoke         go to state 274


State 351

  211 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .

    $default  reduce using rule 211 (attribute)


State 352

  217 in_statement: IN ARROW . IDENTIFIER SEMICOLON
  218             | IN ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 385


State 353

  127 analyze_statement: COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 313
    COLON      shift, and go to state 314

    analyze_statement  go to state 386


State 354

  230 method_statements: SCOPEOPEN method_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 387


State 355

  214 method: func_decl SCOPEOPEN method_body SCOPECLOSE .

    $default  reduce using rule 214 (method)


State 356

  235 method_body: method_body method_statements .

    $default  reduce using rule 235 (method_body)


State 357

   51 next: RHS all_ops next .

    $default  reduce using rule 51 (next)


State 358

   97 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 97 (arrayList)


State 359

  196 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 388


State 360

  197 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 389


State 361

  186 statement: declaration .

    $default  reduce using rule 186 (statement)


State 362

  187 statement: log .

    $default  reduce using rule 187 (statement)


State 363

  189 statement: loop .

    $default  reduce using rule 189 (statement)


State 364

  188 statement: conditional .

    $default  reduce using rule 188 (statement)


State 365

  193 statement: analyze_syntax .

    $default  reduce using rule 193 (statement)


State 366

  191 statement: func_invoke2 .

    $default  reduce using rule 191 (statement)


State 367

  192 statement: task_invoke .

    $default  reduce using rule 192 (statement)


State 368

  195 statement: sleep .

    $default  reduce using rule 195 (statement)


State 369

  198 statement: input .

    $default  reduce using rule 198 (statement)


State 370

  190 statement: return_statement .

    $default  reduce using rule 190 (statement)


State 371

  194 statement: output .

    $default  reduce using rule 194 (statement)


State 372

  201 statements: statement .

    $default  reduce using rule 201 (statements)


State 373

  114 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements . SCOPECLOSE
  202 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 390
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 391
    access                go to state 374
    method_invoke         go to state 375


State 374

  200 statement: access .

    $default  reduce using rule 200 (statement)


State 375

  199 statement: method_invoke .

    $default  reduce using rule 199 (statement)


State 376

  111 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements . SCOPECLOSE
  202 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 392
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 391
    access                go to state 374
    method_invoke         go to state 375


State 377

  101 expression_statement: IDENTIFIER . expression_op RHS

    INCR           shift, and go to state 148
    DECR           shift, and go to state 149
    ASSN_MODULO    shift, and go to state 150
    ASSN_EXPONENT  shift, and go to state 151
    ASSN_DIV       shift, and go to state 152
    ASSN_MUL       shift, and go to state 153

    expression_op  go to state 154


State 378

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement . SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 393


State 379

  135 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 251
    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 252
    is           go to state 253
    func_invoke  go to state 127
    arguments    go to state 394
    get_invoke   go to state 128


State 380

  126 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 339
    NARRDEC  shift, and go to state 340
    AARRNUM  shift, and go to state 341
    AARRDEC  shift, and go to state 342

    analysis_arrays  go to state 395


State 381

  142 nextip: COMMA IDENTIFIER nextip .

    $default  reduce using rule 142 (nextip)


State 382

  116 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 372
    statements            go to state 396
    access                go to state 374
    method_invoke         go to state 375


State 383

  118 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 372
    statements            go to state 397
    access                go to state 374
    method_invoke         go to state 375


State 384

  182 taskscope: SCOPEOPEN taskscope SCOPECLOSE taskscope .

    $default  reduce using rule 182 (taskscope)


State 385

  217 in_statement: IN ARROW IDENTIFIER . SEMICOLON
  218             | IN ARROW IDENTIFIER . COLON arguments

    SEMICOLON  shift, and go to state 398
    COLON      shift, and go to state 399


State 386

  127 analyze_statement: COLON analysis_arrays analyze_statement .

    $default  reduce using rule 127 (analyze_statement)


State 387

  230 method_statements: SCOPEOPEN method_statements SCOPECLOSE .

    $default  reduce using rule 230 (method_statements)


State 388

  196 statement: BREAK SEMICOLON .

    $default  reduce using rule 196 (statement)


State 389

  197 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 197 (statement)


State 390

  114 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 114 (when_statement)


State 391

  202 statements: statements statement .

    $default  reduce using rule 202 (statements)


State 392

  111 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 111 (while_loop)


State 393

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE . $@1 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 108 ($@1)

    $@1  go to state 400


State 394

  133 arguments: arguments . COMMA is
  135 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments . SEMICOLON

    COMMA      shift, and go to state 292
    SEMICOLON  shift, and go to state 401


State 395

  126 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 313
    COLON      shift, and go to state 314

    analyze_statement  go to state 402


State 396

  116 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements . SCOPECLOSE
  202 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 403
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 391
    access                go to state 374
    method_invoke         go to state 375


State 397

  118 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements . SCOPECLOSE
  202 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 404
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 391
    access                go to state 374
    method_invoke         go to state 375


State 398

  217 in_statement: IN ARROW IDENTIFIER SEMICOLON .

    $default  reduce using rule 217 (in_statement)


State 399

  218 in_statement: IN ARROW IDENTIFIER COLON . arguments

    NULL_ARGS         shift, and go to state 251
    TID               shift, and go to state 114
    GET               shift, and go to state 115
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 116
    INTEGERLITERAL    shift, and go to state 117
    STRINGLITERAL     shift, and go to state 118
    CHARACTERLITERAL  shift, and go to state 119
    BOOLEANLITERAL    shift, and go to state 120
    FLOATLITERAL      shift, and go to state 121
    IDENTIFIER        shift, and go to state 122
    ROUNDOPEN         shift, and go to state 123

    T            go to state 124
    constants    go to state 125
    RHS          go to state 252
    is           go to state 253
    func_invoke  go to state 127
    arguments    go to state 405
    get_invoke   go to state 128


State 400

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 406


State 401

  135 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON .

    $default  reduce using rule 135 (task_invoke)


State 402

  126 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement .

    $default  reduce using rule 126 (analyze_syntax)


State 403

  116 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 116 (when_statement)


State 404

  118 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 118 (when_default)


State 405

  133 arguments: arguments . COMMA is
  218 in_statement: IN ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 292

    $default  reduce using rule 218 (in_statement)


State 406

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 372
    statements            go to state 407
    access                go to state 374
    method_invoke         go to state 375


State 407

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements . SCOPECLOSE
  202 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 359
    CONTINUE       shift, and go to state 360
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 408
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 361
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 77
    expression_statement  go to state 78
    log                   go to state 362
    loop                  go to state 363
    for_loop              go to state 81
    while_loop            go to state 82
    conditional           go to state 364
    when_statement        go to state 84
    analyze_syntax        go to state 365
    func_invoke2          go to state 366
    func_invoke           go to state 87
    task_invoke           go to state 367
    sleep                 go to state 368
    input                 go to state 369
    return_statement      go to state 370
    output                go to state 371
    statement             go to state 391
    access                go to state 374
    method_invoke         go to state 375


State 408

  109 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 109 (for_loop)
