Terminals unused in grammar

    START
    LEXERROR


Rules useless in parser due to conflicts

  117 is: IDENTIFIER
  118   | constants
  119   | func_invoke


State 33 conflicts: 23 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 217 conflicts: 36 reduce/reduce
State 264 conflicts: 2 reduce/reduce
State 265 conflicts: 2 reduce/reduce
State 268 conflicts: 2 reduce/reduce
State 282 conflicts: 1 shift/reduce
State 283 conflicts: 1 shift/reduce
State 300 conflicts: 23 shift/reduce
State 386 conflicts: 23 shift/reduce


Grammar

    0 $accept: begin $end

    1 expression_op: ASSN_DIV
    2              | ASSN_EXPONENT
    3              | ASSN_MODULO
    4              | ASSN_MUL
    5              | INCR
    6              | DECR

    7 comparison_op: LT
    8              | GT
    9              | GTEQ
   10              | LTEQ
   11              | NOT_EQ
   12              | EQUAL_TWO

   13 arithmetic_op: ADD
   14              | SUB
   15              | MUL
   16              | DIV
   17              | MODULO
   18              | EXPONENT

   19 logical_op: AND
   20           | OR

   21 nonAtomic_datatypes: nonAtomicArray
   22                    | nonAtomicSimple

   23 begin: %empty
   24      | begin declaration
   25      | begin function
   26      | begin task
   27      | begin type_declaration

   28 T: IDENTIFIER
   29  | func_invoke

   30 all_ops: arithmetic_op
   31        | comparison_op
   32        | logical_op
   33        | HASH

   34 constants: INTEGERLITERAL
   35          | CHARACTERLITERAL
   36          | FLOATLITERAL
   37          | BOOLEANLITERAL
   38          | STRINGLITERAL

   39 next: RHS all_ops next
   40     | RHS

   41 RHS: constants
   42    | T
   43    | ROUNDOPEN RHS all_ops next ROUNDCLOSE
   44    | ROUNDOPEN RHS ROUNDCLOSE
   45    | NEG ROUNDOPEN RHS ROUNDCLOSE
   46    | get_invoke

   47 nonAtomicSimple: NNUM
   48                | NDEC
   49                | NBOOL
   50                | NLET
   51                | NTEXT
   52                | NVOID

   53 atomicSimple: ANUM
   54             | ADEC
   55             | ABOOL
   56             | ALET
   57             | ATEXT

   58 nonAtomicArray: NARRNUM
   59               | NARRDEC
   60               | NARRBOOL
   61               | NARRLET
   62               | NARRTEXT

   63 atomicArray: AARRNUM
   64            | AARRDEC
   65            | AARRBOOL
   66            | AARRLET
   67            | AARRTEXT

   68 declaration: declarationStmt SEMICOLON
   69            | declaration declarationStmt SEMICOLON

   70 simpleDatatype: nonAtomicSimple
   71               | atomicSimple
   72               | UDATATYPE
   73               | ATOMIC AUDATATYPE

   74 arrayDatatype: nonAtomicArray
   75              | atomicArray

   76 declarationStmt: simpleDatatype simpleList
   77                | arrayDatatype arrayList

   78 simpleList: IDENTIFIER
   79           | simpleList COMMA IDENTIFIER
   80           | IDENTIFIER EQ RHS
   81           | simpleList COMMA IDENTIFIER EQ RHS

   82 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   83          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   84          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS
   85          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

   86 dimlist: dimlist COMMA INTEGERLITERAL
   87        | INTEGERLITERAL

   88 assignment_statement: IDENTIFIER EQ RHS

   89 expression_statement: IDENTIFIER expression_op RHS

   90 log: assignment_statement SEMICOLON
   91    | expression_statement SEMICOLON

   92 both_assignment: assignment_statement
   93                | declarationStmt

   94 loop: for_loop
   95     | while_loop

   96 $@1: %empty

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

   98 $@2: %empty

   99 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

  100 conditional: when_statement when_default

  101 $@3: %empty

  102 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

  103 $@4: %empty

  104 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

  105 $@5: %empty

  106 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE
  107             | %empty

  108 analysis_arrays: NARRDEC
  109                | NARRNUM
  110                | AARRDEC
  111                | AARRNUM

  112 analyze_label: STRINGLITERAL
  113              | IDENTIFIER

  114 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

  115 analyze_statement: COLON analysis_arrays analyze_statement
  116                  | SEMICOLON

  117 is: IDENTIFIER
  118   | constants
  119   | func_invoke
  120   | RHS

  121 func_invoke: INVOKE IDENTIFIER COLON arguments SEMICOLON

  122 arguments: is
  123          | arguments COMMA is
  124          | NULL_ARGS

  125 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

  126 get_invoke: GET ARROW TIME

  127 get_statement: NDEC IDENTIFIER EQ get_invoke SEMICOLON
  128              | ADEC IDENTIFIER EQ get_invoke SEMICOLON

  129 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

  130 file_name: ARROW STRINGLITERAL
  131          | ARROW IDENTIFIER
  132          | %empty

  133 input: IP file_name COLON IDENTIFIER nextip

  134 nextip: COMMA IDENTIFIER nextip
  135       | SEMICOLON

  136 stringvalues: STRINGLITERAL
  137             | IDENTIFIER

  138 return_statement: RETURN RHS SEMICOLON

  139 output: OP COLON opstring file_name SEMICOLON

  140 opstring: stringvalues nextop

  141 nextop: HASH stringvalues nextop
  142       | %empty

  143 function: func_decl func_body
  144         | atomic_func_decl func_body

  145 func_args: IDENTIFIER
  146          | func_args COMMA IDENTIFIER

  147 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  148 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  149 func_body: SCOPEOPEN func_statements SCOPECLOSE

  150 func_statements: declaration func_statements
  151                | log func_statements
  152                | task_invoke func_statements
  153                | func_invoke func_statements
  154                | loop func_statements
  155                | return_statement func_statements
  156                | conditional func_statements
  157                | analyze_syntax func_statements
  158                | input func_statements
  159                | output func_statements
  160                | sleep func_statements
  161                | SCOPEOPEN func_statements SCOPECLOSE func_statements
  162                | get_statement func_statements
  163                | method_invoke func_statements
  164                | access func_statements
  165                | %empty

  166 $@6: %empty

  167 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

  168 tid_expr: NNUM IDENTIFIER EQ TID SEMICOLON
  169         | ANUM IDENTIFIER EQ TID SEMICOLON

  170 taskscope: declaration taskscope
  171          | log taskscope
  172          | conditional taskscope
  173          | loop taskscope
  174          | func_invoke taskscope
  175          | output taskscope
  176          | tid_expr taskscope
  177          | SCOPEOPEN taskscope SCOPECLOSE taskscope
  178          | sleep taskscope
  179          | method_invoke
  180          | access

  181 statement: declaration
  182          | log
  183          | conditional
  184          | loop
  185          | return_statement
  186          | func_invoke
  187          | task_invoke
  188          | analyze_syntax
  189          | output
  190          | sleep
  191          | BREAK SEMICOLON
  192          | CONTINUE SEMICOLON
  193          | input
  194          | method_invoke
  195          | access

  196 statements: statement
  197           | statements statement

  198 access: IDENTIFIER id

  199 id: ARROW IDENTIFIER
  200   | id ARROW IDENTIFIER

  201 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE

  202 attributes: attribute SEMICOLON
  203           | attributes attribute SEMICOLON

  204 attribute: simpleDatatype IDENTIFIER
  205          | arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

  206 methods: method
  207        | methods method

  208 method: func_decl SCOPEOPEN method_body SCOPECLOSE

  209 method_invoke: IDENTIFIER ARROW func_invoke
  210              | IDENTIFIER id ARROW func_invoke

  211 in_statement: IN ARROW IDENTIFIER SEMICOLON
  212             | IN ARROW func_invoke

  213 method_statements: declaration
  214                  | log
  215                  | task_invoke
  216                  | func_invoke
  217                  | loop
  218                  | return_statement
  219                  | conditional
  220                  | analyze_statement
  221                  | input
  222                  | output
  223                  | sleep
  224                  | SCOPEOPEN method_statements SCOPECLOSE
  225                  | get_statement
  226                  | in_statement
  227                  | method_invoke
  228                  | access

  229 method_body: method_statements
  230            | method_body method_statements


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN (258) 102
    REPEAT (259) 99
    ELSE_WHEN (260) 104
    DEFAULT (261) 106
    FOR (262) 97
    BREAK (263) 191
    CONTINUE (264) 192
    TASK (265) 167
    MAKE_PARALLEL (266) 125
    NULL_ARGS (267) 124
    TID (268) 168 169
    ANALYZE (269) 114
    GET (270) 126
    SLEEP (271) 129
    TIME (272) 126
    START (273)
    RETURN (274) 138
    TYPE (275) 201
    ATOMIC (276) 73 148
    IN (277) 211 212
    FUNC (278) 147 148
    INVOKE (279) 121
    IP (280) 133
    OP (281) 139
    DIV (282) 16
    ADD (283) 13
    SUB (284) 14
    MUL (285) 15
    EXPONENT (286) 18
    MODULO (287) 17
    ARROW (288) 126 130 131 199 200 209 210 211 212
    EQ (289) 80 81 84 85 88 127 128 168 169
    INCR (290) 5
    DECR (291) 6
    ASSN_MODULO (292) 3
    ASSN_EXPONENT (293) 2
    ASSN_DIV (294) 1
    ASSN_MUL (295) 4
    AND (296) 19
    OR (297) 20
    GT (298) 8
    LT (299) 7
    GTEQ (300) 9
    LTEQ (301) 10
    NOT_EQ (302) 11
    NEG (303) 45
    EQUAL_TWO (304) 12
    INTEGERLITERAL (305) 34 86 87 125
    STRINGLITERAL (306) 38 112 130 136
    CHARACTERLITERAL (307) 35
    BOOLEANLITERAL (308) 37
    FLOATLITERAL (309) 36 129
    COMMA (310) 79 81 83 85 86 123 134 146
    SEMICOLON (311) 68 69 90 91 97 116 121 125 127 128 129 135 138 139 168 169 191 192 202 203 211
    COLON (312) 114 115 121 125 133 139 147 148 167
    IDENTIFIER (313) 28 78 79 80 81 82 83 84 85 88 89 113 117 121 125 127 128 131 133 134 137 145 146 147 148 167 168 169 198 199 200 204 205 209 210 211
    SCOPEOPEN (314) 97 99 102 104 106 149 161 167 177 201 208 224
    SCOPECLOSE (315) 97 99 102 104 106 149 161 167 177 201 208 224
    ROUNDOPEN (316) 43 44 45 129
    ROUNDCLOSE (317) 43 44 45 129
    SQUAREOPEN (318) 82 83 84 85 97 99 102 104 106 205
    SQUARECLOSE (319) 82 83 84 85 97 99 102 104 106 205
    HASH (320) 33 141
    LEXERROR (321)
    NNUM (322) 47 168
    NDEC (323) 48 127
    NBOOL (324) 49
    NLET (325) 50
    NTEXT (326) 51
    NVOID (327) 52
    NARRNUM (328) 58 109
    NARRDEC (329) 59 108
    NARRBOOL (330) 60
    NARRLET (331) 61
    NARRTEXT (332) 62
    ANUM (333) 53 169
    ADEC (334) 54 128
    ABOOL (335) 55
    ALET (336) 56
    ATEXT (337) 57
    AARRNUM (338) 63 111
    AARRDEC (339) 64 110
    AARRBOOL (340) 65
    AARRLET (341) 66
    AARRTEXT (342) 67
    UDATATYPE (343) 72 201
    AUDATATYPE (344) 73


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    expression_op (91)
        on left: 1 2 3 4 5 6
        on right: 89
    comparison_op (92)
        on left: 7 8 9 10 11 12
        on right: 31
    arithmetic_op (93)
        on left: 13 14 15 16 17 18
        on right: 30
    logical_op (94)
        on left: 19 20
        on right: 32
    nonAtomic_datatypes (95)
        on left: 21 22
        on right: 147 148
    begin (96)
        on left: 23 24 25 26 27
        on right: 0 24 25 26 27
    T (97)
        on left: 28 29
        on right: 42
    all_ops (98)
        on left: 30 31 32 33
        on right: 39 43
    constants (99)
        on left: 34 35 36 37 38
        on right: 41 118
    next (100)
        on left: 39 40
        on right: 39 43
    RHS (101)
        on left: 41 42 43 44 45 46
        on right: 39 40 43 44 45 80 81 84 85 88 89 97 99 102 104 106 120 138
    nonAtomicSimple (102)
        on left: 47 48 49 50 51 52
        on right: 22 70
    atomicSimple (103)
        on left: 53 54 55 56 57
        on right: 71
    nonAtomicArray (104)
        on left: 58 59 60 61 62
        on right: 21 74
    atomicArray (105)
        on left: 63 64 65 66 67
        on right: 75
    declaration (106)
        on left: 68 69
        on right: 24 69 150 170 181 213
    simpleDatatype (107)
        on left: 70 71 72 73
        on right: 76 204
    arrayDatatype (108)
        on left: 74 75
        on right: 77 205
    declarationStmt (109)
        on left: 76 77
        on right: 68 69 93
    simpleList (110)
        on left: 78 79 80 81
        on right: 76 79 81
    arrayList (111)
        on left: 82 83 84 85
        on right: 77 83 85
    dimlist (112)
        on left: 86 87
        on right: 82 83 84 85 86 205
    assignment_statement (113)
        on left: 88
        on right: 90 92
    expression_statement (114)
        on left: 89
        on right: 91 97
    log (115)
        on left: 90 91
        on right: 151 171 182 214
    both_assignment (116)
        on left: 92 93
        on right: 97
    loop (117)
        on left: 94 95
        on right: 154 173 184 217
    for_loop (118)
        on left: 97
        on right: 94
    $@1 (119)
        on left: 96
        on right: 97
    while_loop (120)
        on left: 99
        on right: 95
    $@2 (121)
        on left: 98
        on right: 99
    conditional (122)
        on left: 100
        on right: 156 172 183 219
    when_statement (123)
        on left: 102 104
        on right: 100 104
    $@3 (124)
        on left: 101
        on right: 102
    $@4 (125)
        on left: 103
        on right: 104
    when_default (126)
        on left: 106 107
        on right: 100
    $@5 (127)
        on left: 105
        on right: 106
    analysis_arrays (128)
        on left: 108 109 110 111
        on right: 114 115
    analyze_label (129)
        on left: 112 113
        on right: 114
    analyze_syntax (130)
        on left: 114
        on right: 157 188
    analyze_statement (131)
        on left: 115 116
        on right: 114 115 220
    is (132)
        on left: 117 118 119 120
        on right: 122 123
    func_invoke (133)
        on left: 121
        on right: 29 119 153 174 186 209 210 212 216
    arguments (134)
        on left: 122 123 124
        on right: 121 123 125
    task_invoke (135)
        on left: 125
        on right: 152 187 215
    get_invoke (136)
        on left: 126
        on right: 46 127 128
    get_statement (137)
        on left: 127 128
        on right: 162 225
    sleep (138)
        on left: 129
        on right: 160 178 190 223
    file_name (139)
        on left: 130 131 132
        on right: 133 139
    input (140)
        on left: 133
        on right: 158 193 221
    nextip (141)
        on left: 134 135
        on right: 133 134
    stringvalues (142)
        on left: 136 137
        on right: 140 141
    return_statement (143)
        on left: 138
        on right: 155 185 218
    output (144)
        on left: 139
        on right: 159 175 189 222
    opstring (145)
        on left: 140
        on right: 139
    nextop (146)
        on left: 141 142
        on right: 140 141
    function (147)
        on left: 143 144
        on right: 25
    func_args (148)
        on left: 145 146
        on right: 146 147 148 167
    func_decl (149)
        on left: 147
        on right: 143 208
    atomic_func_decl (150)
        on left: 148
        on right: 144
    func_body (151)
        on left: 149
        on right: 143 144
    func_statements (152)
        on left: 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165
        on right: 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
    task (153)
        on left: 167
        on right: 26
    $@6 (154)
        on left: 166
        on right: 167
    tid_expr (155)
        on left: 168 169
        on right: 176
    taskscope (156)
        on left: 170 171 172 173 174 175 176 177 178 179 180
        on right: 167 170 171 172 173 174 175 176 177 178
    statement (157)
        on left: 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
        on right: 196 197
    statements (158)
        on left: 196 197
        on right: 97 99 102 104 106 197
    access (159)
        on left: 198
        on right: 164 180 195 228
    id (160)
        on left: 199 200
        on right: 198 200 210
    type_declaration (161)
        on left: 201
        on right: 27
    attributes (162)
        on left: 202 203
        on right: 201 203
    attribute (163)
        on left: 204 205
        on right: 202 203
    methods (164)
        on left: 206 207
        on right: 201 207
    method (165)
        on left: 208
        on right: 206 207
    method_invoke (166)
        on left: 209 210
        on right: 163 179 194 227
    in_statement (167)
        on left: 211 212
        on right: 226
    method_statements (168)
        on left: 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228
        on right: 224 229 230
    method_body (169)
        on left: 229 230
        on right: 208 230


State 0

    0 $accept: . begin $end

    $default  reduce using rule 23 (begin)

    begin  go to state 1


State 1

    0 $accept: begin . $end
   24 begin: begin . declaration
   25      | begin . function
   26      | begin . task
   27      | begin . type_declaration

    $end       shift, and go to state 2
    TASK       shift, and go to state 3
    TYPE       shift, and go to state 4
    ATOMIC     shift, and go to state 5
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple   go to state 29
    atomicSimple      go to state 30
    nonAtomicArray    go to state 31
    atomicArray       go to state 32
    declaration       go to state 33
    simpleDatatype    go to state 34
    arrayDatatype     go to state 35
    declarationStmt   go to state 36
    function          go to state 37
    func_decl         go to state 38
    atomic_func_decl  go to state 39
    task              go to state 40
    type_declaration  go to state 41


State 2

    0 $accept: begin $end .

    $default  accept


State 3

  167 task: TASK . IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 42


State 4

  201 type_declaration: TYPE . UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE

    UDATATYPE  shift, and go to state 43


State 5

   73 simpleDatatype: ATOMIC . AUDATATYPE
  148 atomic_func_decl: ATOMIC . FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    FUNC        shift, and go to state 44
    AUDATATYPE  shift, and go to state 45


State 6

  147 func_decl: FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 46


State 7

   47 nonAtomicSimple: NNUM .

    $default  reduce using rule 47 (nonAtomicSimple)


State 8

   48 nonAtomicSimple: NDEC .

    $default  reduce using rule 48 (nonAtomicSimple)


State 9

   49 nonAtomicSimple: NBOOL .

    $default  reduce using rule 49 (nonAtomicSimple)


State 10

   50 nonAtomicSimple: NLET .

    $default  reduce using rule 50 (nonAtomicSimple)


State 11

   51 nonAtomicSimple: NTEXT .

    $default  reduce using rule 51 (nonAtomicSimple)


State 12

   52 nonAtomicSimple: NVOID .

    $default  reduce using rule 52 (nonAtomicSimple)


State 13

   58 nonAtomicArray: NARRNUM .

    $default  reduce using rule 58 (nonAtomicArray)


State 14

   59 nonAtomicArray: NARRDEC .

    $default  reduce using rule 59 (nonAtomicArray)


State 15

   60 nonAtomicArray: NARRBOOL .

    $default  reduce using rule 60 (nonAtomicArray)


State 16

   61 nonAtomicArray: NARRLET .

    $default  reduce using rule 61 (nonAtomicArray)


State 17

   62 nonAtomicArray: NARRTEXT .

    $default  reduce using rule 62 (nonAtomicArray)


State 18

   53 atomicSimple: ANUM .

    $default  reduce using rule 53 (atomicSimple)


State 19

   54 atomicSimple: ADEC .

    $default  reduce using rule 54 (atomicSimple)


State 20

   55 atomicSimple: ABOOL .

    $default  reduce using rule 55 (atomicSimple)


State 21

   56 atomicSimple: ALET .

    $default  reduce using rule 56 (atomicSimple)


State 22

   57 atomicSimple: ATEXT .

    $default  reduce using rule 57 (atomicSimple)


State 23

   63 atomicArray: AARRNUM .

    $default  reduce using rule 63 (atomicArray)


State 24

   64 atomicArray: AARRDEC .

    $default  reduce using rule 64 (atomicArray)


State 25

   65 atomicArray: AARRBOOL .

    $default  reduce using rule 65 (atomicArray)


State 26

   66 atomicArray: AARRLET .

    $default  reduce using rule 66 (atomicArray)


State 27

   67 atomicArray: AARRTEXT .

    $default  reduce using rule 67 (atomicArray)


State 28

   72 simpleDatatype: UDATATYPE .

    $default  reduce using rule 72 (simpleDatatype)


State 29

   70 simpleDatatype: nonAtomicSimple .

    $default  reduce using rule 70 (simpleDatatype)


State 30

   71 simpleDatatype: atomicSimple .

    $default  reduce using rule 71 (simpleDatatype)


State 31

   74 arrayDatatype: nonAtomicArray .

    $default  reduce using rule 74 (arrayDatatype)


State 32

   75 arrayDatatype: atomicArray .

    $default  reduce using rule 75 (arrayDatatype)


State 33

   24 begin: begin declaration .
   69 declaration: declaration . declarationStmt SEMICOLON

    ATOMIC     shift, and go to state 47
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    ATOMIC     [reduce using rule 24 (begin)]
    NNUM       [reduce using rule 24 (begin)]
    NDEC       [reduce using rule 24 (begin)]
    NBOOL      [reduce using rule 24 (begin)]
    NLET       [reduce using rule 24 (begin)]
    NTEXT      [reduce using rule 24 (begin)]
    NVOID      [reduce using rule 24 (begin)]
    NARRNUM    [reduce using rule 24 (begin)]
    NARRDEC    [reduce using rule 24 (begin)]
    NARRBOOL   [reduce using rule 24 (begin)]
    NARRLET    [reduce using rule 24 (begin)]
    NARRTEXT   [reduce using rule 24 (begin)]
    ANUM       [reduce using rule 24 (begin)]
    ADEC       [reduce using rule 24 (begin)]
    ABOOL      [reduce using rule 24 (begin)]
    ALET       [reduce using rule 24 (begin)]
    ATEXT      [reduce using rule 24 (begin)]
    AARRNUM    [reduce using rule 24 (begin)]
    AARRDEC    [reduce using rule 24 (begin)]
    AARRBOOL   [reduce using rule 24 (begin)]
    AARRLET    [reduce using rule 24 (begin)]
    AARRTEXT   [reduce using rule 24 (begin)]
    UDATATYPE  [reduce using rule 24 (begin)]
    $default   reduce using rule 24 (begin)

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 34
    arrayDatatype    go to state 35
    declarationStmt  go to state 48


State 34

   76 declarationStmt: simpleDatatype . simpleList

    IDENTIFIER  shift, and go to state 49

    simpleList  go to state 50


State 35

   77 declarationStmt: arrayDatatype . arrayList

    IDENTIFIER  shift, and go to state 51

    arrayList  go to state 52


State 36

   68 declaration: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 37

   25 begin: begin function .

    $default  reduce using rule 25 (begin)


State 38

  143 function: func_decl . func_body

    SCOPEOPEN  shift, and go to state 54

    func_body  go to state 55


State 39

  144 function: atomic_func_decl . func_body

    SCOPEOPEN  shift, and go to state 54

    func_body  go to state 56


State 40

   26 begin: begin task .

    $default  reduce using rule 26 (begin)


State 41

   27 begin: begin type_declaration .

    $default  reduce using rule 27 (begin)


State 42

  167 task: TASK IDENTIFIER . COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    COLON  shift, and go to state 57


State 43

  201 type_declaration: TYPE UDATATYPE . SCOPEOPEN attributes methods SCOPECLOSE

    SCOPEOPEN  shift, and go to state 58


State 44

  148 atomic_func_decl: ATOMIC FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 59


State 45

   73 simpleDatatype: ATOMIC AUDATATYPE .

    $default  reduce using rule 73 (simpleDatatype)


State 46

  147 func_decl: FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 60


State 47

   73 simpleDatatype: ATOMIC . AUDATATYPE

    AUDATATYPE  shift, and go to state 45


State 48

   69 declaration: declaration declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 49

   78 simpleList: IDENTIFIER .
   80           | IDENTIFIER . EQ RHS

    EQ  shift, and go to state 62

    $default  reduce using rule 78 (simpleList)


State 50

   76 declarationStmt: simpleDatatype simpleList .
   79 simpleList: simpleList . COMMA IDENTIFIER
   81           | simpleList . COMMA IDENTIFIER EQ RHS

    COMMA  shift, and go to state 63

    $default  reduce using rule 76 (declarationStmt)


State 51

   82 arrayList: IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   84          | IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 64


State 52

   77 declarationStmt: arrayDatatype arrayList .
   83 arrayList: arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   85          | arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    COMMA  shift, and go to state 65

    $default  reduce using rule 77 (declarationStmt)


State 53

   68 declaration: declarationStmt SEMICOLON .

    $default  reduce using rule 68 (declaration)


State 54

  149 func_body: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 97
    access                go to state 98
    method_invoke         go to state 99


State 55

  143 function: func_decl func_body .

    $default  reduce using rule 143 (function)


State 56

  144 function: atomic_func_decl func_body .

    $default  reduce using rule 144 (function)


State 57

  167 task: TASK IDENTIFIER COLON . func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 100

    func_args  go to state 101


State 58

  201 type_declaration: TYPE UDATATYPE SCOPEOPEN . attributes methods SCOPECLOSE

    ATOMIC     shift, and go to state 47
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 102
    arrayDatatype    go to state 103
    attributes       go to state 104
    attribute        go to state 105


State 59

  148 atomic_func_decl: ATOMIC FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 106


State 60

  147 func_decl: FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 100

    func_args  go to state 107


State 61

   69 declaration: declaration declarationStmt SEMICOLON .

    $default  reduce using rule 69 (declaration)


State 62

   80 simpleList: IDENTIFIER EQ . RHS

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 119
    func_invoke  go to state 120
    get_invoke   go to state 121


State 63

   79 simpleList: simpleList COMMA . IDENTIFIER
   81           | simpleList COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 122


State 64

   82 arrayList: IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   84          | IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 123

    dimlist  go to state 124


State 65

   83 arrayList: arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   85          | arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    IDENTIFIER  shift, and go to state 125


State 66

  102 when_statement: WHEN . SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 126


State 67

   99 while_loop: REPEAT . SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 127


State 68

   97 for_loop: FOR . SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 128


State 69

  125 task_invoke: MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 129


State 70

  114 analyze_syntax: ANALYZE . analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 130
    IDENTIFIER     shift, and go to state 131

    analyze_label  go to state 132


State 71

  129 sleep: SLEEP . ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

    ROUNDOPEN  shift, and go to state 133


State 72

  138 return_statement: RETURN . RHS SEMICOLON

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 134
    func_invoke  go to state 120
    get_invoke   go to state 121


State 73

  121 func_invoke: INVOKE . IDENTIFIER COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 135


State 74

  133 input: IP . file_name COLON IDENTIFIER nextip

    ARROW  shift, and go to state 136

    $default  reduce using rule 132 (file_name)

    file_name  go to state 137


State 75

  139 output: OP . COLON opstring file_name SEMICOLON

    COLON  shift, and go to state 138


State 76

   88 assignment_statement: IDENTIFIER . EQ RHS
   89 expression_statement: IDENTIFIER . expression_op RHS
  198 access: IDENTIFIER . id
  209 method_invoke: IDENTIFIER . ARROW func_invoke
  210              | IDENTIFIER . id ARROW func_invoke

    ARROW          shift, and go to state 139
    EQ             shift, and go to state 140
    INCR           shift, and go to state 141
    DECR           shift, and go to state 142
    ASSN_MODULO    shift, and go to state 143
    ASSN_EXPONENT  shift, and go to state 144
    ASSN_DIV       shift, and go to state 145
    ASSN_MUL       shift, and go to state 146

    expression_op  go to state 147
    id             go to state 148


State 77

  161 func_statements: SCOPEOPEN . func_statements SCOPECLOSE func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 149
    access                go to state 98
    method_invoke         go to state 99


State 78

   48 nonAtomicSimple: NDEC .
  127 get_statement: NDEC . IDENTIFIER EQ get_invoke SEMICOLON

    IDENTIFIER  shift, and go to state 150

    IDENTIFIER  [reduce using rule 48 (nonAtomicSimple)]


State 79

   54 atomicSimple: ADEC .
  128 get_statement: ADEC . IDENTIFIER EQ get_invoke SEMICOLON

    IDENTIFIER  shift, and go to state 151

    IDENTIFIER  [reduce using rule 54 (atomicSimple)]


State 80

   69 declaration: declaration . declarationStmt SEMICOLON
  150 func_statements: declaration . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 152
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 153
    access                go to state 98
    method_invoke         go to state 99


State 81

   90 log: assignment_statement . SEMICOLON

    SEMICOLON  shift, and go to state 154


State 82

   91 log: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 155


State 83

  151 func_statements: log . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 156
    access                go to state 98
    method_invoke         go to state 99


State 84

  154 func_statements: loop . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 157
    access                go to state 98
    method_invoke         go to state 99


State 85

   94 loop: for_loop .

    $default  reduce using rule 94 (loop)


State 86

   95 loop: while_loop .

    $default  reduce using rule 95 (loop)


State 87

  156 func_statements: conditional . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 158
    access                go to state 98
    method_invoke         go to state 99


State 88

  100 conditional: when_statement . when_default
  104 when_statement: when_statement . ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    ELSE_WHEN  shift, and go to state 159
    DEFAULT    shift, and go to state 160

    $default  reduce using rule 107 (when_default)

    when_default  go to state 161


State 89

  157 func_statements: analyze_syntax . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 162
    access                go to state 98
    method_invoke         go to state 99


State 90

  153 func_statements: func_invoke . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 163
    access                go to state 98
    method_invoke         go to state 99


State 91

  152 func_statements: task_invoke . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 164
    access                go to state 98
    method_invoke         go to state 99


State 92

  162 func_statements: get_statement . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 165
    access                go to state 98
    method_invoke         go to state 99


State 93

  160 func_statements: sleep . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 166
    access                go to state 98
    method_invoke         go to state 99


State 94

  158 func_statements: input . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 167
    access                go to state 98
    method_invoke         go to state 99


State 95

  155 func_statements: return_statement . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 168
    access                go to state 98
    method_invoke         go to state 99


State 96

  159 func_statements: output . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 169
    access                go to state 98
    method_invoke         go to state 99


State 97

  149 func_body: SCOPEOPEN func_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 170


State 98

  164 func_statements: access . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 171
    access                go to state 98
    method_invoke         go to state 99


State 99

  163 func_statements: method_invoke . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 172
    access                go to state 98
    method_invoke         go to state 99


State 100

  145 func_args: IDENTIFIER .

    $default  reduce using rule 145 (func_args)


State 101

  146 func_args: func_args . COMMA IDENTIFIER
  167 task: TASK IDENTIFIER COLON func_args . $@6 SCOPEOPEN taskscope SCOPECLOSE

    COMMA  shift, and go to state 173

    $default  reduce using rule 166 ($@6)

    $@6  go to state 174


State 102

  204 attribute: simpleDatatype . IDENTIFIER

    IDENTIFIER  shift, and go to state 175


State 103

  205 attribute: arrayDatatype . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

    IDENTIFIER  shift, and go to state 176


State 104

  201 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes . methods SCOPECLOSE
  203 attributes: attributes . attribute SEMICOLON

    ATOMIC     shift, and go to state 47
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 102
    arrayDatatype    go to state 103
    func_decl        go to state 177
    attribute        go to state 178
    methods          go to state 179
    method           go to state 180


State 105

  202 attributes: attribute . SEMICOLON

    SEMICOLON  shift, and go to state 181


State 106

  148 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 100

    func_args  go to state 182


State 107

  146 func_args: func_args . COMMA IDENTIFIER
  147 func_decl: FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 173
    COLON  shift, and go to state 183


State 108

  126 get_invoke: GET . ARROW TIME

    ARROW  shift, and go to state 184


State 109

   45 RHS: NEG . ROUNDOPEN RHS ROUNDCLOSE

    ROUNDOPEN  shift, and go to state 185


State 110

   34 constants: INTEGERLITERAL .

    $default  reduce using rule 34 (constants)


State 111

   38 constants: STRINGLITERAL .

    $default  reduce using rule 38 (constants)


State 112

   35 constants: CHARACTERLITERAL .

    $default  reduce using rule 35 (constants)


State 113

   37 constants: BOOLEANLITERAL .

    $default  reduce using rule 37 (constants)


State 114

   36 constants: FLOATLITERAL .

    $default  reduce using rule 36 (constants)


State 115

   28 T: IDENTIFIER .

    $default  reduce using rule 28 (T)


State 116

   43 RHS: ROUNDOPEN . RHS all_ops next ROUNDCLOSE
   44    | ROUNDOPEN . RHS ROUNDCLOSE

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 186
    func_invoke  go to state 120
    get_invoke   go to state 121


State 117

   42 RHS: T .

    $default  reduce using rule 42 (RHS)


State 118

   41 RHS: constants .

    $default  reduce using rule 41 (RHS)


State 119

   80 simpleList: IDENTIFIER EQ RHS .

    $default  reduce using rule 80 (simpleList)


State 120

   29 T: func_invoke .

    $default  reduce using rule 29 (T)


State 121

   46 RHS: get_invoke .

    $default  reduce using rule 46 (RHS)


State 122

   79 simpleList: simpleList COMMA IDENTIFIER .
   81           | simpleList COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 187

    $default  reduce using rule 79 (simpleList)


State 123

   87 dimlist: INTEGERLITERAL .

    $default  reduce using rule 87 (dimlist)


State 124

   82 arrayList: IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   84          | IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   86 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 188
    SQUARECLOSE  shift, and go to state 189


State 125

   83 arrayList: arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   85          | arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 190


State 126

  102 when_statement: WHEN SQUAREOPEN . RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 191
    func_invoke  go to state 120
    get_invoke   go to state 121


State 127

   99 while_loop: REPEAT SQUAREOPEN . RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 192
    func_invoke  go to state 120
    get_invoke   go to state 121


State 128

   97 for_loop: FOR SQUAREOPEN . both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    ATOMIC      shift, and go to state 47
    IDENTIFIER  shift, and go to state 193
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 194
    assignment_statement  go to state 195
    both_assignment       go to state 196


State 129

  125 task_invoke: MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 197


State 130

  112 analyze_label: STRINGLITERAL .

    $default  reduce using rule 112 (analyze_label)


State 131

  113 analyze_label: IDENTIFIER .

    $default  reduce using rule 113 (analyze_label)


State 132

  114 analyze_syntax: ANALYZE analyze_label . COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 198


State 133

  129 sleep: SLEEP ROUNDOPEN . FLOATLITERAL ROUNDCLOSE SEMICOLON

    FLOATLITERAL  shift, and go to state 199


State 134

  138 return_statement: RETURN RHS . SEMICOLON

    SEMICOLON  shift, and go to state 200


State 135

  121 func_invoke: INVOKE IDENTIFIER . COLON arguments SEMICOLON

    COLON  shift, and go to state 201


State 136

  130 file_name: ARROW . STRINGLITERAL
  131          | ARROW . IDENTIFIER

    STRINGLITERAL  shift, and go to state 202
    IDENTIFIER     shift, and go to state 203


State 137

  133 input: IP file_name . COLON IDENTIFIER nextip

    COLON  shift, and go to state 204


State 138

  139 output: OP COLON . opstring file_name SEMICOLON

    STRINGLITERAL  shift, and go to state 205
    IDENTIFIER     shift, and go to state 206

    stringvalues  go to state 207
    opstring      go to state 208


State 139

  199 id: ARROW . IDENTIFIER
  209 method_invoke: IDENTIFIER ARROW . func_invoke

    INVOKE      shift, and go to state 73
    IDENTIFIER  shift, and go to state 209

    func_invoke  go to state 210


State 140

   88 assignment_statement: IDENTIFIER EQ . RHS

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 211
    func_invoke  go to state 120
    get_invoke   go to state 121


State 141

    5 expression_op: INCR .

    $default  reduce using rule 5 (expression_op)


State 142

    6 expression_op: DECR .

    $default  reduce using rule 6 (expression_op)


State 143

    3 expression_op: ASSN_MODULO .

    $default  reduce using rule 3 (expression_op)


State 144

    2 expression_op: ASSN_EXPONENT .

    $default  reduce using rule 2 (expression_op)


State 145

    1 expression_op: ASSN_DIV .

    $default  reduce using rule 1 (expression_op)


State 146

    4 expression_op: ASSN_MUL .

    $default  reduce using rule 4 (expression_op)


State 147

   89 expression_statement: IDENTIFIER expression_op . RHS

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 212
    func_invoke  go to state 120
    get_invoke   go to state 121


State 148

  198 access: IDENTIFIER id .
  200 id: id . ARROW IDENTIFIER
  210 method_invoke: IDENTIFIER id . ARROW func_invoke

    ARROW  shift, and go to state 213

    $default  reduce using rule 198 (access)


State 149

  161 func_statements: SCOPEOPEN func_statements . SCOPECLOSE func_statements

    SCOPECLOSE  shift, and go to state 214


State 150

  127 get_statement: NDEC IDENTIFIER . EQ get_invoke SEMICOLON

    EQ  shift, and go to state 215


State 151

  128 get_statement: ADEC IDENTIFIER . EQ get_invoke SEMICOLON

    EQ  shift, and go to state 216


State 152

   68 declaration: declarationStmt . SEMICOLON
   69            | declaration declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 217


State 153

  150 func_statements: declaration func_statements .

    $default  reduce using rule 150 (func_statements)


State 154

   90 log: assignment_statement SEMICOLON .

    $default  reduce using rule 90 (log)


State 155

   91 log: expression_statement SEMICOLON .

    $default  reduce using rule 91 (log)


State 156

  151 func_statements: log func_statements .

    $default  reduce using rule 151 (func_statements)


State 157

  154 func_statements: loop func_statements .

    $default  reduce using rule 154 (func_statements)


State 158

  156 func_statements: conditional func_statements .

    $default  reduce using rule 156 (func_statements)


State 159

  104 when_statement: when_statement ELSE_WHEN . SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 218


State 160

  106 when_default: DEFAULT . SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 219


State 161

  100 conditional: when_statement when_default .

    $default  reduce using rule 100 (conditional)


State 162

  157 func_statements: analyze_syntax func_statements .

    $default  reduce using rule 157 (func_statements)


State 163

  153 func_statements: func_invoke func_statements .

    $default  reduce using rule 153 (func_statements)


State 164

  152 func_statements: task_invoke func_statements .

    $default  reduce using rule 152 (func_statements)


State 165

  162 func_statements: get_statement func_statements .

    $default  reduce using rule 162 (func_statements)


State 166

  160 func_statements: sleep func_statements .

    $default  reduce using rule 160 (func_statements)


State 167

  158 func_statements: input func_statements .

    $default  reduce using rule 158 (func_statements)


State 168

  155 func_statements: return_statement func_statements .

    $default  reduce using rule 155 (func_statements)


State 169

  159 func_statements: output func_statements .

    $default  reduce using rule 159 (func_statements)


State 170

  149 func_body: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 149 (func_body)


State 171

  164 func_statements: access func_statements .

    $default  reduce using rule 164 (func_statements)


State 172

  163 func_statements: method_invoke func_statements .

    $default  reduce using rule 163 (func_statements)


State 173

  146 func_args: func_args COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 220


State 174

  167 task: TASK IDENTIFIER COLON func_args $@6 . SCOPEOPEN taskscope SCOPECLOSE

    SCOPEOPEN  shift, and go to state 221


State 175

  204 attribute: simpleDatatype IDENTIFIER .

    $default  reduce using rule 204 (attribute)


State 176

  205 attribute: arrayDatatype IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE

    SQUAREOPEN  shift, and go to state 222


State 177

  208 method: func_decl . SCOPEOPEN method_body SCOPECLOSE

    SCOPEOPEN  shift, and go to state 223


State 178

  203 attributes: attributes attribute . SEMICOLON

    SEMICOLON  shift, and go to state 224


State 179

  201 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods . SCOPECLOSE
  207 methods: methods . method

    FUNC        shift, and go to state 6
    SCOPECLOSE  shift, and go to state 225

    func_decl  go to state 177
    method     go to state 226


State 180

  206 methods: method .

    $default  reduce using rule 206 (methods)


State 181

  202 attributes: attribute SEMICOLON .

    $default  reduce using rule 202 (attributes)


State 182

  146 func_args: func_args . COMMA IDENTIFIER
  148 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 173
    COLON  shift, and go to state 227


State 183

  147 func_decl: FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 228
    nonAtomicSimple      go to state 229
    nonAtomicArray       go to state 230


State 184

  126 get_invoke: GET ARROW . TIME

    TIME  shift, and go to state 231


State 185

   45 RHS: NEG ROUNDOPEN . RHS ROUNDCLOSE

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 232
    func_invoke  go to state 120
    get_invoke   go to state 121


State 186

   43 RHS: ROUNDOPEN RHS . all_ops next ROUNDCLOSE
   44    | ROUNDOPEN RHS . ROUNDCLOSE

    DIV         shift, and go to state 233
    ADD         shift, and go to state 234
    SUB         shift, and go to state 235
    MUL         shift, and go to state 236
    EXPONENT    shift, and go to state 237
    MODULO      shift, and go to state 238
    AND         shift, and go to state 239
    OR          shift, and go to state 240
    GT          shift, and go to state 241
    LT          shift, and go to state 242
    GTEQ        shift, and go to state 243
    LTEQ        shift, and go to state 244
    NOT_EQ      shift, and go to state 245
    EQUAL_TWO   shift, and go to state 246
    ROUNDCLOSE  shift, and go to state 247
    HASH        shift, and go to state 248

    comparison_op  go to state 249
    arithmetic_op  go to state 250
    logical_op     go to state 251
    all_ops        go to state 252


State 187

   81 simpleList: simpleList COMMA IDENTIFIER EQ . RHS

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 253
    func_invoke  go to state 120
    get_invoke   go to state 121


State 188

   86 dimlist: dimlist COMMA . INTEGERLITERAL

    INTEGERLITERAL  shift, and go to state 254


State 189

   82 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   84          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 255

    $default  reduce using rule 82 (arrayList)


State 190

   83 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   85          | arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 123

    dimlist  go to state 256


State 191

  102 when_statement: WHEN SQUAREOPEN RHS . SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 257


State 192

   99 while_loop: REPEAT SQUAREOPEN RHS . SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 258


State 193

   88 assignment_statement: IDENTIFIER . EQ RHS

    EQ  shift, and go to state 140


State 194

   93 both_assignment: declarationStmt .

    $default  reduce using rule 93 (both_assignment)


State 195

   92 both_assignment: assignment_statement .

    $default  reduce using rule 92 (both_assignment)


State 196

   97 for_loop: FOR SQUAREOPEN both_assignment . SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 259


State 197

  125 task_invoke: MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 260


State 198

  114 analyze_syntax: ANALYZE analyze_label COLON . analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 130
    IDENTIFIER     shift, and go to state 131

    analyze_label  go to state 261


State 199

  129 sleep: SLEEP ROUNDOPEN FLOATLITERAL . ROUNDCLOSE SEMICOLON

    ROUNDCLOSE  shift, and go to state 262


State 200

  138 return_statement: RETURN RHS SEMICOLON .

    $default  reduce using rule 138 (return_statement)


State 201

  121 func_invoke: INVOKE IDENTIFIER COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 263
    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 264
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 265
    RHS          go to state 266
    is           go to state 267
    func_invoke  go to state 268
    arguments    go to state 269
    get_invoke   go to state 121


State 202

  130 file_name: ARROW STRINGLITERAL .

    $default  reduce using rule 130 (file_name)


State 203

  131 file_name: ARROW IDENTIFIER .

    $default  reduce using rule 131 (file_name)


State 204

  133 input: IP file_name COLON . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 270


State 205

  136 stringvalues: STRINGLITERAL .

    $default  reduce using rule 136 (stringvalues)


State 206

  137 stringvalues: IDENTIFIER .

    $default  reduce using rule 137 (stringvalues)


State 207

  140 opstring: stringvalues . nextop

    HASH  shift, and go to state 271

    $default  reduce using rule 142 (nextop)

    nextop  go to state 272


State 208

  139 output: OP COLON opstring . file_name SEMICOLON

    ARROW  shift, and go to state 136

    $default  reduce using rule 132 (file_name)

    file_name  go to state 273


State 209

  199 id: ARROW IDENTIFIER .

    $default  reduce using rule 199 (id)


State 210

  209 method_invoke: IDENTIFIER ARROW func_invoke .

    $default  reduce using rule 209 (method_invoke)


State 211

   88 assignment_statement: IDENTIFIER EQ RHS .

    $default  reduce using rule 88 (assignment_statement)


State 212

   89 expression_statement: IDENTIFIER expression_op RHS .

    $default  reduce using rule 89 (expression_statement)


State 213

  200 id: id ARROW . IDENTIFIER
  210 method_invoke: IDENTIFIER id ARROW . func_invoke

    INVOKE      shift, and go to state 73
    IDENTIFIER  shift, and go to state 274

    func_invoke  go to state 275


State 214

  161 func_statements: SCOPEOPEN func_statements SCOPECLOSE . func_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 77
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 165 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 80
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 83
    loop                  go to state 84
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 87
    when_statement        go to state 88
    analyze_syntax        go to state 89
    func_invoke           go to state 90
    task_invoke           go to state 91
    get_statement         go to state 92
    sleep                 go to state 93
    input                 go to state 94
    return_statement      go to state 95
    output                go to state 96
    func_statements       go to state 276
    access                go to state 98
    method_invoke         go to state 99


State 215

  127 get_statement: NDEC IDENTIFIER EQ . get_invoke SEMICOLON

    GET  shift, and go to state 108

    get_invoke  go to state 277


State 216

  128 get_statement: ADEC IDENTIFIER EQ . get_invoke SEMICOLON

    GET  shift, and go to state 108

    get_invoke  go to state 278


State 217

   68 declaration: declarationStmt SEMICOLON .
   69            | declaration declarationStmt SEMICOLON .

    WHEN           reduce using rule 68 (declaration)
    WHEN           [reduce using rule 69 (declaration)]
    REPEAT         reduce using rule 68 (declaration)
    REPEAT         [reduce using rule 69 (declaration)]
    FOR            reduce using rule 68 (declaration)
    FOR            [reduce using rule 69 (declaration)]
    MAKE_PARALLEL  reduce using rule 68 (declaration)
    MAKE_PARALLEL  [reduce using rule 69 (declaration)]
    ANALYZE        reduce using rule 68 (declaration)
    ANALYZE        [reduce using rule 69 (declaration)]
    SLEEP          reduce using rule 68 (declaration)
    SLEEP          [reduce using rule 69 (declaration)]
    RETURN         reduce using rule 68 (declaration)
    RETURN         [reduce using rule 69 (declaration)]
    ATOMIC         reduce using rule 68 (declaration)
    ATOMIC         [reduce using rule 69 (declaration)]
    INVOKE         reduce using rule 68 (declaration)
    INVOKE         [reduce using rule 69 (declaration)]
    IP             reduce using rule 68 (declaration)
    IP             [reduce using rule 69 (declaration)]
    OP             reduce using rule 68 (declaration)
    OP             [reduce using rule 69 (declaration)]
    IDENTIFIER     reduce using rule 68 (declaration)
    IDENTIFIER     [reduce using rule 69 (declaration)]
    SCOPEOPEN      reduce using rule 68 (declaration)
    SCOPEOPEN      [reduce using rule 69 (declaration)]
    SCOPECLOSE     reduce using rule 68 (declaration)
    SCOPECLOSE     [reduce using rule 69 (declaration)]
    NNUM           reduce using rule 68 (declaration)
    NNUM           [reduce using rule 69 (declaration)]
    NDEC           reduce using rule 68 (declaration)
    NDEC           [reduce using rule 69 (declaration)]
    NBOOL          reduce using rule 68 (declaration)
    NBOOL          [reduce using rule 69 (declaration)]
    NLET           reduce using rule 68 (declaration)
    NLET           [reduce using rule 69 (declaration)]
    NTEXT          reduce using rule 68 (declaration)
    NTEXT          [reduce using rule 69 (declaration)]
    NVOID          reduce using rule 68 (declaration)
    NVOID          [reduce using rule 69 (declaration)]
    NARRNUM        reduce using rule 68 (declaration)
    NARRNUM        [reduce using rule 69 (declaration)]
    NARRDEC        reduce using rule 68 (declaration)
    NARRDEC        [reduce using rule 69 (declaration)]
    NARRBOOL       reduce using rule 68 (declaration)
    NARRBOOL       [reduce using rule 69 (declaration)]
    NARRLET        reduce using rule 68 (declaration)
    NARRLET        [reduce using rule 69 (declaration)]
    NARRTEXT       reduce using rule 68 (declaration)
    NARRTEXT       [reduce using rule 69 (declaration)]
    ANUM           reduce using rule 68 (declaration)
    ANUM           [reduce using rule 69 (declaration)]
    ADEC           reduce using rule 68 (declaration)
    ADEC           [reduce using rule 69 (declaration)]
    ABOOL          reduce using rule 68 (declaration)
    ABOOL          [reduce using rule 69 (declaration)]
    ALET           reduce using rule 68 (declaration)
    ALET           [reduce using rule 69 (declaration)]
    ATEXT          reduce using rule 68 (declaration)
    ATEXT          [reduce using rule 69 (declaration)]
    AARRNUM        reduce using rule 68 (declaration)
    AARRNUM        [reduce using rule 69 (declaration)]
    AARRDEC        reduce using rule 68 (declaration)
    AARRDEC        [reduce using rule 69 (declaration)]
    AARRBOOL       reduce using rule 68 (declaration)
    AARRBOOL       [reduce using rule 69 (declaration)]
    AARRLET        reduce using rule 68 (declaration)
    AARRLET        [reduce using rule 69 (declaration)]
    AARRTEXT       reduce using rule 68 (declaration)
    AARRTEXT       [reduce using rule 69 (declaration)]
    UDATATYPE      reduce using rule 68 (declaration)
    UDATATYPE      [reduce using rule 69 (declaration)]
    $default       reduce using rule 68 (declaration)


State 218

  104 when_statement: when_statement ELSE_WHEN SQUAREOPEN . RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 279
    func_invoke  go to state 120
    get_invoke   go to state 121


State 219

  106 when_default: DEFAULT SQUAREOPEN . RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 280
    func_invoke  go to state 120
    get_invoke   go to state 121


State 220

  146 func_args: func_args COMMA IDENTIFIER .

    $default  reduce using rule 146 (func_args)


State 221

  167 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN . taskscope SCOPECLOSE

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 292
    access                go to state 293
    method_invoke         go to state 294


State 222

  205 attribute: arrayDatatype IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 123

    dimlist  go to state 295


State 223

  208 method: func_decl SCOPEOPEN . method_body SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    IN             shift, and go to state 296
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    SEMICOLON      shift, and go to state 297
    COLON          shift, and go to state 298
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 299
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 300
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 301
    loop                  go to state 302
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 303
    when_statement        go to state 88
    analyze_statement     go to state 304
    func_invoke           go to state 305
    task_invoke           go to state 306
    get_statement         go to state 307
    sleep                 go to state 308
    input                 go to state 309
    return_statement      go to state 310
    output                go to state 311
    access                go to state 312
    method_invoke         go to state 313
    in_statement          go to state 314
    method_statements     go to state 315
    method_body           go to state 316


State 224

  203 attributes: attributes attribute SEMICOLON .

    $default  reduce using rule 203 (attributes)


State 225

  201 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE .

    $default  reduce using rule 201 (type_declaration)


State 226

  207 methods: methods method .

    $default  reduce using rule 207 (methods)


State 227

  148 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 317
    nonAtomicSimple      go to state 229
    nonAtomicArray       go to state 230


State 228

  147 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 147 (func_decl)


State 229

   22 nonAtomic_datatypes: nonAtomicSimple .

    $default  reduce using rule 22 (nonAtomic_datatypes)


State 230

   21 nonAtomic_datatypes: nonAtomicArray .

    $default  reduce using rule 21 (nonAtomic_datatypes)


State 231

  126 get_invoke: GET ARROW TIME .

    $default  reduce using rule 126 (get_invoke)


State 232

   45 RHS: NEG ROUNDOPEN RHS . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 318


State 233

   16 arithmetic_op: DIV .

    $default  reduce using rule 16 (arithmetic_op)


State 234

   13 arithmetic_op: ADD .

    $default  reduce using rule 13 (arithmetic_op)


State 235

   14 arithmetic_op: SUB .

    $default  reduce using rule 14 (arithmetic_op)


State 236

   15 arithmetic_op: MUL .

    $default  reduce using rule 15 (arithmetic_op)


State 237

   18 arithmetic_op: EXPONENT .

    $default  reduce using rule 18 (arithmetic_op)


State 238

   17 arithmetic_op: MODULO .

    $default  reduce using rule 17 (arithmetic_op)


State 239

   19 logical_op: AND .

    $default  reduce using rule 19 (logical_op)


State 240

   20 logical_op: OR .

    $default  reduce using rule 20 (logical_op)


State 241

    8 comparison_op: GT .

    $default  reduce using rule 8 (comparison_op)


State 242

    7 comparison_op: LT .

    $default  reduce using rule 7 (comparison_op)


State 243

    9 comparison_op: GTEQ .

    $default  reduce using rule 9 (comparison_op)


State 244

   10 comparison_op: LTEQ .

    $default  reduce using rule 10 (comparison_op)


State 245

   11 comparison_op: NOT_EQ .

    $default  reduce using rule 11 (comparison_op)


State 246

   12 comparison_op: EQUAL_TWO .

    $default  reduce using rule 12 (comparison_op)


State 247

   44 RHS: ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 44 (RHS)


State 248

   33 all_ops: HASH .

    $default  reduce using rule 33 (all_ops)


State 249

   31 all_ops: comparison_op .

    $default  reduce using rule 31 (all_ops)


State 250

   30 all_ops: arithmetic_op .

    $default  reduce using rule 30 (all_ops)


State 251

   32 all_ops: logical_op .

    $default  reduce using rule 32 (all_ops)


State 252

   43 RHS: ROUNDOPEN RHS all_ops . next ROUNDCLOSE

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    next         go to state 319
    RHS          go to state 320
    func_invoke  go to state 120
    get_invoke   go to state 121


State 253

   81 simpleList: simpleList COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 81 (simpleList)


State 254

   86 dimlist: dimlist COMMA INTEGERLITERAL .

    $default  reduce using rule 86 (dimlist)


State 255

   84 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 321
    func_invoke  go to state 120
    get_invoke   go to state 121


State 256

   83 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   85          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   86 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 188
    SQUARECLOSE  shift, and go to state 322


State 257

  102 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE . $@3 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 101 ($@3)

    $@3  go to state 323


State 258

   99 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE . $@2 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 98 ($@2)

    $@2  go to state 324


State 259

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON . RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 325
    func_invoke  go to state 120
    get_invoke   go to state 121


State 260

  125 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 326


State 261

  114 analyze_syntax: ANALYZE analyze_label COLON analyze_label . COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 327


State 262

  129 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 328


State 263

  124 arguments: NULL_ARGS .

    $default  reduce using rule 124 (arguments)


State 264

   28 T: IDENTIFIER .
  117 is: IDENTIFIER .

    COMMA      reduce using rule 28 (T)
    COMMA      [reduce using rule 117 (is)]
    SEMICOLON  reduce using rule 28 (T)
    SEMICOLON  [reduce using rule 117 (is)]
    $default   reduce using rule 28 (T)


State 265

   41 RHS: constants .
  118 is: constants .

    COMMA      reduce using rule 41 (RHS)
    COMMA      [reduce using rule 118 (is)]
    SEMICOLON  reduce using rule 41 (RHS)
    SEMICOLON  [reduce using rule 118 (is)]
    $default   reduce using rule 41 (RHS)


State 266

  120 is: RHS .

    $default  reduce using rule 120 (is)


State 267

  122 arguments: is .

    $default  reduce using rule 122 (arguments)


State 268

   29 T: func_invoke .
  119 is: func_invoke .

    COMMA      reduce using rule 29 (T)
    COMMA      [reduce using rule 119 (is)]
    SEMICOLON  reduce using rule 29 (T)
    SEMICOLON  [reduce using rule 119 (is)]
    $default   reduce using rule 29 (T)


State 269

  121 func_invoke: INVOKE IDENTIFIER COLON arguments . SEMICOLON
  123 arguments: arguments . COMMA is

    COMMA      shift, and go to state 329
    SEMICOLON  shift, and go to state 330


State 270

  133 input: IP file_name COLON IDENTIFIER . nextip

    COMMA      shift, and go to state 331
    SEMICOLON  shift, and go to state 332

    nextip  go to state 333


State 271

  141 nextop: HASH . stringvalues nextop

    STRINGLITERAL  shift, and go to state 205
    IDENTIFIER     shift, and go to state 206

    stringvalues  go to state 334


State 272

  140 opstring: stringvalues nextop .

    $default  reduce using rule 140 (opstring)


State 273

  139 output: OP COLON opstring file_name . SEMICOLON

    SEMICOLON  shift, and go to state 335


State 274

  200 id: id ARROW IDENTIFIER .

    $default  reduce using rule 200 (id)


State 275

  210 method_invoke: IDENTIFIER id ARROW func_invoke .

    $default  reduce using rule 210 (method_invoke)


State 276

  161 func_statements: SCOPEOPEN func_statements SCOPECLOSE func_statements .

    $default  reduce using rule 161 (func_statements)


State 277

  127 get_statement: NDEC IDENTIFIER EQ get_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 336


State 278

  128 get_statement: ADEC IDENTIFIER EQ get_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 337


State 279

  104 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS . SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 338


State 280

  106 when_default: DEFAULT SQUAREOPEN RHS . SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 339


State 281

  177 taskscope: SCOPEOPEN . taskscope SCOPECLOSE taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 340
    access                go to state 293
    method_invoke         go to state 294


State 282

   47 nonAtomicSimple: NNUM .
  168 tid_expr: NNUM . IDENTIFIER EQ TID SEMICOLON

    IDENTIFIER  shift, and go to state 341

    IDENTIFIER  [reduce using rule 47 (nonAtomicSimple)]


State 283

   53 atomicSimple: ANUM .
  169 tid_expr: ANUM . IDENTIFIER EQ TID SEMICOLON

    IDENTIFIER  shift, and go to state 342

    IDENTIFIER  [reduce using rule 53 (atomicSimple)]


State 284

   69 declaration: declaration . declarationStmt SEMICOLON
  170 taskscope: declaration . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 152
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 343
    access                go to state 293
    method_invoke         go to state 294


State 285

  171 taskscope: log . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 344
    access                go to state 293
    method_invoke         go to state 294


State 286

  173 taskscope: loop . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 345
    access                go to state 293
    method_invoke         go to state 294


State 287

  172 taskscope: conditional . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 346
    access                go to state 293
    method_invoke         go to state 294


State 288

  174 taskscope: func_invoke . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 347
    access                go to state 293
    method_invoke         go to state 294


State 289

  178 taskscope: sleep . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 348
    access                go to state 293
    method_invoke         go to state 294


State 290

  175 taskscope: output . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 349
    access                go to state 293
    method_invoke         go to state 294


State 291

  176 taskscope: tid_expr . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 350
    access                go to state 293
    method_invoke         go to state 294


State 292

  167 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 351


State 293

  180 taskscope: access .

    $default  reduce using rule 180 (taskscope)


State 294

  179 taskscope: method_invoke .

    $default  reduce using rule 179 (taskscope)


State 295

   86 dimlist: dimlist . COMMA INTEGERLITERAL
  205 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE

    COMMA        shift, and go to state 188
    SQUARECLOSE  shift, and go to state 352


State 296

  211 in_statement: IN . ARROW IDENTIFIER SEMICOLON
  212             | IN . ARROW func_invoke

    ARROW  shift, and go to state 353


State 297

  116 analyze_statement: SEMICOLON .

    $default  reduce using rule 116 (analyze_statement)


State 298

  115 analyze_statement: COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 354
    NARRDEC  shift, and go to state 355
    AARRNUM  shift, and go to state 356
    AARRDEC  shift, and go to state 357

    analysis_arrays  go to state 358


State 299

  224 method_statements: SCOPEOPEN . method_statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    IN             shift, and go to state 296
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    SEMICOLON      shift, and go to state 297
    COLON          shift, and go to state 298
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 299
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 300
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 301
    loop                  go to state 302
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 303
    when_statement        go to state 88
    analyze_statement     go to state 304
    func_invoke           go to state 305
    task_invoke           go to state 306
    get_statement         go to state 307
    sleep                 go to state 308
    input                 go to state 309
    return_statement      go to state 310
    output                go to state 311
    access                go to state 312
    method_invoke         go to state 313
    in_statement          go to state 314
    method_statements     go to state 359


State 300

   69 declaration: declaration . declarationStmt SEMICOLON
  213 method_statements: declaration .

    ATOMIC     shift, and go to state 47
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    ATOMIC     [reduce using rule 213 (method_statements)]
    NNUM       [reduce using rule 213 (method_statements)]
    NDEC       [reduce using rule 213 (method_statements)]
    NBOOL      [reduce using rule 213 (method_statements)]
    NLET       [reduce using rule 213 (method_statements)]
    NTEXT      [reduce using rule 213 (method_statements)]
    NVOID      [reduce using rule 213 (method_statements)]
    NARRNUM    [reduce using rule 213 (method_statements)]
    NARRDEC    [reduce using rule 213 (method_statements)]
    NARRBOOL   [reduce using rule 213 (method_statements)]
    NARRLET    [reduce using rule 213 (method_statements)]
    NARRTEXT   [reduce using rule 213 (method_statements)]
    ANUM       [reduce using rule 213 (method_statements)]
    ADEC       [reduce using rule 213 (method_statements)]
    ABOOL      [reduce using rule 213 (method_statements)]
    ALET       [reduce using rule 213 (method_statements)]
    ATEXT      [reduce using rule 213 (method_statements)]
    AARRNUM    [reduce using rule 213 (method_statements)]
    AARRDEC    [reduce using rule 213 (method_statements)]
    AARRBOOL   [reduce using rule 213 (method_statements)]
    AARRLET    [reduce using rule 213 (method_statements)]
    AARRTEXT   [reduce using rule 213 (method_statements)]
    UDATATYPE  [reduce using rule 213 (method_statements)]
    $default   reduce using rule 213 (method_statements)

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 34
    arrayDatatype    go to state 35
    declarationStmt  go to state 48


State 301

  214 method_statements: log .

    $default  reduce using rule 214 (method_statements)


State 302

  217 method_statements: loop .

    $default  reduce using rule 217 (method_statements)


State 303

  219 method_statements: conditional .

    $default  reduce using rule 219 (method_statements)


State 304

  220 method_statements: analyze_statement .

    $default  reduce using rule 220 (method_statements)


State 305

  216 method_statements: func_invoke .

    $default  reduce using rule 216 (method_statements)


State 306

  215 method_statements: task_invoke .

    $default  reduce using rule 215 (method_statements)


State 307

  225 method_statements: get_statement .

    $default  reduce using rule 225 (method_statements)


State 308

  223 method_statements: sleep .

    $default  reduce using rule 223 (method_statements)


State 309

  221 method_statements: input .

    $default  reduce using rule 221 (method_statements)


State 310

  218 method_statements: return_statement .

    $default  reduce using rule 218 (method_statements)


State 311

  222 method_statements: output .

    $default  reduce using rule 222 (method_statements)


State 312

  228 method_statements: access .

    $default  reduce using rule 228 (method_statements)


State 313

  227 method_statements: method_invoke .

    $default  reduce using rule 227 (method_statements)


State 314

  226 method_statements: in_statement .

    $default  reduce using rule 226 (method_statements)


State 315

  229 method_body: method_statements .

    $default  reduce using rule 229 (method_body)


State 316

  208 method: func_decl SCOPEOPEN method_body . SCOPECLOSE
  230 method_body: method_body . method_statements

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    MAKE_PARALLEL  shift, and go to state 69
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    IN             shift, and go to state 296
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    SEMICOLON      shift, and go to state 297
    COLON          shift, and go to state 298
    IDENTIFIER     shift, and go to state 76
    SCOPEOPEN      shift, and go to state 299
    SCOPECLOSE     shift, and go to state 360
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 78
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 79
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 300
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 301
    loop                  go to state 302
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 303
    when_statement        go to state 88
    analyze_statement     go to state 304
    func_invoke           go to state 305
    task_invoke           go to state 306
    get_statement         go to state 307
    sleep                 go to state 308
    input                 go to state 309
    return_statement      go to state 310
    output                go to state 311
    access                go to state 312
    method_invoke         go to state 313
    in_statement          go to state 314
    method_statements     go to state 361


State 317

  148 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 148 (atomic_func_decl)


State 318

   45 RHS: NEG ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 45 (RHS)


State 319

   43 RHS: ROUNDOPEN RHS all_ops next . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 362


State 320

   39 next: RHS . all_ops next
   40     | RHS .

    DIV        shift, and go to state 233
    ADD        shift, and go to state 234
    SUB        shift, and go to state 235
    MUL        shift, and go to state 236
    EXPONENT   shift, and go to state 237
    MODULO     shift, and go to state 238
    AND        shift, and go to state 239
    OR         shift, and go to state 240
    GT         shift, and go to state 241
    LT         shift, and go to state 242
    GTEQ       shift, and go to state 243
    LTEQ       shift, and go to state 244
    NOT_EQ     shift, and go to state 245
    EQUAL_TWO  shift, and go to state 246
    HASH       shift, and go to state 248

    $default  reduce using rule 40 (next)

    comparison_op  go to state 249
    arithmetic_op  go to state 250
    logical_op     go to state 251
    all_ops        go to state 363


State 321

   84 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 84 (arrayList)


State 322

   83 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   85          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 364

    $default  reduce using rule 83 (arrayList)


State 323

  102 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 365


State 324

   99 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 366


State 325

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS . SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 367


State 326

  125 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 368


State 327

  114 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON . analysis_arrays COLON analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 354
    NARRDEC  shift, and go to state 355
    AARRNUM  shift, and go to state 356
    AARRDEC  shift, and go to state 357

    analysis_arrays  go to state 369


State 328

  129 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON .

    $default  reduce using rule 129 (sleep)


State 329

  123 arguments: arguments COMMA . is

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 264
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 265
    RHS          go to state 266
    is           go to state 370
    func_invoke  go to state 268
    get_invoke   go to state 121


State 330

  121 func_invoke: INVOKE IDENTIFIER COLON arguments SEMICOLON .

    $default  reduce using rule 121 (func_invoke)


State 331

  134 nextip: COMMA . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 371


State 332

  135 nextip: SEMICOLON .

    $default  reduce using rule 135 (nextip)


State 333

  133 input: IP file_name COLON IDENTIFIER nextip .

    $default  reduce using rule 133 (input)


State 334

  141 nextop: HASH stringvalues . nextop

    HASH  shift, and go to state 271

    $default  reduce using rule 142 (nextop)

    nextop  go to state 372


State 335

  139 output: OP COLON opstring file_name SEMICOLON .

    $default  reduce using rule 139 (output)


State 336

  127 get_statement: NDEC IDENTIFIER EQ get_invoke SEMICOLON .

    $default  reduce using rule 127 (get_statement)


State 337

  128 get_statement: ADEC IDENTIFIER EQ get_invoke SEMICOLON .

    $default  reduce using rule 128 (get_statement)


State 338

  104 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE . $@4 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 103 ($@4)

    $@4  go to state 373


State 339

  106 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE . $@5 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 105 ($@5)

    $@5  go to state 374


State 340

  177 taskscope: SCOPEOPEN taskscope . SCOPECLOSE taskscope

    SCOPECLOSE  shift, and go to state 375


State 341

  168 tid_expr: NNUM IDENTIFIER . EQ TID SEMICOLON

    EQ  shift, and go to state 376


State 342

  169 tid_expr: ANUM IDENTIFIER . EQ TID SEMICOLON

    EQ  shift, and go to state 377


State 343

  170 taskscope: declaration taskscope .

    $default  reduce using rule 170 (taskscope)


State 344

  171 taskscope: log taskscope .

    $default  reduce using rule 171 (taskscope)


State 345

  173 taskscope: loop taskscope .

    $default  reduce using rule 173 (taskscope)


State 346

  172 taskscope: conditional taskscope .

    $default  reduce using rule 172 (taskscope)


State 347

  174 taskscope: func_invoke taskscope .

    $default  reduce using rule 174 (taskscope)


State 348

  178 taskscope: sleep taskscope .

    $default  reduce using rule 178 (taskscope)


State 349

  175 taskscope: output taskscope .

    $default  reduce using rule 175 (taskscope)


State 350

  176 taskscope: tid_expr taskscope .

    $default  reduce using rule 176 (taskscope)


State 351

  167 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE .

    $default  reduce using rule 167 (task)


State 352

  205 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .

    $default  reduce using rule 205 (attribute)


State 353

  211 in_statement: IN ARROW . IDENTIFIER SEMICOLON
  212             | IN ARROW . func_invoke

    INVOKE      shift, and go to state 73
    IDENTIFIER  shift, and go to state 378

    func_invoke  go to state 379


State 354

  109 analysis_arrays: NARRNUM .

    $default  reduce using rule 109 (analysis_arrays)


State 355

  108 analysis_arrays: NARRDEC .

    $default  reduce using rule 108 (analysis_arrays)


State 356

  111 analysis_arrays: AARRNUM .

    $default  reduce using rule 111 (analysis_arrays)


State 357

  110 analysis_arrays: AARRDEC .

    $default  reduce using rule 110 (analysis_arrays)


State 358

  115 analyze_statement: COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 297
    COLON      shift, and go to state 298

    analyze_statement  go to state 380


State 359

  224 method_statements: SCOPEOPEN method_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 381


State 360

  208 method: func_decl SCOPEOPEN method_body SCOPECLOSE .

    $default  reduce using rule 208 (method)


State 361

  230 method_body: method_body method_statements .

    $default  reduce using rule 230 (method_body)


State 362

   43 RHS: ROUNDOPEN RHS all_ops next ROUNDCLOSE .

    $default  reduce using rule 43 (RHS)


State 363

   39 next: RHS all_ops . next

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    next         go to state 382
    RHS          go to state 320
    func_invoke  go to state 120
    get_invoke   go to state 121


State 364

   85 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 115
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 118
    RHS          go to state 383
    func_invoke  go to state 120
    get_invoke   go to state 121


State 365

  102 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 397
    statements            go to state 398
    access                go to state 399
    method_invoke         go to state 400


State 366

   99 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 397
    statements            go to state 401
    access                go to state 399
    method_invoke         go to state 400


State 367

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON . expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    IDENTIFIER  shift, and go to state 402

    expression_statement  go to state 403


State 368

  125 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON arguments SEMICOLON

    COLON  shift, and go to state 404


State 369

  114 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays . COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 405


State 370

  123 arguments: arguments COMMA is .

    $default  reduce using rule 123 (arguments)


State 371

  134 nextip: COMMA IDENTIFIER . nextip

    COMMA      shift, and go to state 331
    SEMICOLON  shift, and go to state 332

    nextip  go to state 406


State 372

  141 nextop: HASH stringvalues nextop .

    $default  reduce using rule 141 (nextop)


State 373

  104 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 407


State 374

  106 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 408


State 375

  177 taskscope: SCOPEOPEN taskscope SCOPECLOSE . taskscope

    WHEN        shift, and go to state 66
    REPEAT      shift, and go to state 67
    FOR         shift, and go to state 68
    SLEEP       shift, and go to state 71
    ATOMIC      shift, and go to state 47
    INVOKE      shift, and go to state 73
    OP          shift, and go to state 75
    IDENTIFIER  shift, and go to state 76
    SCOPEOPEN   shift, and go to state 281
    NNUM        shift, and go to state 282
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 283
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 284
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 285
    loop                  go to state 286
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 287
    when_statement        go to state 88
    func_invoke           go to state 288
    sleep                 go to state 289
    output                go to state 290
    tid_expr              go to state 291
    taskscope             go to state 409
    access                go to state 293
    method_invoke         go to state 294


State 376

  168 tid_expr: NNUM IDENTIFIER EQ . TID SEMICOLON

    TID  shift, and go to state 410


State 377

  169 tid_expr: ANUM IDENTIFIER EQ . TID SEMICOLON

    TID  shift, and go to state 411


State 378

  211 in_statement: IN ARROW IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 412


State 379

  212 in_statement: IN ARROW func_invoke .

    $default  reduce using rule 212 (in_statement)


State 380

  115 analyze_statement: COLON analysis_arrays analyze_statement .

    $default  reduce using rule 115 (analyze_statement)


State 381

  224 method_statements: SCOPEOPEN method_statements SCOPECLOSE .

    $default  reduce using rule 224 (method_statements)


State 382

   39 next: RHS all_ops next .

    $default  reduce using rule 39 (next)


State 383

   85 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 85 (arrayList)


State 384

  191 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 413


State 385

  192 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 414


State 386

   69 declaration: declaration . declarationStmt SEMICOLON
  181 statement: declaration .

    ATOMIC     shift, and go to state 47
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    ATOMIC     [reduce using rule 181 (statement)]
    NNUM       [reduce using rule 181 (statement)]
    NDEC       [reduce using rule 181 (statement)]
    NBOOL      [reduce using rule 181 (statement)]
    NLET       [reduce using rule 181 (statement)]
    NTEXT      [reduce using rule 181 (statement)]
    NVOID      [reduce using rule 181 (statement)]
    NARRNUM    [reduce using rule 181 (statement)]
    NARRDEC    [reduce using rule 181 (statement)]
    NARRBOOL   [reduce using rule 181 (statement)]
    NARRLET    [reduce using rule 181 (statement)]
    NARRTEXT   [reduce using rule 181 (statement)]
    ANUM       [reduce using rule 181 (statement)]
    ADEC       [reduce using rule 181 (statement)]
    ABOOL      [reduce using rule 181 (statement)]
    ALET       [reduce using rule 181 (statement)]
    ATEXT      [reduce using rule 181 (statement)]
    AARRNUM    [reduce using rule 181 (statement)]
    AARRDEC    [reduce using rule 181 (statement)]
    AARRBOOL   [reduce using rule 181 (statement)]
    AARRLET    [reduce using rule 181 (statement)]
    AARRTEXT   [reduce using rule 181 (statement)]
    UDATATYPE  [reduce using rule 181 (statement)]
    $default   reduce using rule 181 (statement)

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 34
    arrayDatatype    go to state 35
    declarationStmt  go to state 48


State 387

  182 statement: log .

    $default  reduce using rule 182 (statement)


State 388

  184 statement: loop .

    $default  reduce using rule 184 (statement)


State 389

  183 statement: conditional .

    $default  reduce using rule 183 (statement)


State 390

  188 statement: analyze_syntax .

    $default  reduce using rule 188 (statement)


State 391

  186 statement: func_invoke .

    $default  reduce using rule 186 (statement)


State 392

  187 statement: task_invoke .

    $default  reduce using rule 187 (statement)


State 393

  190 statement: sleep .

    $default  reduce using rule 190 (statement)


State 394

  193 statement: input .

    $default  reduce using rule 193 (statement)


State 395

  185 statement: return_statement .

    $default  reduce using rule 185 (statement)


State 396

  189 statement: output .

    $default  reduce using rule 189 (statement)


State 397

  196 statements: statement .

    $default  reduce using rule 196 (statements)


State 398

  102 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements . SCOPECLOSE
  197 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 415
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 416
    access                go to state 399
    method_invoke         go to state 400


State 399

  195 statement: access .

    $default  reduce using rule 195 (statement)


State 400

  194 statement: method_invoke .

    $default  reduce using rule 194 (statement)


State 401

   99 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements . SCOPECLOSE
  197 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 417
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 416
    access                go to state 399
    method_invoke         go to state 400


State 402

   89 expression_statement: IDENTIFIER . expression_op RHS

    INCR           shift, and go to state 141
    DECR           shift, and go to state 142
    ASSN_MODULO    shift, and go to state 143
    ASSN_EXPONENT  shift, and go to state 144
    ASSN_DIV       shift, and go to state 145
    ASSN_MUL       shift, and go to state 146

    expression_op  go to state 147


State 403

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement . SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 418


State 404

  125 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 263
    GET               shift, and go to state 108
    INVOKE            shift, and go to state 73
    NEG               shift, and go to state 109
    INTEGERLITERAL    shift, and go to state 110
    STRINGLITERAL     shift, and go to state 111
    CHARACTERLITERAL  shift, and go to state 112
    BOOLEANLITERAL    shift, and go to state 113
    FLOATLITERAL      shift, and go to state 114
    IDENTIFIER        shift, and go to state 264
    ROUNDOPEN         shift, and go to state 116

    T            go to state 117
    constants    go to state 265
    RHS          go to state 266
    is           go to state 267
    func_invoke  go to state 268
    arguments    go to state 419
    get_invoke   go to state 121


State 405

  114 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 354
    NARRDEC  shift, and go to state 355
    AARRNUM  shift, and go to state 356
    AARRDEC  shift, and go to state 357

    analysis_arrays  go to state 420


State 406

  134 nextip: COMMA IDENTIFIER nextip .

    $default  reduce using rule 134 (nextip)


State 407

  104 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 397
    statements            go to state 421
    access                go to state 399
    method_invoke         go to state 400


State 408

  106 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 397
    statements            go to state 422
    access                go to state 399
    method_invoke         go to state 400


State 409

  177 taskscope: SCOPEOPEN taskscope SCOPECLOSE taskscope .

    $default  reduce using rule 177 (taskscope)


State 410

  168 tid_expr: NNUM IDENTIFIER EQ TID . SEMICOLON

    SEMICOLON  shift, and go to state 423


State 411

  169 tid_expr: ANUM IDENTIFIER EQ TID . SEMICOLON

    SEMICOLON  shift, and go to state 424


State 412

  211 in_statement: IN ARROW IDENTIFIER SEMICOLON .

    $default  reduce using rule 211 (in_statement)


State 413

  191 statement: BREAK SEMICOLON .

    $default  reduce using rule 191 (statement)


State 414

  192 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 192 (statement)


State 415

  102 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 102 (when_statement)


State 416

  197 statements: statements statement .

    $default  reduce using rule 197 (statements)


State 417

   99 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 99 (while_loop)


State 418

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE . $@1 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 96 ($@1)

    $@1  go to state 425


State 419

  123 arguments: arguments . COMMA is
  125 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments . SEMICOLON

    COMMA      shift, and go to state 329
    SEMICOLON  shift, and go to state 426


State 420

  114 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 297
    COLON      shift, and go to state 298

    analyze_statement  go to state 427


State 421

  104 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements . SCOPECLOSE
  197 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 428
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 416
    access                go to state 399
    method_invoke         go to state 400


State 422

  106 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements . SCOPECLOSE
  197 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 429
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 416
    access                go to state 399
    method_invoke         go to state 400


State 423

  168 tid_expr: NNUM IDENTIFIER EQ TID SEMICOLON .

    $default  reduce using rule 168 (tid_expr)


State 424

  169 tid_expr: ANUM IDENTIFIER EQ TID SEMICOLON .

    $default  reduce using rule 169 (tid_expr)


State 425

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 430


State 426

  125 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON .

    $default  reduce using rule 125 (task_invoke)


State 427

  114 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement .

    $default  reduce using rule 114 (analyze_syntax)


State 428

  104 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 104 (when_statement)


State 429

  106 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 106 (when_default)


State 430

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 397
    statements            go to state 431
    access                go to state 399
    method_invoke         go to state 400


State 431

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements . SCOPECLOSE
  197 statements: statements . statement

    WHEN           shift, and go to state 66
    REPEAT         shift, and go to state 67
    FOR            shift, and go to state 68
    BREAK          shift, and go to state 384
    CONTINUE       shift, and go to state 385
    MAKE_PARALLEL  shift, and go to state 69
    ANALYZE        shift, and go to state 70
    SLEEP          shift, and go to state 71
    RETURN         shift, and go to state 72
    ATOMIC         shift, and go to state 47
    INVOKE         shift, and go to state 73
    IP             shift, and go to state 74
    OP             shift, and go to state 75
    IDENTIFIER     shift, and go to state 76
    SCOPECLOSE     shift, and go to state 432
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 386
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 81
    expression_statement  go to state 82
    log                   go to state 387
    loop                  go to state 388
    for_loop              go to state 85
    while_loop            go to state 86
    conditional           go to state 389
    when_statement        go to state 88
    analyze_syntax        go to state 390
    func_invoke           go to state 391
    task_invoke           go to state 392
    sleep                 go to state 393
    input                 go to state 394
    return_statement      go to state 395
    output                go to state 396
    statement             go to state 416
    access                go to state 399
    method_invoke         go to state 400


State 432

   97 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 97 (for_loop)
