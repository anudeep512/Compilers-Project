Terminals unused in grammar

    LEXERROR


State 263 conflicts: 1 shift/reduce


Grammar

    0 $accept: begin $end

    1 all_datatypes: UDATATYPE
    2              | AUDATATYPE
    3              | NBOOL
    4              | NDEC
    5              | NNUM
    6              | NTEXT
    7              | NLET
    8              | ABOOL
    9              | ADEC
   10              | ALET
   11              | ATEXT
   12              | ANUM

   13 expression_op: ASSN_DIV
   14              | ASSN_EXPONENT
   15              | ASSN_MODULO
   16              | ASSN_MUL
   17              | INCR
   18              | DECR

   19 comparison_op: LT
   20              | GT
   21              | GTEQ
   22              | LTEQ
   23              | NOT_EQ
   24              | EQUAL_TWO

   25 arithmetic_op: ADD
   26              | SUB
   27              | MUL
   28              | DIV
   29              | MODULO
   30              | EXPONENT

   31 logical_op: AND
   32           | OR

   33 nonAtomic_datatypes: nonAtomicArray
   34                    | nonAtomicSimple

   35 begin: begin start_scope
   36      | %empty
   37      | begin declaration
   38      | begin function
   39      | begin task
   40      | begin type_declaration

   41 T: IDENTIFIER
   42  | func_invoke

   43 all_ops: arithmetic_op
   44        | comparison_op
   45        | logical_op
   46        | HASH
   47        | ARROW

   48 constants: INTEGERLITERAL
   49          | CHARACTERLITERAL
   50          | FLOATLITERAL
   51          | BOOLEANLITERAL
   52          | STRINGLITERAL

   53 next: RHS all_ops next
   54     | RHS

   55 RHS: constants
   56    | T
   57    | TID
   58    | get_invoke
   59    | ROUNDOPEN RHS all_ops next ROUNDCLOSE
   60    | ROUNDOPEN RHS ROUNDCLOSE
   61    | NEG ROUNDOPEN RHS ROUNDCLOSE

   62 nonAtomicSimple: NNUM
   63                | NDEC
   64                | NBOOL
   65                | NLET
   66                | NTEXT
   67                | NVOID

   68 atomicSimple: ANUM
   69             | ADEC
   70             | ABOOL
   71             | ALET
   72             | ATEXT

   73 nonAtomicArray: NARRNUM
   74               | NARRDEC
   75               | NARRBOOL
   76               | NARRLET
   77               | NARRTEXT

   78 atomicArray: AARRNUM
   79            | AARRDEC
   80            | AARRBOOL
   81            | AARRLET
   82            | AARRTEXT

   83 declaration: declarationStmt SEMICOLON

   84 simpleDatatype: nonAtomicSimple
   85               | atomicSimple
   86               | UDATATYPE
   87               | ATOMIC AUDATATYPE

   88 arrayDatatype: nonAtomicArray
   89              | atomicArray

   90 declarationStmt: simpleDatatype simpleList
   91                | arrayDatatype arrayList

   92 simpleList: IDENTIFIER
   93           | simpleList COMMA IDENTIFIER
   94           | IDENTIFIER EQ RHS
   95           | simpleList COMMA IDENTIFIER EQ RHS

   96 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   97          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   98          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS
   99          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

  100 dimlist: dimlist COMMA INTEGERLITERAL
  101        | INTEGERLITERAL

  102 LHS: IDENTIFIER
  103    | IDENTIFIER SQUAREOPEN arr_access SQUARECLOSE
  104    | access

  105 arr_access: dimlist
  106           | exprlist

  107 exprlist: arith_expr
  108         | exprlist COMMA arith_expr

  109 arith_operand: IDENTIFIER
  110              | INTEGERLITERAL
  111              | FLOATLITERAL
  112              | ROUNDOPEN arith_expr ROUNDCLOSE

  113 arith_expr: arith_operand arithmetic_op arith_operand

  114 assignment_statement: LHS EQ RHS

  115 expression_statement: LHS expression_op RHS

  116 log: assignment_statement SEMICOLON
  117    | expression_statement SEMICOLON

  118 g: IDENTIFIER EQ RHS
  119  | g COMMA IDENTIFIER EQ RHS

  120 both_assignment: assignment_statement
  121                | simpleDatatype g

  122 loop: for_loop
  123     | while_loop

  124 $@1: %empty

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

  126 $@2: %empty

  127 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

  128 conditional: when_statement when_default

  129 $@3: %empty

  130 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

  131 $@4: %empty

  132 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

  133 $@5: %empty

  134 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE
  135             | %empty

  136 analysis_arrays: NARRDEC
  137                | NARRNUM
  138                | AARRDEC
  139                | AARRNUM

  140 analyze_label: STRINGLITERAL
  141              | IDENTIFIER

  142 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax

  143 analyze_syntax: COLON analysis_arrays analyze_syntax
  144               | SEMICOLON

  145 func_invoke2: func_invoke SEMICOLON

  146 func_invoke: INVOKE IDENTIFIER COLON arguments
  147            | INVOKE IDENTIFIER COLON NULL_ARGS

  148 arguments: RHS
  149          | arguments COMMA RHS

  150 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON
  151            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

  152 get_invoke: GET ARROW TIME

  153 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

  154 file_name: ARROW STRINGLITERAL
  155          | ARROW IDENTIFIER
  156          | %empty

  157 input: IP file_name COLON IDENTIFIER nextip

  158 nextip: COMMA IDENTIFIER nextip
  159       | SEMICOLON

  160 stringvalues: STRINGLITERAL
  161             | IDENTIFIER

  162 return_statement: RETURN RHS SEMICOLON

  163 output: OP COLON opstring file_name SEMICOLON

  164 opstring: stringvalues nextop

  165 nextop: HASH stringvalues nextop
  166       | %empty

  167 function: func_decl func_body
  168         | atomic_func_decl func_body

  169 func_args: all_datatypes IDENTIFIER
  170          | func_args COMMA all_datatypes IDENTIFIER

  171 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  172          | FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

  173 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  174                 | ATOMIC FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

  175 func_body: SCOPEOPEN func_statements SCOPECLOSE

  176 func_scope: declaration
  177           | log
  178           | task_invoke
  179           | func_invoke2
  180           | loop
  181           | return_statement
  182           | conditional
  183           | analyze_statement
  184           | input
  185           | output
  186           | sleep
  187           | SCOPEOPEN func_statements SCOPECLOSE
  188           | method_invoke
  189           | access

  190 func_statements: func_scope
  191                | func_statements func_scope

  192 $@6: %empty

  193 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

  194 taskscope: declaration taskscope
  195          | log taskscope
  196          | conditional taskscope
  197          | loop taskscope
  198          | func_invoke2 taskscope
  199          | output taskscope
  200          | SCOPEOPEN taskscope SCOPECLOSE taskscope
  201          | sleep taskscope
  202          | method_invoke
  203          | access

  204 statement: declaration
  205          | log
  206          | conditional
  207          | loop
  208          | return_statement
  209          | func_invoke2
  210          | task_invoke
  211          | analyze_statement
  212          | output
  213          | sleep
  214          | BREAK SEMICOLON
  215          | CONTINUE SEMICOLON
  216          | input
  217          | method_invoke
  218          | access

  219 statements: statement
  220           | statements statement

  221 access: IDENTIFIER id

  222 id: ARROW IDENTIFIER
  223   | id ARROW IDENTIFIER

  224 start_scope: START SCOPEOPEN stt SCOPECLOSE

  225 start_body: declaration
  226           | log
  227           | conditional
  228           | loop
  229           | func_invoke2
  230           | task_invoke
  231           | analyze_syntax
  232           | output
  233           | input
  234           | SCOPEOPEN stt SCOPECLOSE
  235           | sleep

  236 stt: start_body
  237    | stt start_body

  238 $@7: %empty

  239 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE

  240 attributes: declarationStmt SEMICOLON
  241           | attributes declarationStmt SEMICOLON

  242 methods: methods method
  243        | %empty

  244 method: func_decl SCOPEOPEN method_body SCOPECLOSE

  245 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON arguments
  246              | IDENTIFIER id ARROW IDENTIFIER COLON arguments

  247 in_statement: IN ARROW IDENTIFIER SEMICOLON
  248             | IN ARROW IDENTIFIER COLON arguments

  249 method_statements: declaration
  250                  | log
  251                  | task_invoke
  252                  | func_invoke2
  253                  | loop
  254                  | return_statement
  255                  | conditional
  256                  | analyze_statement
  257                  | input
  258                  | output
  259                  | sleep
  260                  | SCOPEOPEN method_statements SCOPECLOSE
  261                  | in_statement
  262                  | method_invoke
  263                  | access

  264 method_body: method_statements
  265            | method_body method_statements


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN (258) 130
    REPEAT (259) 127
    ELSE_WHEN (260) 132
    DEFAULT (261) 134
    FOR (262) 125
    BREAK (263) 214
    CONTINUE (264) 215
    TASK (265) 193
    MAKE_PARALLEL (266) 150 151
    NULL_ARGS (267) 147 151 172 174
    TID (268) 57
    ANALYZE (269) 142
    GET (270) 152
    SLEEP (271) 153
    TIME (272) 152
    START (273) 224
    RETURN (274) 162
    TYPE (275) 239
    ATOMIC (276) 87 173 174
    IN (277) 247 248
    FUNC (278) 171 172 173 174
    INVOKE (279) 146 147
    IP (280) 157
    OP (281) 163
    DIV (282) 28
    ADD (283) 25
    SUB (284) 26
    MUL (285) 27
    EXPONENT (286) 30
    MODULO (287) 29
    ARROW (288) 47 152 154 155 222 223 245 246 247 248
    EQ (289) 94 95 98 99 114 118 119
    INCR (290) 17
    DECR (291) 18
    ASSN_MODULO (292) 15
    ASSN_EXPONENT (293) 14
    ASSN_DIV (294) 13
    ASSN_MUL (295) 16
    AND (296) 31
    OR (297) 32
    GT (298) 20
    LT (299) 19
    GTEQ (300) 21
    LTEQ (301) 22
    NOT_EQ (302) 23
    NEG (303) 61
    EQUAL_TWO (304) 24
    INTEGERLITERAL (305) 48 100 101 110 150 151
    STRINGLITERAL (306) 52 140 154 160
    CHARACTERLITERAL (307) 49
    BOOLEANLITERAL (308) 51
    FLOATLITERAL (309) 50 111 153
    COMMA (310) 93 95 97 99 100 108 119 149 158 170
    SEMICOLON (311) 83 116 117 125 144 145 150 151 153 159 162 163 214 215 240 241 247
    COLON (312) 142 143 146 147 150 151 157 163 171 172 173 174 193 245 246 248
    IDENTIFIER (313) 41 92 93 94 95 96 97 98 99 102 103 109 118 119 141 146 147 150 151 155 157 158 161 169 170 171 172 173 174 193 221 222 223 245 246 247 248
    SCOPEOPEN (314) 125 127 130 132 134 175 187 193 200 224 234 239 244 260
    SCOPECLOSE (315) 125 127 130 132 134 175 187 193 200 224 234 239 244 260
    ROUNDOPEN (316) 59 60 61 112 153
    ROUNDCLOSE (317) 59 60 61 112 153
    SQUAREOPEN (318) 96 97 98 99 103 125 127 130 132 134
    SQUARECLOSE (319) 96 97 98 99 103 125 127 130 132 134
    HASH (320) 46 165
    LEXERROR (321)
    NNUM (322) 5 62
    NDEC (323) 4 63
    NBOOL (324) 3 64
    NLET (325) 7 65
    NTEXT (326) 6 66
    NVOID (327) 67
    NARRNUM (328) 73 137
    NARRDEC (329) 74 136
    NARRBOOL (330) 75
    NARRLET (331) 76
    NARRTEXT (332) 77
    ANUM (333) 12 68
    ADEC (334) 9 69
    ABOOL (335) 8 70
    ALET (336) 10 71
    ATEXT (337) 11 72
    AARRNUM (338) 78 139
    AARRDEC (339) 79 138
    AARRBOOL (340) 80
    AARRLET (341) 81
    AARRTEXT (342) 82
    UDATATYPE (343) 1 86 239
    AUDATATYPE (344) 2 87


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    all_datatypes (91)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12
        on right: 169 170
    expression_op (92)
        on left: 13 14 15 16 17 18
        on right: 115
    comparison_op (93)
        on left: 19 20 21 22 23 24
        on right: 44
    arithmetic_op (94)
        on left: 25 26 27 28 29 30
        on right: 43 113
    logical_op (95)
        on left: 31 32
        on right: 45
    nonAtomic_datatypes (96)
        on left: 33 34
        on right: 171 172 173 174
    begin (97)
        on left: 35 36 37 38 39 40
        on right: 0 35 37 38 39 40
    T (98)
        on left: 41 42
        on right: 56
    all_ops (99)
        on left: 43 44 45 46 47
        on right: 53 59
    constants (100)
        on left: 48 49 50 51 52
        on right: 55
    next (101)
        on left: 53 54
        on right: 53 59
    RHS (102)
        on left: 55 56 57 58 59 60 61
        on right: 53 54 59 60 61 94 95 98 99 114 115 118 119 125 127 130 132 134 148 149 162
    nonAtomicSimple (103)
        on left: 62 63 64 65 66 67
        on right: 34 84
    atomicSimple (104)
        on left: 68 69 70 71 72
        on right: 85
    nonAtomicArray (105)
        on left: 73 74 75 76 77
        on right: 33 88
    atomicArray (106)
        on left: 78 79 80 81 82
        on right: 89
    declaration (107)
        on left: 83
        on right: 37 176 194 204 225 249
    simpleDatatype (108)
        on left: 84 85 86 87
        on right: 90 121
    arrayDatatype (109)
        on left: 88 89
        on right: 91
    declarationStmt (110)
        on left: 90 91
        on right: 83 240 241
    simpleList (111)
        on left: 92 93 94 95
        on right: 90 93 95
    arrayList (112)
        on left: 96 97 98 99
        on right: 91 97 99
    dimlist (113)
        on left: 100 101
        on right: 96 97 98 99 100 105
    LHS (114)
        on left: 102 103 104
        on right: 114 115
    arr_access (115)
        on left: 105 106
        on right: 103
    exprlist (116)
        on left: 107 108
        on right: 106 108
    arith_operand (117)
        on left: 109 110 111 112
        on right: 113
    arith_expr (118)
        on left: 113
        on right: 107 108 112
    assignment_statement (119)
        on left: 114
        on right: 116 120
    expression_statement (120)
        on left: 115
        on right: 117 125
    log (121)
        on left: 116 117
        on right: 177 195 205 226 250
    g (122)
        on left: 118 119
        on right: 119 121
    both_assignment (123)
        on left: 120 121
        on right: 125
    loop (124)
        on left: 122 123
        on right: 180 197 207 228 253
    for_loop (125)
        on left: 125
        on right: 122
    $@1 (126)
        on left: 124
        on right: 125
    while_loop (127)
        on left: 127
        on right: 123
    $@2 (128)
        on left: 126
        on right: 127
    conditional (129)
        on left: 128
        on right: 182 196 206 227 255
    when_statement (130)
        on left: 130 132
        on right: 128 132
    $@3 (131)
        on left: 129
        on right: 130
    $@4 (132)
        on left: 131
        on right: 132
    when_default (133)
        on left: 134 135
        on right: 128
    $@5 (134)
        on left: 133
        on right: 134
    analysis_arrays (135)
        on left: 136 137 138 139
        on right: 142 143
    analyze_label (136)
        on left: 140 141
        on right: 142
    analyze_statement (137)
        on left: 142
        on right: 183 211 256
    analyze_syntax (138)
        on left: 143 144
        on right: 142 143 231
    func_invoke2 (139)
        on left: 145
        on right: 179 198 209 229 252
    func_invoke (140)
        on left: 146 147
        on right: 42 145
    arguments (141)
        on left: 148 149
        on right: 146 149 150 245 246 248
    task_invoke (142)
        on left: 150 151
        on right: 178 210 230 251
    get_invoke (143)
        on left: 152
        on right: 58
    sleep (144)
        on left: 153
        on right: 186 201 213 235 259
    file_name (145)
        on left: 154 155 156
        on right: 157 163
    input (146)
        on left: 157
        on right: 184 216 233 257
    nextip (147)
        on left: 158 159
        on right: 157 158
    stringvalues (148)
        on left: 160 161
        on right: 164 165
    return_statement (149)
        on left: 162
        on right: 181 208 254
    output (150)
        on left: 163
        on right: 185 199 212 232 258
    opstring (151)
        on left: 164
        on right: 163
    nextop (152)
        on left: 165 166
        on right: 164 165
    function (153)
        on left: 167 168
        on right: 38
    func_args (154)
        on left: 169 170
        on right: 170 171 173 193
    func_decl (155)
        on left: 171 172
        on right: 167 244
    atomic_func_decl (156)
        on left: 173 174
        on right: 168
    func_body (157)
        on left: 175
        on right: 167 168
    func_scope (158)
        on left: 176 177 178 179 180 181 182 183 184 185 186 187 188 189
        on right: 190 191
    func_statements (159)
        on left: 190 191
        on right: 175 187 191
    task (160)
        on left: 193
        on right: 39
    $@6 (161)
        on left: 192
        on right: 193
    taskscope (162)
        on left: 194 195 196 197 198 199 200 201 202 203
        on right: 193 194 195 196 197 198 199 200 201
    statement (163)
        on left: 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218
        on right: 219 220
    statements (164)
        on left: 219 220
        on right: 125 127 130 132 134 220
    access (165)
        on left: 221
        on right: 104 189 203 218 263
    id (166)
        on left: 222 223
        on right: 221 223 246
    start_scope (167)
        on left: 224
        on right: 35
    start_body (168)
        on left: 225 226 227 228 229 230 231 232 233 234 235
        on right: 236 237
    stt (169)
        on left: 236 237
        on right: 224 234 237
    type_declaration (170)
        on left: 239
        on right: 40
    $@7 (171)
        on left: 238
        on right: 239
    attributes (172)
        on left: 240 241
        on right: 239 241
    methods (173)
        on left: 242 243
        on right: 239 242
    method (174)
        on left: 244
        on right: 242
    method_invoke (175)
        on left: 245 246
        on right: 188 202 217 262
    in_statement (176)
        on left: 247 248
        on right: 261
    method_statements (177)
        on left: 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263
        on right: 260 264 265
    method_body (178)
        on left: 264 265
        on right: 244 265


State 0

    0 $accept: . begin $end

    $default  reduce using rule 36 (begin)

    begin  go to state 1


State 1

    0 $accept: begin . $end
   35 begin: begin . start_scope
   37      | begin . declaration
   38      | begin . function
   39      | begin . task
   40      | begin . type_declaration

    $end       shift, and go to state 2
    TASK       shift, and go to state 3
    START      shift, and go to state 4
    TYPE       shift, and go to state 5
    ATOMIC     shift, and go to state 6
    FUNC       shift, and go to state 7
    NNUM       shift, and go to state 8
    NDEC       shift, and go to state 9
    NBOOL      shift, and go to state 10
    NLET       shift, and go to state 11
    NTEXT      shift, and go to state 12
    NVOID      shift, and go to state 13
    NARRNUM    shift, and go to state 14
    NARRDEC    shift, and go to state 15
    NARRBOOL   shift, and go to state 16
    NARRLET    shift, and go to state 17
    NARRTEXT   shift, and go to state 18
    ANUM       shift, and go to state 19
    ADEC       shift, and go to state 20
    ABOOL      shift, and go to state 21
    ALET       shift, and go to state 22
    ATEXT      shift, and go to state 23
    AARRNUM    shift, and go to state 24
    AARRDEC    shift, and go to state 25
    AARRBOOL   shift, and go to state 26
    AARRLET    shift, and go to state 27
    AARRTEXT   shift, and go to state 28
    UDATATYPE  shift, and go to state 29

    nonAtomicSimple   go to state 30
    atomicSimple      go to state 31
    nonAtomicArray    go to state 32
    atomicArray       go to state 33
    declaration       go to state 34
    simpleDatatype    go to state 35
    arrayDatatype     go to state 36
    declarationStmt   go to state 37
    function          go to state 38
    func_decl         go to state 39
    atomic_func_decl  go to state 40
    task              go to state 41
    start_scope       go to state 42
    type_declaration  go to state 43


State 2

    0 $accept: begin $end .

    $default  accept


State 3

  193 task: TASK . IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 44


State 4

  224 start_scope: START . SCOPEOPEN stt SCOPECLOSE

    SCOPEOPEN  shift, and go to state 45


State 5

  239 type_declaration: TYPE . UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE

    UDATATYPE  shift, and go to state 46


State 6

   87 simpleDatatype: ATOMIC . AUDATATYPE
  173 atomic_func_decl: ATOMIC . FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  174                 | ATOMIC . FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

    FUNC        shift, and go to state 47
    AUDATATYPE  shift, and go to state 48


State 7

  171 func_decl: FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  172          | FUNC . IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 49


State 8

   62 nonAtomicSimple: NNUM .

    $default  reduce using rule 62 (nonAtomicSimple)


State 9

   63 nonAtomicSimple: NDEC .

    $default  reduce using rule 63 (nonAtomicSimple)


State 10

   64 nonAtomicSimple: NBOOL .

    $default  reduce using rule 64 (nonAtomicSimple)


State 11

   65 nonAtomicSimple: NLET .

    $default  reduce using rule 65 (nonAtomicSimple)


State 12

   66 nonAtomicSimple: NTEXT .

    $default  reduce using rule 66 (nonAtomicSimple)


State 13

   67 nonAtomicSimple: NVOID .

    $default  reduce using rule 67 (nonAtomicSimple)


State 14

   73 nonAtomicArray: NARRNUM .

    $default  reduce using rule 73 (nonAtomicArray)


State 15

   74 nonAtomicArray: NARRDEC .

    $default  reduce using rule 74 (nonAtomicArray)


State 16

   75 nonAtomicArray: NARRBOOL .

    $default  reduce using rule 75 (nonAtomicArray)


State 17

   76 nonAtomicArray: NARRLET .

    $default  reduce using rule 76 (nonAtomicArray)


State 18

   77 nonAtomicArray: NARRTEXT .

    $default  reduce using rule 77 (nonAtomicArray)


State 19

   68 atomicSimple: ANUM .

    $default  reduce using rule 68 (atomicSimple)


State 20

   69 atomicSimple: ADEC .

    $default  reduce using rule 69 (atomicSimple)


State 21

   70 atomicSimple: ABOOL .

    $default  reduce using rule 70 (atomicSimple)


State 22

   71 atomicSimple: ALET .

    $default  reduce using rule 71 (atomicSimple)


State 23

   72 atomicSimple: ATEXT .

    $default  reduce using rule 72 (atomicSimple)


State 24

   78 atomicArray: AARRNUM .

    $default  reduce using rule 78 (atomicArray)


State 25

   79 atomicArray: AARRDEC .

    $default  reduce using rule 79 (atomicArray)


State 26

   80 atomicArray: AARRBOOL .

    $default  reduce using rule 80 (atomicArray)


State 27

   81 atomicArray: AARRLET .

    $default  reduce using rule 81 (atomicArray)


State 28

   82 atomicArray: AARRTEXT .

    $default  reduce using rule 82 (atomicArray)


State 29

   86 simpleDatatype: UDATATYPE .

    $default  reduce using rule 86 (simpleDatatype)


State 30

   84 simpleDatatype: nonAtomicSimple .

    $default  reduce using rule 84 (simpleDatatype)


State 31

   85 simpleDatatype: atomicSimple .

    $default  reduce using rule 85 (simpleDatatype)


State 32

   88 arrayDatatype: nonAtomicArray .

    $default  reduce using rule 88 (arrayDatatype)


State 33

   89 arrayDatatype: atomicArray .

    $default  reduce using rule 89 (arrayDatatype)


State 34

   37 begin: begin declaration .

    $default  reduce using rule 37 (begin)


State 35

   90 declarationStmt: simpleDatatype . simpleList

    IDENTIFIER  shift, and go to state 50

    simpleList  go to state 51


State 36

   91 declarationStmt: arrayDatatype . arrayList

    IDENTIFIER  shift, and go to state 52

    arrayList  go to state 53


State 37

   83 declaration: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 38

   38 begin: begin function .

    $default  reduce using rule 38 (begin)


State 39

  167 function: func_decl . func_body

    SCOPEOPEN  shift, and go to state 55

    func_body  go to state 56


State 40

  168 function: atomic_func_decl . func_body

    SCOPEOPEN  shift, and go to state 55

    func_body  go to state 57


State 41

   39 begin: begin task .

    $default  reduce using rule 39 (begin)


State 42

   35 begin: begin start_scope .

    $default  reduce using rule 35 (begin)


State 43

   40 begin: begin type_declaration .

    $default  reduce using rule 40 (begin)


State 44

  193 task: TASK IDENTIFIER . COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    COLON  shift, and go to state 58


State 45

  224 start_scope: START SCOPEOPEN . stt SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    SLEEP          shift, and go to state 63
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    COLON          shift, and go to state 69
    IDENTIFIER     shift, and go to state 70
    SCOPEOPEN      shift, and go to state 71
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 72
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 76
    loop                  go to state 77
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 80
    when_statement        go to state 81
    analyze_syntax        go to state 82
    func_invoke2          go to state 83
    func_invoke           go to state 84
    task_invoke           go to state 85
    sleep                 go to state 86
    input                 go to state 87
    output                go to state 88
    access                go to state 89
    start_body            go to state 90
    stt                   go to state 91


State 46

  239 type_declaration: TYPE UDATATYPE . $@7 SCOPEOPEN attributes methods SCOPECLOSE

    $default  reduce using rule 238 ($@7)

    $@7  go to state 92


State 47

  173 atomic_func_decl: ATOMIC FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  174                 | ATOMIC FUNC . IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 93


State 48

   87 simpleDatatype: ATOMIC AUDATATYPE .

    $default  reduce using rule 87 (simpleDatatype)


State 49

  171 func_decl: FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes
  172          | FUNC IDENTIFIER . COLON NULL_ARGS COLON nonAtomic_datatypes

    COLON  shift, and go to state 94


State 50

   92 simpleList: IDENTIFIER .
   94           | IDENTIFIER . EQ RHS

    EQ  shift, and go to state 95

    $default  reduce using rule 92 (simpleList)


State 51

   90 declarationStmt: simpleDatatype simpleList .
   93 simpleList: simpleList . COMMA IDENTIFIER
   95           | simpleList . COMMA IDENTIFIER EQ RHS

    COMMA  shift, and go to state 96

    $default  reduce using rule 90 (declarationStmt)


State 52

   96 arrayList: IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   98          | IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 97


State 53

   91 declarationStmt: arrayDatatype arrayList .
   97 arrayList: arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   99          | arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    COMMA  shift, and go to state 98

    $default  reduce using rule 91 (declarationStmt)


State 54

   83 declaration: declarationStmt SEMICOLON .

    $default  reduce using rule 83 (declaration)


State 55

  175 func_body: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPEOPEN      shift, and go to state 102
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 103
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 104
    loop                  go to state 105
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 106
    when_statement        go to state 81
    analyze_statement     go to state 107
    func_invoke2          go to state 108
    func_invoke           go to state 84
    task_invoke           go to state 109
    sleep                 go to state 110
    input                 go to state 111
    return_statement      go to state 112
    output                go to state 113
    func_scope            go to state 114
    func_statements       go to state 115
    access                go to state 116
    method_invoke         go to state 117


State 56

  167 function: func_decl func_body .

    $default  reduce using rule 167 (function)


State 57

  168 function: atomic_func_decl func_body .

    $default  reduce using rule 168 (function)


State 58

  193 task: TASK IDENTIFIER COLON . func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    NNUM        shift, and go to state 118
    NDEC        shift, and go to state 119
    NBOOL       shift, and go to state 120
    NLET        shift, and go to state 121
    NTEXT       shift, and go to state 122
    ANUM        shift, and go to state 123
    ADEC        shift, and go to state 124
    ABOOL       shift, and go to state 125
    ALET        shift, and go to state 126
    ATEXT       shift, and go to state 127
    UDATATYPE   shift, and go to state 128
    AUDATATYPE  shift, and go to state 129

    all_datatypes  go to state 130
    func_args      go to state 131


State 59

  130 when_statement: WHEN . SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 132


State 60

  127 while_loop: REPEAT . SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 133


State 61

  125 for_loop: FOR . SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 134


State 62

  150 task_invoke: MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON
  151            | MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    IDENTIFIER  shift, and go to state 135


State 63

  153 sleep: SLEEP . ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

    ROUNDOPEN  shift, and go to state 136


State 64

   87 simpleDatatype: ATOMIC . AUDATATYPE

    AUDATATYPE  shift, and go to state 48


State 65

  146 func_invoke: INVOKE . IDENTIFIER COLON arguments
  147            | INVOKE . IDENTIFIER COLON NULL_ARGS

    IDENTIFIER  shift, and go to state 137


State 66

  157 input: IP . file_name COLON IDENTIFIER nextip

    ARROW  shift, and go to state 138

    $default  reduce using rule 156 (file_name)

    file_name  go to state 139


State 67

  163 output: OP . COLON opstring file_name SEMICOLON

    COLON  shift, and go to state 140


State 68

  144 analyze_syntax: SEMICOLON .

    $default  reduce using rule 144 (analyze_syntax)


State 69

  143 analyze_syntax: COLON . analysis_arrays analyze_syntax

    NARRNUM  shift, and go to state 141
    NARRDEC  shift, and go to state 142
    AARRNUM  shift, and go to state 143
    AARRDEC  shift, and go to state 144

    analysis_arrays  go to state 145


State 70

  102 LHS: IDENTIFIER .
  103    | IDENTIFIER . SQUAREOPEN arr_access SQUARECLOSE
  221 access: IDENTIFIER . id

    ARROW       shift, and go to state 146
    SQUAREOPEN  shift, and go to state 147

    $default  reduce using rule 102 (LHS)

    id  go to state 148


State 71

  234 start_body: SCOPEOPEN . stt SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    SLEEP          shift, and go to state 63
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    COLON          shift, and go to state 69
    IDENTIFIER     shift, and go to state 70
    SCOPEOPEN      shift, and go to state 71
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 72
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 76
    loop                  go to state 77
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 80
    when_statement        go to state 81
    analyze_syntax        go to state 82
    func_invoke2          go to state 83
    func_invoke           go to state 84
    task_invoke           go to state 85
    sleep                 go to state 86
    input                 go to state 87
    output                go to state 88
    access                go to state 89
    start_body            go to state 90
    stt                   go to state 149


State 72

  225 start_body: declaration .

    $default  reduce using rule 225 (start_body)


State 73

  114 assignment_statement: LHS . EQ RHS
  115 expression_statement: LHS . expression_op RHS

    EQ             shift, and go to state 150
    INCR           shift, and go to state 151
    DECR           shift, and go to state 152
    ASSN_MODULO    shift, and go to state 153
    ASSN_EXPONENT  shift, and go to state 154
    ASSN_DIV       shift, and go to state 155
    ASSN_MUL       shift, and go to state 156

    expression_op  go to state 157


State 74

  116 log: assignment_statement . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 75

  117 log: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 159


State 76

  226 start_body: log .

    $default  reduce using rule 226 (start_body)


State 77

  228 start_body: loop .

    $default  reduce using rule 228 (start_body)


State 78

  122 loop: for_loop .

    $default  reduce using rule 122 (loop)


State 79

  123 loop: while_loop .

    $default  reduce using rule 123 (loop)


State 80

  227 start_body: conditional .

    $default  reduce using rule 227 (start_body)


State 81

  128 conditional: when_statement . when_default
  132 when_statement: when_statement . ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    ELSE_WHEN  shift, and go to state 160
    DEFAULT    shift, and go to state 161

    $default  reduce using rule 135 (when_default)

    when_default  go to state 162


State 82

  231 start_body: analyze_syntax .

    $default  reduce using rule 231 (start_body)


State 83

  229 start_body: func_invoke2 .

    $default  reduce using rule 229 (start_body)


State 84

  145 func_invoke2: func_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 163


State 85

  230 start_body: task_invoke .

    $default  reduce using rule 230 (start_body)


State 86

  235 start_body: sleep .

    $default  reduce using rule 235 (start_body)


State 87

  233 start_body: input .

    $default  reduce using rule 233 (start_body)


State 88

  232 start_body: output .

    $default  reduce using rule 232 (start_body)


State 89

  104 LHS: access .

    $default  reduce using rule 104 (LHS)


State 90

  236 stt: start_body .

    $default  reduce using rule 236 (stt)


State 91

  224 start_scope: START SCOPEOPEN stt . SCOPECLOSE
  237 stt: stt . start_body

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    SLEEP          shift, and go to state 63
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    COLON          shift, and go to state 69
    IDENTIFIER     shift, and go to state 70
    SCOPEOPEN      shift, and go to state 71
    SCOPECLOSE     shift, and go to state 164
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 72
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 76
    loop                  go to state 77
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 80
    when_statement        go to state 81
    analyze_syntax        go to state 82
    func_invoke2          go to state 83
    func_invoke           go to state 84
    task_invoke           go to state 85
    sleep                 go to state 86
    input                 go to state 87
    output                go to state 88
    access                go to state 89
    start_body            go to state 165


State 92

  239 type_declaration: TYPE UDATATYPE $@7 . SCOPEOPEN attributes methods SCOPECLOSE

    SCOPEOPEN  shift, and go to state 166


State 93

  173 atomic_func_decl: ATOMIC FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes
  174                 | ATOMIC FUNC IDENTIFIER . COLON NULL_ARGS COLON nonAtomic_datatypes

    COLON  shift, and go to state 167


State 94

  171 func_decl: FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes
  172          | FUNC IDENTIFIER COLON . NULL_ARGS COLON nonAtomic_datatypes

    NULL_ARGS   shift, and go to state 168
    NNUM        shift, and go to state 118
    NDEC        shift, and go to state 119
    NBOOL       shift, and go to state 120
    NLET        shift, and go to state 121
    NTEXT       shift, and go to state 122
    ANUM        shift, and go to state 123
    ADEC        shift, and go to state 124
    ABOOL       shift, and go to state 125
    ALET        shift, and go to state 126
    ATEXT       shift, and go to state 127
    UDATATYPE   shift, and go to state 128
    AUDATATYPE  shift, and go to state 129

    all_datatypes  go to state 130
    func_args      go to state 169


State 95

   94 simpleList: IDENTIFIER EQ . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 182
    func_invoke  go to state 183
    get_invoke   go to state 184


State 96

   93 simpleList: simpleList COMMA . IDENTIFIER
   95           | simpleList COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 185


State 97

   96 arrayList: IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   98          | IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 186

    dimlist  go to state 187


State 98

   97 arrayList: arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   99          | arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    IDENTIFIER  shift, and go to state 188


State 99

  142 analyze_statement: ANALYZE . analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax

    STRINGLITERAL  shift, and go to state 189
    IDENTIFIER     shift, and go to state 190

    analyze_label  go to state 191


State 100

  162 return_statement: RETURN . RHS SEMICOLON

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 192
    func_invoke  go to state 183
    get_invoke   go to state 184


State 101

  102 LHS: IDENTIFIER .
  103    | IDENTIFIER . SQUAREOPEN arr_access SQUARECLOSE
  221 access: IDENTIFIER . id
  245 method_invoke: IDENTIFIER . ARROW IDENTIFIER COLON arguments
  246              | IDENTIFIER . id ARROW IDENTIFIER COLON arguments

    ARROW       shift, and go to state 193
    SQUAREOPEN  shift, and go to state 147

    $default  reduce using rule 102 (LHS)

    id  go to state 194


State 102

  187 func_scope: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPEOPEN      shift, and go to state 102
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 103
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 104
    loop                  go to state 105
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 106
    when_statement        go to state 81
    analyze_statement     go to state 107
    func_invoke2          go to state 108
    func_invoke           go to state 84
    task_invoke           go to state 109
    sleep                 go to state 110
    input                 go to state 111
    return_statement      go to state 112
    output                go to state 113
    func_scope            go to state 114
    func_statements       go to state 195
    access                go to state 116
    method_invoke         go to state 117


State 103

  176 func_scope: declaration .

    $default  reduce using rule 176 (func_scope)


State 104

  177 func_scope: log .

    $default  reduce using rule 177 (func_scope)


State 105

  180 func_scope: loop .

    $default  reduce using rule 180 (func_scope)


State 106

  182 func_scope: conditional .

    $default  reduce using rule 182 (func_scope)


State 107

  183 func_scope: analyze_statement .

    $default  reduce using rule 183 (func_scope)


State 108

  179 func_scope: func_invoke2 .

    $default  reduce using rule 179 (func_scope)


State 109

  178 func_scope: task_invoke .

    $default  reduce using rule 178 (func_scope)


State 110

  186 func_scope: sleep .

    $default  reduce using rule 186 (func_scope)


State 111

  184 func_scope: input .

    $default  reduce using rule 184 (func_scope)


State 112

  181 func_scope: return_statement .

    $default  reduce using rule 181 (func_scope)


State 113

  185 func_scope: output .

    $default  reduce using rule 185 (func_scope)


State 114

  190 func_statements: func_scope .

    $default  reduce using rule 190 (func_statements)


State 115

  175 func_body: SCOPEOPEN func_statements . SCOPECLOSE
  191 func_statements: func_statements . func_scope

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPEOPEN      shift, and go to state 102
    SCOPECLOSE     shift, and go to state 196
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 103
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 104
    loop                  go to state 105
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 106
    when_statement        go to state 81
    analyze_statement     go to state 107
    func_invoke2          go to state 108
    func_invoke           go to state 84
    task_invoke           go to state 109
    sleep                 go to state 110
    input                 go to state 111
    return_statement      go to state 112
    output                go to state 113
    func_scope            go to state 197
    access                go to state 116
    method_invoke         go to state 117


State 116

  104 LHS: access .
  189 func_scope: access .

    EQ             reduce using rule 104 (LHS)
    INCR           reduce using rule 104 (LHS)
    DECR           reduce using rule 104 (LHS)
    ASSN_MODULO    reduce using rule 104 (LHS)
    ASSN_EXPONENT  reduce using rule 104 (LHS)
    ASSN_DIV       reduce using rule 104 (LHS)
    ASSN_MUL       reduce using rule 104 (LHS)
    $default       reduce using rule 189 (func_scope)


State 117

  188 func_scope: method_invoke .

    $default  reduce using rule 188 (func_scope)


State 118

    5 all_datatypes: NNUM .

    $default  reduce using rule 5 (all_datatypes)


State 119

    4 all_datatypes: NDEC .

    $default  reduce using rule 4 (all_datatypes)


State 120

    3 all_datatypes: NBOOL .

    $default  reduce using rule 3 (all_datatypes)


State 121

    7 all_datatypes: NLET .

    $default  reduce using rule 7 (all_datatypes)


State 122

    6 all_datatypes: NTEXT .

    $default  reduce using rule 6 (all_datatypes)


State 123

   12 all_datatypes: ANUM .

    $default  reduce using rule 12 (all_datatypes)


State 124

    9 all_datatypes: ADEC .

    $default  reduce using rule 9 (all_datatypes)


State 125

    8 all_datatypes: ABOOL .

    $default  reduce using rule 8 (all_datatypes)


State 126

   10 all_datatypes: ALET .

    $default  reduce using rule 10 (all_datatypes)


State 127

   11 all_datatypes: ATEXT .

    $default  reduce using rule 11 (all_datatypes)


State 128

    1 all_datatypes: UDATATYPE .

    $default  reduce using rule 1 (all_datatypes)


State 129

    2 all_datatypes: AUDATATYPE .

    $default  reduce using rule 2 (all_datatypes)


State 130

  169 func_args: all_datatypes . IDENTIFIER

    IDENTIFIER  shift, and go to state 198


State 131

  170 func_args: func_args . COMMA all_datatypes IDENTIFIER
  193 task: TASK IDENTIFIER COLON func_args . $@6 SCOPEOPEN taskscope SCOPECLOSE

    COMMA  shift, and go to state 199

    $default  reduce using rule 192 ($@6)

    $@6  go to state 200


State 132

  130 when_statement: WHEN SQUAREOPEN . RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 201
    func_invoke  go to state 183
    get_invoke   go to state 184


State 133

  127 while_loop: REPEAT SQUAREOPEN . RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 202
    func_invoke  go to state 183
    get_invoke   go to state 184


State 134

  125 for_loop: FOR SQUAREOPEN . both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    ATOMIC      shift, and go to state 64
    IDENTIFIER  shift, and go to state 70
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    simpleDatatype        go to state 203
    LHS                   go to state 204
    assignment_statement  go to state 205
    both_assignment       go to state 206
    access                go to state 89


State 135

  150 task_invoke: MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON
  151            | MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    COLON  shift, and go to state 207


State 136

  153 sleep: SLEEP ROUNDOPEN . FLOATLITERAL ROUNDCLOSE SEMICOLON

    FLOATLITERAL  shift, and go to state 208


State 137

  146 func_invoke: INVOKE IDENTIFIER . COLON arguments
  147            | INVOKE IDENTIFIER . COLON NULL_ARGS

    COLON  shift, and go to state 209


State 138

  154 file_name: ARROW . STRINGLITERAL
  155          | ARROW . IDENTIFIER

    STRINGLITERAL  shift, and go to state 210
    IDENTIFIER     shift, and go to state 211


State 139

  157 input: IP file_name . COLON IDENTIFIER nextip

    COLON  shift, and go to state 212


State 140

  163 output: OP COLON . opstring file_name SEMICOLON

    STRINGLITERAL  shift, and go to state 213
    IDENTIFIER     shift, and go to state 214

    stringvalues  go to state 215
    opstring      go to state 216


State 141

  137 analysis_arrays: NARRNUM .

    $default  reduce using rule 137 (analysis_arrays)


State 142

  136 analysis_arrays: NARRDEC .

    $default  reduce using rule 136 (analysis_arrays)


State 143

  139 analysis_arrays: AARRNUM .

    $default  reduce using rule 139 (analysis_arrays)


State 144

  138 analysis_arrays: AARRDEC .

    $default  reduce using rule 138 (analysis_arrays)


State 145

  143 analyze_syntax: COLON analysis_arrays . analyze_syntax

    SEMICOLON  shift, and go to state 68
    COLON      shift, and go to state 69

    analyze_syntax  go to state 217


State 146

  222 id: ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 218


State 147

  103 LHS: IDENTIFIER SQUAREOPEN . arr_access SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 219
    FLOATLITERAL    shift, and go to state 220
    IDENTIFIER      shift, and go to state 221
    ROUNDOPEN       shift, and go to state 222

    dimlist        go to state 223
    arr_access     go to state 224
    exprlist       go to state 225
    arith_operand  go to state 226
    arith_expr     go to state 227


State 148

  221 access: IDENTIFIER id .
  223 id: id . ARROW IDENTIFIER

    ARROW  shift, and go to state 228

    $default  reduce using rule 221 (access)


State 149

  234 start_body: SCOPEOPEN stt . SCOPECLOSE
  237 stt: stt . start_body

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    SLEEP          shift, and go to state 63
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    COLON          shift, and go to state 69
    IDENTIFIER     shift, and go to state 70
    SCOPEOPEN      shift, and go to state 71
    SCOPECLOSE     shift, and go to state 229
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 72
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 76
    loop                  go to state 77
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 80
    when_statement        go to state 81
    analyze_syntax        go to state 82
    func_invoke2          go to state 83
    func_invoke           go to state 84
    task_invoke           go to state 85
    sleep                 go to state 86
    input                 go to state 87
    output                go to state 88
    access                go to state 89
    start_body            go to state 165


State 150

  114 assignment_statement: LHS EQ . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 230
    func_invoke  go to state 183
    get_invoke   go to state 184


State 151

   17 expression_op: INCR .

    $default  reduce using rule 17 (expression_op)


State 152

   18 expression_op: DECR .

    $default  reduce using rule 18 (expression_op)


State 153

   15 expression_op: ASSN_MODULO .

    $default  reduce using rule 15 (expression_op)


State 154

   14 expression_op: ASSN_EXPONENT .

    $default  reduce using rule 14 (expression_op)


State 155

   13 expression_op: ASSN_DIV .

    $default  reduce using rule 13 (expression_op)


State 156

   16 expression_op: ASSN_MUL .

    $default  reduce using rule 16 (expression_op)


State 157

  115 expression_statement: LHS expression_op . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 231
    func_invoke  go to state 183
    get_invoke   go to state 184


State 158

  116 log: assignment_statement SEMICOLON .

    $default  reduce using rule 116 (log)


State 159

  117 log: expression_statement SEMICOLON .

    $default  reduce using rule 117 (log)


State 160

  132 when_statement: when_statement ELSE_WHEN . SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 232


State 161

  134 when_default: DEFAULT . SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 233


State 162

  128 conditional: when_statement when_default .

    $default  reduce using rule 128 (conditional)


State 163

  145 func_invoke2: func_invoke SEMICOLON .

    $default  reduce using rule 145 (func_invoke2)


State 164

  224 start_scope: START SCOPEOPEN stt SCOPECLOSE .

    $default  reduce using rule 224 (start_scope)


State 165

  237 stt: stt start_body .

    $default  reduce using rule 237 (stt)


State 166

  239 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN . attributes methods SCOPECLOSE

    ATOMIC     shift, and go to state 64
    NNUM       shift, and go to state 8
    NDEC       shift, and go to state 9
    NBOOL      shift, and go to state 10
    NLET       shift, and go to state 11
    NTEXT      shift, and go to state 12
    NVOID      shift, and go to state 13
    NARRNUM    shift, and go to state 14
    NARRDEC    shift, and go to state 15
    NARRBOOL   shift, and go to state 16
    NARRLET    shift, and go to state 17
    NARRTEXT   shift, and go to state 18
    ANUM       shift, and go to state 19
    ADEC       shift, and go to state 20
    ABOOL      shift, and go to state 21
    ALET       shift, and go to state 22
    ATEXT      shift, and go to state 23
    AARRNUM    shift, and go to state 24
    AARRDEC    shift, and go to state 25
    AARRBOOL   shift, and go to state 26
    AARRLET    shift, and go to state 27
    AARRTEXT   shift, and go to state 28
    UDATATYPE  shift, and go to state 29

    nonAtomicSimple  go to state 30
    atomicSimple     go to state 31
    nonAtomicArray   go to state 32
    atomicArray      go to state 33
    simpleDatatype   go to state 35
    arrayDatatype    go to state 36
    declarationStmt  go to state 234
    attributes       go to state 235


State 167

  173 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes
  174                 | ATOMIC FUNC IDENTIFIER COLON . NULL_ARGS COLON nonAtomic_datatypes

    NULL_ARGS   shift, and go to state 236
    NNUM        shift, and go to state 118
    NDEC        shift, and go to state 119
    NBOOL       shift, and go to state 120
    NLET        shift, and go to state 121
    NTEXT       shift, and go to state 122
    ANUM        shift, and go to state 123
    ADEC        shift, and go to state 124
    ABOOL       shift, and go to state 125
    ALET        shift, and go to state 126
    ATEXT       shift, and go to state 127
    UDATATYPE   shift, and go to state 128
    AUDATATYPE  shift, and go to state 129

    all_datatypes  go to state 130
    func_args      go to state 237


State 168

  172 func_decl: FUNC IDENTIFIER COLON NULL_ARGS . COLON nonAtomic_datatypes

    COLON  shift, and go to state 238


State 169

  170 func_args: func_args . COMMA all_datatypes IDENTIFIER
  171 func_decl: FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 199
    COLON  shift, and go to state 239


State 170

   57 RHS: TID .

    $default  reduce using rule 57 (RHS)


State 171

  152 get_invoke: GET . ARROW TIME

    ARROW  shift, and go to state 240


State 172

   61 RHS: NEG . ROUNDOPEN RHS ROUNDCLOSE

    ROUNDOPEN  shift, and go to state 241


State 173

   48 constants: INTEGERLITERAL .

    $default  reduce using rule 48 (constants)


State 174

   52 constants: STRINGLITERAL .

    $default  reduce using rule 52 (constants)


State 175

   49 constants: CHARACTERLITERAL .

    $default  reduce using rule 49 (constants)


State 176

   51 constants: BOOLEANLITERAL .

    $default  reduce using rule 51 (constants)


State 177

   50 constants: FLOATLITERAL .

    $default  reduce using rule 50 (constants)


State 178

   41 T: IDENTIFIER .

    $default  reduce using rule 41 (T)


State 179

   59 RHS: ROUNDOPEN . RHS all_ops next ROUNDCLOSE
   60    | ROUNDOPEN . RHS ROUNDCLOSE

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 242
    func_invoke  go to state 183
    get_invoke   go to state 184


State 180

   56 RHS: T .

    $default  reduce using rule 56 (RHS)


State 181

   55 RHS: constants .

    $default  reduce using rule 55 (RHS)


State 182

   94 simpleList: IDENTIFIER EQ RHS .

    $default  reduce using rule 94 (simpleList)


State 183

   42 T: func_invoke .

    $default  reduce using rule 42 (T)


State 184

   58 RHS: get_invoke .

    $default  reduce using rule 58 (RHS)


State 185

   93 simpleList: simpleList COMMA IDENTIFIER .
   95           | simpleList COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 243

    $default  reduce using rule 93 (simpleList)


State 186

  101 dimlist: INTEGERLITERAL .

    $default  reduce using rule 101 (dimlist)


State 187

   96 arrayList: IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   98          | IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
  100 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 244
    SQUARECLOSE  shift, and go to state 245


State 188

   97 arrayList: arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   99          | arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 246


State 189

  140 analyze_label: STRINGLITERAL .

    $default  reduce using rule 140 (analyze_label)


State 190

  141 analyze_label: IDENTIFIER .

    $default  reduce using rule 141 (analyze_label)


State 191

  142 analyze_statement: ANALYZE analyze_label . COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax

    COLON  shift, and go to state 247


State 192

  162 return_statement: RETURN RHS . SEMICOLON

    SEMICOLON  shift, and go to state 248


State 193

  222 id: ARROW . IDENTIFIER
  245 method_invoke: IDENTIFIER ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 249


State 194

  221 access: IDENTIFIER id .
  223 id: id . ARROW IDENTIFIER
  246 method_invoke: IDENTIFIER id . ARROW IDENTIFIER COLON arguments

    ARROW  shift, and go to state 250

    $default  reduce using rule 221 (access)


State 195

  187 func_scope: SCOPEOPEN func_statements . SCOPECLOSE
  191 func_statements: func_statements . func_scope

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPEOPEN      shift, and go to state 102
    SCOPECLOSE     shift, and go to state 251
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 103
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 104
    loop                  go to state 105
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 106
    when_statement        go to state 81
    analyze_statement     go to state 107
    func_invoke2          go to state 108
    func_invoke           go to state 84
    task_invoke           go to state 109
    sleep                 go to state 110
    input                 go to state 111
    return_statement      go to state 112
    output                go to state 113
    func_scope            go to state 197
    access                go to state 116
    method_invoke         go to state 117


State 196

  175 func_body: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 175 (func_body)


State 197

  191 func_statements: func_statements func_scope .

    $default  reduce using rule 191 (func_statements)


State 198

  169 func_args: all_datatypes IDENTIFIER .

    $default  reduce using rule 169 (func_args)


State 199

  170 func_args: func_args COMMA . all_datatypes IDENTIFIER

    NNUM        shift, and go to state 118
    NDEC        shift, and go to state 119
    NBOOL       shift, and go to state 120
    NLET        shift, and go to state 121
    NTEXT       shift, and go to state 122
    ANUM        shift, and go to state 123
    ADEC        shift, and go to state 124
    ABOOL       shift, and go to state 125
    ALET        shift, and go to state 126
    ATEXT       shift, and go to state 127
    UDATATYPE   shift, and go to state 128
    AUDATATYPE  shift, and go to state 129

    all_datatypes  go to state 252


State 200

  193 task: TASK IDENTIFIER COLON func_args $@6 . SCOPEOPEN taskscope SCOPECLOSE

    SCOPEOPEN  shift, and go to state 253


State 201

  130 when_statement: WHEN SQUAREOPEN RHS . SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 254


State 202

  127 while_loop: REPEAT SQUAREOPEN RHS . SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 255


State 203

  121 both_assignment: simpleDatatype . g

    IDENTIFIER  shift, and go to state 256

    g  go to state 257


State 204

  114 assignment_statement: LHS . EQ RHS

    EQ  shift, and go to state 150


State 205

  120 both_assignment: assignment_statement .

    $default  reduce using rule 120 (both_assignment)


State 206

  125 for_loop: FOR SQUAREOPEN both_assignment . SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 258


State 207

  150 task_invoke: MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON
  151            | MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    INTEGERLITERAL  shift, and go to state 259


State 208

  153 sleep: SLEEP ROUNDOPEN FLOATLITERAL . ROUNDCLOSE SEMICOLON

    ROUNDCLOSE  shift, and go to state 260


State 209

  146 func_invoke: INVOKE IDENTIFIER COLON . arguments
  147            | INVOKE IDENTIFIER COLON . NULL_ARGS

    NULL_ARGS         shift, and go to state 261
    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 262
    func_invoke  go to state 183
    arguments    go to state 263
    get_invoke   go to state 184


State 210

  154 file_name: ARROW STRINGLITERAL .

    $default  reduce using rule 154 (file_name)


State 211

  155 file_name: ARROW IDENTIFIER .

    $default  reduce using rule 155 (file_name)


State 212

  157 input: IP file_name COLON . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 264


State 213

  160 stringvalues: STRINGLITERAL .

    $default  reduce using rule 160 (stringvalues)


State 214

  161 stringvalues: IDENTIFIER .

    $default  reduce using rule 161 (stringvalues)


State 215

  164 opstring: stringvalues . nextop

    HASH  shift, and go to state 265

    $default  reduce using rule 166 (nextop)

    nextop  go to state 266


State 216

  163 output: OP COLON opstring . file_name SEMICOLON

    ARROW  shift, and go to state 138

    $default  reduce using rule 156 (file_name)

    file_name  go to state 267


State 217

  143 analyze_syntax: COLON analysis_arrays analyze_syntax .

    $default  reduce using rule 143 (analyze_syntax)


State 218

  222 id: ARROW IDENTIFIER .

    $default  reduce using rule 222 (id)


State 219

  101 dimlist: INTEGERLITERAL .
  110 arith_operand: INTEGERLITERAL .

    COMMA        reduce using rule 101 (dimlist)
    SQUARECLOSE  reduce using rule 101 (dimlist)
    $default     reduce using rule 110 (arith_operand)


State 220

  111 arith_operand: FLOATLITERAL .

    $default  reduce using rule 111 (arith_operand)


State 221

  109 arith_operand: IDENTIFIER .

    $default  reduce using rule 109 (arith_operand)


State 222

  112 arith_operand: ROUNDOPEN . arith_expr ROUNDCLOSE

    INTEGERLITERAL  shift, and go to state 268
    FLOATLITERAL    shift, and go to state 220
    IDENTIFIER      shift, and go to state 221
    ROUNDOPEN       shift, and go to state 222

    arith_operand  go to state 226
    arith_expr     go to state 269


State 223

  100 dimlist: dimlist . COMMA INTEGERLITERAL
  105 arr_access: dimlist .

    COMMA  shift, and go to state 244

    $default  reduce using rule 105 (arr_access)


State 224

  103 LHS: IDENTIFIER SQUAREOPEN arr_access . SQUARECLOSE

    SQUARECLOSE  shift, and go to state 270


State 225

  106 arr_access: exprlist .
  108 exprlist: exprlist . COMMA arith_expr

    COMMA  shift, and go to state 271

    $default  reduce using rule 106 (arr_access)


State 226

  113 arith_expr: arith_operand . arithmetic_op arith_operand

    DIV       shift, and go to state 272
    ADD       shift, and go to state 273
    SUB       shift, and go to state 274
    MUL       shift, and go to state 275
    EXPONENT  shift, and go to state 276
    MODULO    shift, and go to state 277

    arithmetic_op  go to state 278


State 227

  107 exprlist: arith_expr .

    $default  reduce using rule 107 (exprlist)


State 228

  223 id: id ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 279


State 229

  234 start_body: SCOPEOPEN stt SCOPECLOSE .

    $default  reduce using rule 234 (start_body)


State 230

  114 assignment_statement: LHS EQ RHS .

    $default  reduce using rule 114 (assignment_statement)


State 231

  115 expression_statement: LHS expression_op RHS .

    $default  reduce using rule 115 (expression_statement)


State 232

  132 when_statement: when_statement ELSE_WHEN SQUAREOPEN . RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 280
    func_invoke  go to state 183
    get_invoke   go to state 184


State 233

  134 when_default: DEFAULT SQUAREOPEN . RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 281
    func_invoke  go to state 183
    get_invoke   go to state 184


State 234

  240 attributes: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 282


State 235

  239 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes . methods SCOPECLOSE
  241 attributes: attributes . declarationStmt SEMICOLON

    ATOMIC     shift, and go to state 64
    NNUM       shift, and go to state 8
    NDEC       shift, and go to state 9
    NBOOL      shift, and go to state 10
    NLET       shift, and go to state 11
    NTEXT      shift, and go to state 12
    NVOID      shift, and go to state 13
    NARRNUM    shift, and go to state 14
    NARRDEC    shift, and go to state 15
    NARRBOOL   shift, and go to state 16
    NARRLET    shift, and go to state 17
    NARRTEXT   shift, and go to state 18
    ANUM       shift, and go to state 19
    ADEC       shift, and go to state 20
    ABOOL      shift, and go to state 21
    ALET       shift, and go to state 22
    ATEXT      shift, and go to state 23
    AARRNUM    shift, and go to state 24
    AARRDEC    shift, and go to state 25
    AARRBOOL   shift, and go to state 26
    AARRLET    shift, and go to state 27
    AARRTEXT   shift, and go to state 28
    UDATATYPE  shift, and go to state 29

    $default  reduce using rule 243 (methods)

    nonAtomicSimple  go to state 30
    atomicSimple     go to state 31
    nonAtomicArray   go to state 32
    atomicArray      go to state 33
    simpleDatatype   go to state 35
    arrayDatatype    go to state 36
    declarationStmt  go to state 283
    methods          go to state 284


State 236

  174 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON NULL_ARGS . COLON nonAtomic_datatypes

    COLON  shift, and go to state 285


State 237

  170 func_args: func_args . COMMA all_datatypes IDENTIFIER
  173 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 199
    COLON  shift, and go to state 286


State 238

  172 func_decl: FUNC IDENTIFIER COLON NULL_ARGS COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 8
    NDEC      shift, and go to state 9
    NBOOL     shift, and go to state 10
    NLET      shift, and go to state 11
    NTEXT     shift, and go to state 12
    NVOID     shift, and go to state 13
    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18

    nonAtomic_datatypes  go to state 287
    nonAtomicSimple      go to state 288
    nonAtomicArray       go to state 289


State 239

  171 func_decl: FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 8
    NDEC      shift, and go to state 9
    NBOOL     shift, and go to state 10
    NLET      shift, and go to state 11
    NTEXT     shift, and go to state 12
    NVOID     shift, and go to state 13
    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18

    nonAtomic_datatypes  go to state 290
    nonAtomicSimple      go to state 288
    nonAtomicArray       go to state 289


State 240

  152 get_invoke: GET ARROW . TIME

    TIME  shift, and go to state 291


State 241

   61 RHS: NEG ROUNDOPEN . RHS ROUNDCLOSE

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 292
    func_invoke  go to state 183
    get_invoke   go to state 184


State 242

   59 RHS: ROUNDOPEN RHS . all_ops next ROUNDCLOSE
   60    | ROUNDOPEN RHS . ROUNDCLOSE

    DIV         shift, and go to state 272
    ADD         shift, and go to state 273
    SUB         shift, and go to state 274
    MUL         shift, and go to state 275
    EXPONENT    shift, and go to state 276
    MODULO      shift, and go to state 277
    ARROW       shift, and go to state 293
    AND         shift, and go to state 294
    OR          shift, and go to state 295
    GT          shift, and go to state 296
    LT          shift, and go to state 297
    GTEQ        shift, and go to state 298
    LTEQ        shift, and go to state 299
    NOT_EQ      shift, and go to state 300
    EQUAL_TWO   shift, and go to state 301
    ROUNDCLOSE  shift, and go to state 302
    HASH        shift, and go to state 303

    comparison_op  go to state 304
    arithmetic_op  go to state 305
    logical_op     go to state 306
    all_ops        go to state 307


State 243

   95 simpleList: simpleList COMMA IDENTIFIER EQ . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 308
    func_invoke  go to state 183
    get_invoke   go to state 184


State 244

  100 dimlist: dimlist COMMA . INTEGERLITERAL

    INTEGERLITERAL  shift, and go to state 309


State 245

   96 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   98          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 310

    $default  reduce using rule 96 (arrayList)


State 246

   97 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   99          | arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 186

    dimlist  go to state 311


State 247

  142 analyze_statement: ANALYZE analyze_label COLON . analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax

    STRINGLITERAL  shift, and go to state 189
    IDENTIFIER     shift, and go to state 190

    analyze_label  go to state 312


State 248

  162 return_statement: RETURN RHS SEMICOLON .

    $default  reduce using rule 162 (return_statement)


State 249

  222 id: ARROW IDENTIFIER .
  245 method_invoke: IDENTIFIER ARROW IDENTIFIER . COLON arguments

    COLON  shift, and go to state 313

    $default  reduce using rule 222 (id)


State 250

  223 id: id ARROW . IDENTIFIER
  246 method_invoke: IDENTIFIER id ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 314


State 251

  187 func_scope: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 187 (func_scope)


State 252

  170 func_args: func_args COMMA all_datatypes . IDENTIFIER

    IDENTIFIER  shift, and go to state 315


State 253

  193 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN . taskscope SCOPECLOSE

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 324
    access                go to state 325
    method_invoke         go to state 326


State 254

  130 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE . $@3 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 129 ($@3)

    $@3  go to state 327


State 255

  127 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE . $@2 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 126 ($@2)

    $@2  go to state 328


State 256

  118 g: IDENTIFIER . EQ RHS

    EQ  shift, and go to state 329


State 257

  119 g: g . COMMA IDENTIFIER EQ RHS
  121 both_assignment: simpleDatatype g .

    COMMA  shift, and go to state 330

    $default  reduce using rule 121 (both_assignment)


State 258

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON . RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 331
    func_invoke  go to state 183
    get_invoke   go to state 184


State 259

  150 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON arguments SEMICOLON
  151            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    COLON  shift, and go to state 332


State 260

  153 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 333


State 261

  147 func_invoke: INVOKE IDENTIFIER COLON NULL_ARGS .

    $default  reduce using rule 147 (func_invoke)


State 262

  148 arguments: RHS .

    $default  reduce using rule 148 (arguments)


State 263

  146 func_invoke: INVOKE IDENTIFIER COLON arguments .
  149 arguments: arguments . COMMA RHS

    COMMA  shift, and go to state 334

    COMMA     [reduce using rule 146 (func_invoke)]
    $default  reduce using rule 146 (func_invoke)


State 264

  157 input: IP file_name COLON IDENTIFIER . nextip

    COMMA      shift, and go to state 335
    SEMICOLON  shift, and go to state 336

    nextip  go to state 337


State 265

  165 nextop: HASH . stringvalues nextop

    STRINGLITERAL  shift, and go to state 213
    IDENTIFIER     shift, and go to state 214

    stringvalues  go to state 338


State 266

  164 opstring: stringvalues nextop .

    $default  reduce using rule 164 (opstring)


State 267

  163 output: OP COLON opstring file_name . SEMICOLON

    SEMICOLON  shift, and go to state 339


State 268

  110 arith_operand: INTEGERLITERAL .

    $default  reduce using rule 110 (arith_operand)


State 269

  112 arith_operand: ROUNDOPEN arith_expr . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 340


State 270

  103 LHS: IDENTIFIER SQUAREOPEN arr_access SQUARECLOSE .

    $default  reduce using rule 103 (LHS)


State 271

  108 exprlist: exprlist COMMA . arith_expr

    INTEGERLITERAL  shift, and go to state 268
    FLOATLITERAL    shift, and go to state 220
    IDENTIFIER      shift, and go to state 221
    ROUNDOPEN       shift, and go to state 222

    arith_operand  go to state 226
    arith_expr     go to state 341


State 272

   28 arithmetic_op: DIV .

    $default  reduce using rule 28 (arithmetic_op)


State 273

   25 arithmetic_op: ADD .

    $default  reduce using rule 25 (arithmetic_op)


State 274

   26 arithmetic_op: SUB .

    $default  reduce using rule 26 (arithmetic_op)


State 275

   27 arithmetic_op: MUL .

    $default  reduce using rule 27 (arithmetic_op)


State 276

   30 arithmetic_op: EXPONENT .

    $default  reduce using rule 30 (arithmetic_op)


State 277

   29 arithmetic_op: MODULO .

    $default  reduce using rule 29 (arithmetic_op)


State 278

  113 arith_expr: arith_operand arithmetic_op . arith_operand

    INTEGERLITERAL  shift, and go to state 268
    FLOATLITERAL    shift, and go to state 220
    IDENTIFIER      shift, and go to state 221
    ROUNDOPEN       shift, and go to state 222

    arith_operand  go to state 342


State 279

  223 id: id ARROW IDENTIFIER .

    $default  reduce using rule 223 (id)


State 280

  132 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS . SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 343


State 281

  134 when_default: DEFAULT SQUAREOPEN RHS . SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 344


State 282

  240 attributes: declarationStmt SEMICOLON .

    $default  reduce using rule 240 (attributes)


State 283

  241 attributes: attributes declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 345


State 284

  239 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods . SCOPECLOSE
  242 methods: methods . method

    FUNC        shift, and go to state 7
    SCOPECLOSE  shift, and go to state 346

    func_decl  go to state 347
    method     go to state 348


State 285

  174 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON NULL_ARGS COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 8
    NDEC      shift, and go to state 9
    NBOOL     shift, and go to state 10
    NLET      shift, and go to state 11
    NTEXT     shift, and go to state 12
    NVOID     shift, and go to state 13
    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18

    nonAtomic_datatypes  go to state 349
    nonAtomicSimple      go to state 288
    nonAtomicArray       go to state 289


State 286

  173 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 8
    NDEC      shift, and go to state 9
    NBOOL     shift, and go to state 10
    NLET      shift, and go to state 11
    NTEXT     shift, and go to state 12
    NVOID     shift, and go to state 13
    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18

    nonAtomic_datatypes  go to state 350
    nonAtomicSimple      go to state 288
    nonAtomicArray       go to state 289


State 287

  172 func_decl: FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes .

    $default  reduce using rule 172 (func_decl)


State 288

   34 nonAtomic_datatypes: nonAtomicSimple .

    $default  reduce using rule 34 (nonAtomic_datatypes)


State 289

   33 nonAtomic_datatypes: nonAtomicArray .

    $default  reduce using rule 33 (nonAtomic_datatypes)


State 290

  171 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 171 (func_decl)


State 291

  152 get_invoke: GET ARROW TIME .

    $default  reduce using rule 152 (get_invoke)


State 292

   61 RHS: NEG ROUNDOPEN RHS . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 351


State 293

   47 all_ops: ARROW .

    $default  reduce using rule 47 (all_ops)


State 294

   31 logical_op: AND .

    $default  reduce using rule 31 (logical_op)


State 295

   32 logical_op: OR .

    $default  reduce using rule 32 (logical_op)


State 296

   20 comparison_op: GT .

    $default  reduce using rule 20 (comparison_op)


State 297

   19 comparison_op: LT .

    $default  reduce using rule 19 (comparison_op)


State 298

   21 comparison_op: GTEQ .

    $default  reduce using rule 21 (comparison_op)


State 299

   22 comparison_op: LTEQ .

    $default  reduce using rule 22 (comparison_op)


State 300

   23 comparison_op: NOT_EQ .

    $default  reduce using rule 23 (comparison_op)


State 301

   24 comparison_op: EQUAL_TWO .

    $default  reduce using rule 24 (comparison_op)


State 302

   60 RHS: ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 60 (RHS)


State 303

   46 all_ops: HASH .

    $default  reduce using rule 46 (all_ops)


State 304

   44 all_ops: comparison_op .

    $default  reduce using rule 44 (all_ops)


State 305

   43 all_ops: arithmetic_op .

    $default  reduce using rule 43 (all_ops)


State 306

   45 all_ops: logical_op .

    $default  reduce using rule 45 (all_ops)


State 307

   59 RHS: ROUNDOPEN RHS all_ops . next ROUNDCLOSE

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    next         go to state 352
    RHS          go to state 353
    func_invoke  go to state 183
    get_invoke   go to state 184


State 308

   95 simpleList: simpleList COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 95 (simpleList)


State 309

  100 dimlist: dimlist COMMA INTEGERLITERAL .

    $default  reduce using rule 100 (dimlist)


State 310

   98 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 354
    func_invoke  go to state 183
    get_invoke   go to state 184


State 311

   97 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   99          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
  100 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 244
    SQUARECLOSE  shift, and go to state 355


State 312

  142 analyze_statement: ANALYZE analyze_label COLON analyze_label . COLON analysis_arrays COLON analysis_arrays analyze_syntax

    COLON  shift, and go to state 356


State 313

  245 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON . arguments

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 262
    func_invoke  go to state 183
    arguments    go to state 357
    get_invoke   go to state 184


State 314

  223 id: id ARROW IDENTIFIER .
  246 method_invoke: IDENTIFIER id ARROW IDENTIFIER . COLON arguments

    COLON  shift, and go to state 358

    $default  reduce using rule 223 (id)


State 315

  170 func_args: func_args COMMA all_datatypes IDENTIFIER .

    $default  reduce using rule 170 (func_args)


State 316

  200 taskscope: SCOPEOPEN . taskscope SCOPECLOSE taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 359
    access                go to state 325
    method_invoke         go to state 326


State 317

  194 taskscope: declaration . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 360
    access                go to state 325
    method_invoke         go to state 326


State 318

  195 taskscope: log . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 361
    access                go to state 325
    method_invoke         go to state 326


State 319

  197 taskscope: loop . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 362
    access                go to state 325
    method_invoke         go to state 326


State 320

  196 taskscope: conditional . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 363
    access                go to state 325
    method_invoke         go to state 326


State 321

  198 taskscope: func_invoke2 . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 364
    access                go to state 325
    method_invoke         go to state 326


State 322

  201 taskscope: sleep . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 365
    access                go to state 325
    method_invoke         go to state 326


State 323

  199 taskscope: output . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 366
    access                go to state 325
    method_invoke         go to state 326


State 324

  193 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 367


State 325

  104 LHS: access .
  203 taskscope: access .

    SCOPECLOSE  reduce using rule 203 (taskscope)
    $default    reduce using rule 104 (LHS)


State 326

  202 taskscope: method_invoke .

    $default  reduce using rule 202 (taskscope)


State 327

  130 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 368


State 328

  127 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 369


State 329

  118 g: IDENTIFIER EQ . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 370
    func_invoke  go to state 183
    get_invoke   go to state 184


State 330

  119 g: g COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 371


State 331

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS . SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 372


State 332

  150 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON arguments SEMICOLON
  151            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    INTEGERLITERAL  shift, and go to state 373


State 333

  153 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON .

    $default  reduce using rule 153 (sleep)


State 334

  149 arguments: arguments COMMA . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 374
    func_invoke  go to state 183
    get_invoke   go to state 184


State 335

  158 nextip: COMMA . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 375


State 336

  159 nextip: SEMICOLON .

    $default  reduce using rule 159 (nextip)


State 337

  157 input: IP file_name COLON IDENTIFIER nextip .

    $default  reduce using rule 157 (input)


State 338

  165 nextop: HASH stringvalues . nextop

    HASH  shift, and go to state 265

    $default  reduce using rule 166 (nextop)

    nextop  go to state 376


State 339

  163 output: OP COLON opstring file_name SEMICOLON .

    $default  reduce using rule 163 (output)


State 340

  112 arith_operand: ROUNDOPEN arith_expr ROUNDCLOSE .

    $default  reduce using rule 112 (arith_operand)


State 341

  108 exprlist: exprlist COMMA arith_expr .

    $default  reduce using rule 108 (exprlist)


State 342

  113 arith_expr: arith_operand arithmetic_op arith_operand .

    $default  reduce using rule 113 (arith_expr)


State 343

  132 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE . $@4 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 131 ($@4)

    $@4  go to state 377


State 344

  134 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE . $@5 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 133 ($@5)

    $@5  go to state 378


State 345

  241 attributes: attributes declarationStmt SEMICOLON .

    $default  reduce using rule 241 (attributes)


State 346

  239 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE .

    $default  reduce using rule 239 (type_declaration)


State 347

  244 method: func_decl . SCOPEOPEN method_body SCOPECLOSE

    SCOPEOPEN  shift, and go to state 379


State 348

  242 methods: methods method .

    $default  reduce using rule 242 (methods)


State 349

  174 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes .

    $default  reduce using rule 174 (atomic_func_decl)


State 350

  173 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 173 (atomic_func_decl)


State 351

   61 RHS: NEG ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 61 (RHS)


State 352

   59 RHS: ROUNDOPEN RHS all_ops next . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 380


State 353

   53 next: RHS . all_ops next
   54     | RHS .

    DIV        shift, and go to state 272
    ADD        shift, and go to state 273
    SUB        shift, and go to state 274
    MUL        shift, and go to state 275
    EXPONENT   shift, and go to state 276
    MODULO     shift, and go to state 277
    ARROW      shift, and go to state 293
    AND        shift, and go to state 294
    OR         shift, and go to state 295
    GT         shift, and go to state 296
    LT         shift, and go to state 297
    GTEQ       shift, and go to state 298
    LTEQ       shift, and go to state 299
    NOT_EQ     shift, and go to state 300
    EQUAL_TWO  shift, and go to state 301
    HASH       shift, and go to state 303

    $default  reduce using rule 54 (next)

    comparison_op  go to state 304
    arithmetic_op  go to state 305
    logical_op     go to state 306
    all_ops        go to state 381


State 354

   98 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 98 (arrayList)


State 355

   97 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   99          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 382

    $default  reduce using rule 97 (arrayList)


State 356

  142 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON . analysis_arrays COLON analysis_arrays analyze_syntax

    NARRNUM  shift, and go to state 141
    NARRDEC  shift, and go to state 142
    AARRNUM  shift, and go to state 143
    AARRDEC  shift, and go to state 144

    analysis_arrays  go to state 383


State 357

  149 arguments: arguments . COMMA RHS
  245 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 334

    $default  reduce using rule 245 (method_invoke)


State 358

  246 method_invoke: IDENTIFIER id ARROW IDENTIFIER COLON . arguments

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 262
    func_invoke  go to state 183
    arguments    go to state 384
    get_invoke   go to state 184


State 359

  200 taskscope: SCOPEOPEN taskscope . SCOPECLOSE taskscope

    SCOPECLOSE  shift, and go to state 385


State 360

  194 taskscope: declaration taskscope .

    $default  reduce using rule 194 (taskscope)


State 361

  195 taskscope: log taskscope .

    $default  reduce using rule 195 (taskscope)


State 362

  197 taskscope: loop taskscope .

    $default  reduce using rule 197 (taskscope)


State 363

  196 taskscope: conditional taskscope .

    $default  reduce using rule 196 (taskscope)


State 364

  198 taskscope: func_invoke2 taskscope .

    $default  reduce using rule 198 (taskscope)


State 365

  201 taskscope: sleep taskscope .

    $default  reduce using rule 201 (taskscope)


State 366

  199 taskscope: output taskscope .

    $default  reduce using rule 199 (taskscope)


State 367

  193 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE .

    $default  reduce using rule 193 (task)


State 368

  130 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 400
    access                go to state 401
    method_invoke         go to state 402


State 369

  127 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 403
    access                go to state 401
    method_invoke         go to state 402


State 370

  118 g: IDENTIFIER EQ RHS .

    $default  reduce using rule 118 (g)


State 371

  119 g: g COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 404


State 372

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON . expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    IDENTIFIER  shift, and go to state 70

    LHS                   go to state 405
    expression_statement  go to state 406
    access                go to state 89


State 373

  150 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON arguments SEMICOLON
  151            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON NULL_ARGS SEMICOLON

    COLON  shift, and go to state 407


State 374

  149 arguments: arguments COMMA RHS .

    $default  reduce using rule 149 (arguments)


State 375

  158 nextip: COMMA IDENTIFIER . nextip

    COMMA      shift, and go to state 335
    SEMICOLON  shift, and go to state 336

    nextip  go to state 408


State 376

  165 nextop: HASH stringvalues nextop .

    $default  reduce using rule 165 (nextop)


State 377

  132 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 409


State 378

  134 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 410


State 379

  244 method: func_decl SCOPEOPEN . method_body SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    IN             shift, and go to state 411
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPEOPEN      shift, and go to state 412
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 413
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 414
    loop                  go to state 415
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 416
    when_statement        go to state 81
    analyze_statement     go to state 417
    func_invoke2          go to state 418
    func_invoke           go to state 84
    task_invoke           go to state 419
    sleep                 go to state 420
    input                 go to state 421
    return_statement      go to state 422
    output                go to state 423
    access                go to state 424
    method_invoke         go to state 425
    in_statement          go to state 426
    method_statements     go to state 427
    method_body           go to state 428


State 380

   59 RHS: ROUNDOPEN RHS all_ops next ROUNDCLOSE .

    $default  reduce using rule 59 (RHS)


State 381

   53 next: RHS all_ops . next

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    next         go to state 429
    RHS          go to state 353
    func_invoke  go to state 183
    get_invoke   go to state 184


State 382

   99 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 430
    func_invoke  go to state 183
    get_invoke   go to state 184


State 383

  142 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays . COLON analysis_arrays analyze_syntax

    COLON  shift, and go to state 431


State 384

  149 arguments: arguments . COMMA RHS
  246 method_invoke: IDENTIFIER id ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 334

    $default  reduce using rule 246 (method_invoke)


State 385

  200 taskscope: SCOPEOPEN taskscope SCOPECLOSE . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 101
    SCOPEOPEN   shift, and go to state 316
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 317
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 318
    loop                  go to state 319
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 320
    when_statement        go to state 81
    func_invoke2          go to state 321
    func_invoke           go to state 84
    sleep                 go to state 322
    output                go to state 323
    taskscope             go to state 432
    access                go to state 325
    method_invoke         go to state 326


State 386

  214 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 433


State 387

  215 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 434


State 388

  204 statement: declaration .

    $default  reduce using rule 204 (statement)


State 389

  205 statement: log .

    $default  reduce using rule 205 (statement)


State 390

  207 statement: loop .

    $default  reduce using rule 207 (statement)


State 391

  206 statement: conditional .

    $default  reduce using rule 206 (statement)


State 392

  211 statement: analyze_statement .

    $default  reduce using rule 211 (statement)


State 393

  209 statement: func_invoke2 .

    $default  reduce using rule 209 (statement)


State 394

  210 statement: task_invoke .

    $default  reduce using rule 210 (statement)


State 395

  213 statement: sleep .

    $default  reduce using rule 213 (statement)


State 396

  216 statement: input .

    $default  reduce using rule 216 (statement)


State 397

  208 statement: return_statement .

    $default  reduce using rule 208 (statement)


State 398

  212 statement: output .

    $default  reduce using rule 212 (statement)


State 399

  219 statements: statement .

    $default  reduce using rule 219 (statements)


State 400

  130 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements . SCOPECLOSE
  220 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPECLOSE     shift, and go to state 435
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 436
    access                go to state 401
    method_invoke         go to state 402


State 401

  104 LHS: access .
  218 statement: access .

    EQ             reduce using rule 104 (LHS)
    INCR           reduce using rule 104 (LHS)
    DECR           reduce using rule 104 (LHS)
    ASSN_MODULO    reduce using rule 104 (LHS)
    ASSN_EXPONENT  reduce using rule 104 (LHS)
    ASSN_DIV       reduce using rule 104 (LHS)
    ASSN_MUL       reduce using rule 104 (LHS)
    $default       reduce using rule 218 (statement)


State 402

  217 statement: method_invoke .

    $default  reduce using rule 217 (statement)


State 403

  127 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements . SCOPECLOSE
  220 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPECLOSE     shift, and go to state 437
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 436
    access                go to state 401
    method_invoke         go to state 402


State 404

  119 g: g COMMA IDENTIFIER EQ . RHS

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 438
    func_invoke  go to state 183
    get_invoke   go to state 184


State 405

  115 expression_statement: LHS . expression_op RHS

    INCR           shift, and go to state 151
    DECR           shift, and go to state 152
    ASSN_MODULO    shift, and go to state 153
    ASSN_EXPONENT  shift, and go to state 154
    ASSN_DIV       shift, and go to state 155
    ASSN_MUL       shift, and go to state 156

    expression_op  go to state 157


State 406

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement . SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 439


State 407

  150 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . arguments SEMICOLON
  151            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . NULL_ARGS SEMICOLON

    NULL_ARGS         shift, and go to state 440
    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 262
    func_invoke  go to state 183
    arguments    go to state 441
    get_invoke   go to state 184


State 408

  158 nextip: COMMA IDENTIFIER nextip .

    $default  reduce using rule 158 (nextip)


State 409

  132 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 442
    access                go to state 401
    method_invoke         go to state 402


State 410

  134 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 443
    access                go to state 401
    method_invoke         go to state 402


State 411

  247 in_statement: IN . ARROW IDENTIFIER SEMICOLON
  248             | IN . ARROW IDENTIFIER COLON arguments

    ARROW  shift, and go to state 444


State 412

  260 method_statements: SCOPEOPEN . method_statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    IN             shift, and go to state 411
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPEOPEN      shift, and go to state 412
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 413
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 414
    loop                  go to state 415
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 416
    when_statement        go to state 81
    analyze_statement     go to state 417
    func_invoke2          go to state 418
    func_invoke           go to state 84
    task_invoke           go to state 419
    sleep                 go to state 420
    input                 go to state 421
    return_statement      go to state 422
    output                go to state 423
    access                go to state 424
    method_invoke         go to state 425
    in_statement          go to state 426
    method_statements     go to state 445


State 413

  249 method_statements: declaration .

    $default  reduce using rule 249 (method_statements)


State 414

  250 method_statements: log .

    $default  reduce using rule 250 (method_statements)


State 415

  253 method_statements: loop .

    $default  reduce using rule 253 (method_statements)


State 416

  255 method_statements: conditional .

    $default  reduce using rule 255 (method_statements)


State 417

  256 method_statements: analyze_statement .

    $default  reduce using rule 256 (method_statements)


State 418

  252 method_statements: func_invoke2 .

    $default  reduce using rule 252 (method_statements)


State 419

  251 method_statements: task_invoke .

    $default  reduce using rule 251 (method_statements)


State 420

  259 method_statements: sleep .

    $default  reduce using rule 259 (method_statements)


State 421

  257 method_statements: input .

    $default  reduce using rule 257 (method_statements)


State 422

  254 method_statements: return_statement .

    $default  reduce using rule 254 (method_statements)


State 423

  258 method_statements: output .

    $default  reduce using rule 258 (method_statements)


State 424

  104 LHS: access .
  263 method_statements: access .

    EQ             reduce using rule 104 (LHS)
    INCR           reduce using rule 104 (LHS)
    DECR           reduce using rule 104 (LHS)
    ASSN_MODULO    reduce using rule 104 (LHS)
    ASSN_EXPONENT  reduce using rule 104 (LHS)
    ASSN_DIV       reduce using rule 104 (LHS)
    ASSN_MUL       reduce using rule 104 (LHS)
    $default       reduce using rule 263 (method_statements)


State 425

  262 method_statements: method_invoke .

    $default  reduce using rule 262 (method_statements)


State 426

  261 method_statements: in_statement .

    $default  reduce using rule 261 (method_statements)


State 427

  264 method_body: method_statements .

    $default  reduce using rule 264 (method_body)


State 428

  244 method: func_decl SCOPEOPEN method_body . SCOPECLOSE
  265 method_body: method_body . method_statements

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    IN             shift, and go to state 411
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPEOPEN      shift, and go to state 412
    SCOPECLOSE     shift, and go to state 446
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 413
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 414
    loop                  go to state 415
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 416
    when_statement        go to state 81
    analyze_statement     go to state 417
    func_invoke2          go to state 418
    func_invoke           go to state 84
    task_invoke           go to state 419
    sleep                 go to state 420
    input                 go to state 421
    return_statement      go to state 422
    output                go to state 423
    access                go to state 424
    method_invoke         go to state 425
    in_statement          go to state 426
    method_statements     go to state 447


State 429

   53 next: RHS all_ops next .

    $default  reduce using rule 53 (next)


State 430

   99 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 99 (arrayList)


State 431

  142 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON . analysis_arrays analyze_syntax

    NARRNUM  shift, and go to state 141
    NARRDEC  shift, and go to state 142
    AARRNUM  shift, and go to state 143
    AARRDEC  shift, and go to state 144

    analysis_arrays  go to state 448


State 432

  200 taskscope: SCOPEOPEN taskscope SCOPECLOSE taskscope .

    $default  reduce using rule 200 (taskscope)


State 433

  214 statement: BREAK SEMICOLON .

    $default  reduce using rule 214 (statement)


State 434

  215 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 215 (statement)


State 435

  130 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 130 (when_statement)


State 436

  220 statements: statements statement .

    $default  reduce using rule 220 (statements)


State 437

  127 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 127 (while_loop)


State 438

  119 g: g COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 119 (g)


State 439

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE . $@1 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 124 ($@1)

    $@1  go to state 449


State 440

  151 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS . SEMICOLON

    SEMICOLON  shift, and go to state 450


State 441

  149 arguments: arguments . COMMA RHS
  150 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments . SEMICOLON

    COMMA      shift, and go to state 334
    SEMICOLON  shift, and go to state 451


State 442

  132 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements . SCOPECLOSE
  220 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPECLOSE     shift, and go to state 452
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 436
    access                go to state 401
    method_invoke         go to state 402


State 443

  134 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements . SCOPECLOSE
  220 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPECLOSE     shift, and go to state 453
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 436
    access                go to state 401
    method_invoke         go to state 402


State 444

  247 in_statement: IN ARROW . IDENTIFIER SEMICOLON
  248             | IN ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 454


State 445

  260 method_statements: SCOPEOPEN method_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 455


State 446

  244 method: func_decl SCOPEOPEN method_body SCOPECLOSE .

    $default  reduce using rule 244 (method)


State 447

  265 method_body: method_body method_statements .

    $default  reduce using rule 265 (method_body)


State 448

  142 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays . analyze_syntax

    SEMICOLON  shift, and go to state 68
    COLON      shift, and go to state 69

    analyze_syntax  go to state 456


State 449

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 457


State 450

  151 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON .

    $default  reduce using rule 151 (task_invoke)


State 451

  150 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON .

    $default  reduce using rule 150 (task_invoke)


State 452

  132 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 132 (when_statement)


State 453

  134 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 134 (when_default)


State 454

  247 in_statement: IN ARROW IDENTIFIER . SEMICOLON
  248             | IN ARROW IDENTIFIER . COLON arguments

    SEMICOLON  shift, and go to state 458
    COLON      shift, and go to state 459


State 455

  260 method_statements: SCOPEOPEN method_statements SCOPECLOSE .

    $default  reduce using rule 260 (method_statements)


State 456

  142 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax .

    $default  reduce using rule 142 (analyze_statement)


State 457

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 399
    statements            go to state 460
    access                go to state 401
    method_invoke         go to state 402


State 458

  247 in_statement: IN ARROW IDENTIFIER SEMICOLON .

    $default  reduce using rule 247 (in_statement)


State 459

  248 in_statement: IN ARROW IDENTIFIER COLON . arguments

    TID               shift, and go to state 170
    GET               shift, and go to state 171
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 172
    INTEGERLITERAL    shift, and go to state 173
    STRINGLITERAL     shift, and go to state 174
    CHARACTERLITERAL  shift, and go to state 175
    BOOLEANLITERAL    shift, and go to state 176
    FLOATLITERAL      shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    ROUNDOPEN         shift, and go to state 179

    T            go to state 180
    constants    go to state 181
    RHS          go to state 262
    func_invoke  go to state 183
    arguments    go to state 461
    get_invoke   go to state 184


State 460

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements . SCOPECLOSE
  220 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 386
    CONTINUE       shift, and go to state 387
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 99
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 100
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 101
    SCOPECLOSE     shift, and go to state 462
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    LHS                   go to state 73
    assignment_statement  go to state 74
    expression_statement  go to state 75
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 78
    while_loop            go to state 79
    conditional           go to state 391
    when_statement        go to state 81
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 84
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    statement             go to state 436
    access                go to state 401
    method_invoke         go to state 402


State 461

  149 arguments: arguments . COMMA RHS
  248 in_statement: IN ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 334

    $default  reduce using rule 248 (in_statement)


State 462

  125 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 125 (for_loop)
