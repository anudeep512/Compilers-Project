Terminals unused in grammar

    LEXERROR


State 247 conflicts: 1 shift/reduce


Grammar

    0 $accept: begin $end

    1 all_datatypes: UDATATYPE
    2              | AUDATATYPE
    3              | NBOOL
    4              | NDEC
    5              | NNUM
    6              | NTEXT
    7              | NLET
    8              | ABOOL
    9              | ADEC
   10              | ALET
   11              | ATEXT
   12              | ANUM

   13 expression_op: ASSN_DIV
   14              | ASSN_EXPONENT
   15              | ASSN_MODULO
   16              | ASSN_MUL
   17              | INCR
   18              | DECR

   19 comparison_op: LT
   20              | GT
   21              | GTEQ
   22              | LTEQ
   23              | NOT_EQ
   24              | EQUAL_TWO

   25 arithmetic_op: ADD
   26              | SUB
   27              | MUL
   28              | DIV
   29              | MODULO
   30              | EXPONENT

   31 logical_op: AND
   32           | OR

   33 nonAtomic_datatypes: nonAtomicArray
   34                    | nonAtomicSimple

   35 begin: begin start_scope
   36      | %empty
   37      | begin declaration
   38      | begin function
   39      | begin task
   40      | begin type_declaration

   41 T: IDENTIFIER
   42  | func_invoke

   43 all_ops: arithmetic_op
   44        | comparison_op
   45        | logical_op
   46        | HASH
   47        | ARROW

   48 constants: INTEGERLITERAL
   49          | CHARACTERLITERAL
   50          | FLOATLITERAL
   51          | BOOLEANLITERAL
   52          | STRINGLITERAL

   53 next: RHS all_ops next
   54     | RHS

   55 RHS: constants
   56    | T
   57    | TID
   58    | get_invoke
   59    | ROUNDOPEN RHS all_ops next ROUNDCLOSE
   60    | ROUNDOPEN RHS ROUNDCLOSE
   61    | NEG ROUNDOPEN RHS ROUNDCLOSE

   62 nonAtomicSimple: NNUM
   63                | NDEC
   64                | NBOOL
   65                | NLET
   66                | NTEXT
   67                | NVOID

   68 atomicSimple: ANUM
   69             | ADEC
   70             | ABOOL
   71             | ALET
   72             | ATEXT

   73 nonAtomicArray: NARRNUM
   74               | NARRDEC
   75               | NARRBOOL
   76               | NARRLET
   77               | NARRTEXT

   78 atomicArray: AARRNUM
   79            | AARRDEC
   80            | AARRBOOL
   81            | AARRLET
   82            | AARRTEXT

   83 declaration: declarationStmt SEMICOLON

   84 simpleDatatype: nonAtomicSimple
   85               | atomicSimple
   86               | UDATATYPE
   87               | ATOMIC AUDATATYPE

   88 arrayDatatype: nonAtomicArray
   89              | atomicArray

   90 declarationStmt: simpleDatatype simpleList
   91                | arrayDatatype arrayList

   92 simpleList: IDENTIFIER
   93           | simpleList COMMA IDENTIFIER
   94           | IDENTIFIER EQ RHS
   95           | simpleList COMMA IDENTIFIER EQ RHS

   96 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   97          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   98          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS
   99          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

  100 dimlist: dimlist COMMA INTEGERLITERAL
  101        | INTEGERLITERAL

  102 assignment_statement: IDENTIFIER EQ RHS

  103 expression_statement: IDENTIFIER expression_op RHS

  104 log: assignment_statement SEMICOLON
  105    | expression_statement SEMICOLON

  106 g: IDENTIFIER EQ RHS
  107  | g COMMA IDENTIFIER EQ RHS

  108 both_assignment: assignment_statement
  109                | simpleDatatype g

  110 loop: for_loop
  111     | while_loop

  112 $@1: %empty

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

  114 $@2: %empty

  115 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

  116 conditional: when_statement when_default

  117 $@3: %empty

  118 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

  119 $@4: %empty

  120 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

  121 $@5: %empty

  122 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE
  123             | %empty

  124 analysis_arrays: NARRDEC
  125                | NARRNUM
  126                | AARRDEC
  127                | AARRNUM

  128 analyze_label: STRINGLITERAL
  129              | IDENTIFIER

  130 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax

  131 analyze_syntax: COLON analysis_arrays analyze_syntax
  132               | SEMICOLON

  133 func_invoke2: func_invoke SEMICOLON

  134 func_invoke: INVOKE IDENTIFIER COLON arguments
  135            | INVOKE IDENTIFIER COLON NULL_ARGS

  136 arguments: RHS
  137          | arguments COMMA RHS

  138 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON
  139            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

  140 get_invoke: GET ARROW TIME

  141 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

  142 file_name: ARROW STRINGLITERAL
  143          | ARROW IDENTIFIER
  144          | %empty

  145 input: IP file_name COLON IDENTIFIER nextip

  146 nextip: COMMA IDENTIFIER nextip
  147       | SEMICOLON

  148 stringvalues: STRINGLITERAL
  149             | IDENTIFIER

  150 return_statement: RETURN RHS SEMICOLON

  151 output: OP COLON opstring file_name SEMICOLON

  152 opstring: stringvalues nextop

  153 nextop: HASH stringvalues nextop
  154       | %empty

  155 function: func_decl func_body
  156         | atomic_func_decl func_body

  157 func_args: all_datatypes IDENTIFIER
  158          | func_args COMMA all_datatypes IDENTIFIER

  159 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  160          | FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

  161 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  162                 | ATOMIC FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

  163 func_body: SCOPEOPEN func_statements SCOPECLOSE

  164 func_scope: declaration
  165           | log
  166           | task_invoke
  167           | func_invoke2
  168           | loop
  169           | return_statement
  170           | conditional
  171           | analyze_statement
  172           | input
  173           | output
  174           | sleep
  175           | SCOPEOPEN func_statements SCOPECLOSE
  176           | method_invoke
  177           | access

  178 func_statements: func_scope
  179                | func_statements func_scope

  180 $@6: %empty

  181 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

  182 taskscope: declaration taskscope
  183          | log taskscope
  184          | conditional taskscope
  185          | loop taskscope
  186          | func_invoke2 taskscope
  187          | output taskscope
  188          | SCOPEOPEN taskscope SCOPECLOSE taskscope
  189          | sleep taskscope
  190          | method_invoke
  191          | access

  192 statement: declaration
  193          | log
  194          | conditional
  195          | loop
  196          | return_statement
  197          | func_invoke2
  198          | task_invoke
  199          | analyze_statement
  200          | output
  201          | sleep
  202          | BREAK SEMICOLON
  203          | CONTINUE SEMICOLON
  204          | input
  205          | method_invoke
  206          | access

  207 statements: statement
  208           | statements statement

  209 access: IDENTIFIER id

  210 id: ARROW IDENTIFIER
  211   | id ARROW IDENTIFIER

  212 start_scope: START SCOPEOPEN stt SCOPECLOSE

  213 start_body: declaration
  214           | log
  215           | conditional
  216           | loop
  217           | func_invoke2
  218           | task_invoke
  219           | analyze_syntax
  220           | output
  221           | input
  222           | SCOPEOPEN stt SCOPECLOSE
  223           | sleep

  224 stt: start_body
  225    | stt start_body

  226 $@7: %empty

  227 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE

  228 attributes: declarationStmt SEMICOLON
  229           | attributes declarationStmt SEMICOLON

  230 methods: methods method
  231        | %empty

  232 method: func_decl SCOPEOPEN method_body SCOPECLOSE

  233 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON arguments
  234              | IDENTIFIER id ARROW IDENTIFIER COLON arguments

  235 in_statement: IN ARROW IDENTIFIER SEMICOLON
  236             | IN ARROW IDENTIFIER COLON arguments

  237 method_statements: declaration
  238                  | log
  239                  | task_invoke
  240                  | func_invoke2
  241                  | loop
  242                  | return_statement
  243                  | conditional
  244                  | analyze_statement
  245                  | input
  246                  | output
  247                  | sleep
  248                  | SCOPEOPEN method_statements SCOPECLOSE
  249                  | in_statement
  250                  | method_invoke
  251                  | access

  252 method_body: method_statements
  253            | method_body method_statements


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN (258) 118
    REPEAT (259) 115
    ELSE_WHEN (260) 120
    DEFAULT (261) 122
    FOR (262) 113
    BREAK (263) 202
    CONTINUE (264) 203
    TASK (265) 181
    MAKE_PARALLEL (266) 138 139
    NULL_ARGS (267) 135 139 160 162
    TID (268) 57
    ANALYZE (269) 130
    GET (270) 140
    SLEEP (271) 141
    TIME (272) 140
    START (273) 212
    RETURN (274) 150
    TYPE (275) 227
    ATOMIC (276) 87 161 162
    IN (277) 235 236
    FUNC (278) 159 160 161 162
    INVOKE (279) 134 135
    IP (280) 145
    OP (281) 151
    DIV (282) 28
    ADD (283) 25
    SUB (284) 26
    MUL (285) 27
    EXPONENT (286) 30
    MODULO (287) 29
    ARROW (288) 47 140 142 143 210 211 233 234 235 236
    EQ (289) 94 95 98 99 102 106 107
    INCR (290) 17
    DECR (291) 18
    ASSN_MODULO (292) 15
    ASSN_EXPONENT (293) 14
    ASSN_DIV (294) 13
    ASSN_MUL (295) 16
    AND (296) 31
    OR (297) 32
    GT (298) 20
    LT (299) 19
    GTEQ (300) 21
    LTEQ (301) 22
    NOT_EQ (302) 23
    NEG (303) 61
    EQUAL_TWO (304) 24
    INTEGERLITERAL (305) 48 100 101 138 139
    STRINGLITERAL (306) 52 128 142 148
    CHARACTERLITERAL (307) 49
    BOOLEANLITERAL (308) 51
    FLOATLITERAL (309) 50 141
    COMMA (310) 93 95 97 99 100 107 137 146 158
    SEMICOLON (311) 83 104 105 113 132 133 138 139 141 147 150 151 202 203 228 229 235
    COLON (312) 130 131 134 135 138 139 145 151 159 160 161 162 181 233 234 236
    IDENTIFIER (313) 41 92 93 94 95 96 97 98 99 102 103 106 107 129 134 135 138 139 143 145 146 149 157 158 159 160 161 162 181 209 210 211 233 234 235 236
    SCOPEOPEN (314) 113 115 118 120 122 163 175 181 188 212 222 227 232 248
    SCOPECLOSE (315) 113 115 118 120 122 163 175 181 188 212 222 227 232 248
    ROUNDOPEN (316) 59 60 61 141
    ROUNDCLOSE (317) 59 60 61 141
    SQUAREOPEN (318) 96 97 98 99 113 115 118 120 122
    SQUARECLOSE (319) 96 97 98 99 113 115 118 120 122
    HASH (320) 46 153
    LEXERROR (321)
    NNUM (322) 5 62
    NDEC (323) 4 63
    NBOOL (324) 3 64
    NLET (325) 7 65
    NTEXT (326) 6 66
    NVOID (327) 67
    NARRNUM (328) 73 125
    NARRDEC (329) 74 124
    NARRBOOL (330) 75
    NARRLET (331) 76
    NARRTEXT (332) 77
    ANUM (333) 12 68
    ADEC (334) 9 69
    ABOOL (335) 8 70
    ALET (336) 10 71
    ATEXT (337) 11 72
    AARRNUM (338) 78 127
    AARRDEC (339) 79 126
    AARRBOOL (340) 80
    AARRLET (341) 81
    AARRTEXT (342) 82
    UDATATYPE (343) 1 86 227
    AUDATATYPE (344) 2 87


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    all_datatypes (91)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12
        on right: 157 158
    expression_op (92)
        on left: 13 14 15 16 17 18
        on right: 103
    comparison_op (93)
        on left: 19 20 21 22 23 24
        on right: 44
    arithmetic_op (94)
        on left: 25 26 27 28 29 30
        on right: 43
    logical_op (95)
        on left: 31 32
        on right: 45
    nonAtomic_datatypes (96)
        on left: 33 34
        on right: 159 160 161 162
    begin (97)
        on left: 35 36 37 38 39 40
        on right: 0 35 37 38 39 40
    T (98)
        on left: 41 42
        on right: 56
    all_ops (99)
        on left: 43 44 45 46 47
        on right: 53 59
    constants (100)
        on left: 48 49 50 51 52
        on right: 55
    next (101)
        on left: 53 54
        on right: 53 59
    RHS (102)
        on left: 55 56 57 58 59 60 61
        on right: 53 54 59 60 61 94 95 98 99 102 103 106 107 113 115 118 120 122 136 137 150
    nonAtomicSimple (103)
        on left: 62 63 64 65 66 67
        on right: 34 84
    atomicSimple (104)
        on left: 68 69 70 71 72
        on right: 85
    nonAtomicArray (105)
        on left: 73 74 75 76 77
        on right: 33 88
    atomicArray (106)
        on left: 78 79 80 81 82
        on right: 89
    declaration (107)
        on left: 83
        on right: 37 164 182 192 213 237
    simpleDatatype (108)
        on left: 84 85 86 87
        on right: 90 109
    arrayDatatype (109)
        on left: 88 89
        on right: 91
    declarationStmt (110)
        on left: 90 91
        on right: 83 228 229
    simpleList (111)
        on left: 92 93 94 95
        on right: 90 93 95
    arrayList (112)
        on left: 96 97 98 99
        on right: 91 97 99
    dimlist (113)
        on left: 100 101
        on right: 96 97 98 99 100
    assignment_statement (114)
        on left: 102
        on right: 104 108
    expression_statement (115)
        on left: 103
        on right: 105 113
    log (116)
        on left: 104 105
        on right: 165 183 193 214 238
    g (117)
        on left: 106 107
        on right: 107 109
    both_assignment (118)
        on left: 108 109
        on right: 113
    loop (119)
        on left: 110 111
        on right: 168 185 195 216 241
    for_loop (120)
        on left: 113
        on right: 110
    $@1 (121)
        on left: 112
        on right: 113
    while_loop (122)
        on left: 115
        on right: 111
    $@2 (123)
        on left: 114
        on right: 115
    conditional (124)
        on left: 116
        on right: 170 184 194 215 243
    when_statement (125)
        on left: 118 120
        on right: 116 120
    $@3 (126)
        on left: 117
        on right: 118
    $@4 (127)
        on left: 119
        on right: 120
    when_default (128)
        on left: 122 123
        on right: 116
    $@5 (129)
        on left: 121
        on right: 122
    analysis_arrays (130)
        on left: 124 125 126 127
        on right: 130 131
    analyze_label (131)
        on left: 128 129
        on right: 130
    analyze_statement (132)
        on left: 130
        on right: 171 199 244
    analyze_syntax (133)
        on left: 131 132
        on right: 130 131 219
    func_invoke2 (134)
        on left: 133
        on right: 167 186 197 217 240
    func_invoke (135)
        on left: 134 135
        on right: 42 133
    arguments (136)
        on left: 136 137
        on right: 134 137 138 233 234 236
    task_invoke (137)
        on left: 138 139
        on right: 166 198 218 239
    get_invoke (138)
        on left: 140
        on right: 58
    sleep (139)
        on left: 141
        on right: 174 189 201 223 247
    file_name (140)
        on left: 142 143 144
        on right: 145 151
    input (141)
        on left: 145
        on right: 172 204 221 245
    nextip (142)
        on left: 146 147
        on right: 145 146
    stringvalues (143)
        on left: 148 149
        on right: 152 153
    return_statement (144)
        on left: 150
        on right: 169 196 242
    output (145)
        on left: 151
        on right: 173 187 200 220 246
    opstring (146)
        on left: 152
        on right: 151
    nextop (147)
        on left: 153 154
        on right: 152 153
    function (148)
        on left: 155 156
        on right: 38
    func_args (149)
        on left: 157 158
        on right: 158 159 161 181
    func_decl (150)
        on left: 159 160
        on right: 155 232
    atomic_func_decl (151)
        on left: 161 162
        on right: 156
    func_body (152)
        on left: 163
        on right: 155 156
    func_scope (153)
        on left: 164 165 166 167 168 169 170 171 172 173 174 175 176 177
        on right: 178 179
    func_statements (154)
        on left: 178 179
        on right: 163 175 179
    task (155)
        on left: 181
        on right: 39
    $@6 (156)
        on left: 180
        on right: 181
    taskscope (157)
        on left: 182 183 184 185 186 187 188 189 190 191
        on right: 181 182 183 184 185 186 187 188 189
    statement (158)
        on left: 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
        on right: 207 208
    statements (159)
        on left: 207 208
        on right: 113 115 118 120 122 208
    access (160)
        on left: 209
        on right: 177 191 206 251
    id (161)
        on left: 210 211
        on right: 209 211 234
    start_scope (162)
        on left: 212
        on right: 35
    start_body (163)
        on left: 213 214 215 216 217 218 219 220 221 222 223
        on right: 224 225
    stt (164)
        on left: 224 225
        on right: 212 222 225
    type_declaration (165)
        on left: 227
        on right: 40
    $@7 (166)
        on left: 226
        on right: 227
    attributes (167)
        on left: 228 229
        on right: 227 229
    methods (168)
        on left: 230 231
        on right: 227 230
    method (169)
        on left: 232
        on right: 230
    method_invoke (170)
        on left: 233 234
        on right: 176 190 205 250
    in_statement (171)
        on left: 235 236
        on right: 249
    method_statements (172)
        on left: 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251
        on right: 248 252 253
    method_body (173)
        on left: 252 253
        on right: 232 253


State 0

    0 $accept: . begin $end

    $default  reduce using rule 36 (begin)

    begin  go to state 1


State 1

    0 $accept: begin . $end
   35 begin: begin . start_scope
   37      | begin . declaration
   38      | begin . function
   39      | begin . task
   40      | begin . type_declaration

    $end       shift, and go to state 2
    TASK       shift, and go to state 3
    START      shift, and go to state 4
    TYPE       shift, and go to state 5
    ATOMIC     shift, and go to state 6
    FUNC       shift, and go to state 7
    NNUM       shift, and go to state 8
    NDEC       shift, and go to state 9
    NBOOL      shift, and go to state 10
    NLET       shift, and go to state 11
    NTEXT      shift, and go to state 12
    NVOID      shift, and go to state 13
    NARRNUM    shift, and go to state 14
    NARRDEC    shift, and go to state 15
    NARRBOOL   shift, and go to state 16
    NARRLET    shift, and go to state 17
    NARRTEXT   shift, and go to state 18
    ANUM       shift, and go to state 19
    ADEC       shift, and go to state 20
    ABOOL      shift, and go to state 21
    ALET       shift, and go to state 22
    ATEXT      shift, and go to state 23
    AARRNUM    shift, and go to state 24
    AARRDEC    shift, and go to state 25
    AARRBOOL   shift, and go to state 26
    AARRLET    shift, and go to state 27
    AARRTEXT   shift, and go to state 28
    UDATATYPE  shift, and go to state 29

    nonAtomicSimple   go to state 30
    atomicSimple      go to state 31
    nonAtomicArray    go to state 32
    atomicArray       go to state 33
    declaration       go to state 34
    simpleDatatype    go to state 35
    arrayDatatype     go to state 36
    declarationStmt   go to state 37
    function          go to state 38
    func_decl         go to state 39
    atomic_func_decl  go to state 40
    task              go to state 41
    start_scope       go to state 42
    type_declaration  go to state 43


State 2

    0 $accept: begin $end .

    $default  accept


State 3

  181 task: TASK . IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 44


State 4

  212 start_scope: START . SCOPEOPEN stt SCOPECLOSE

    SCOPEOPEN  shift, and go to state 45


State 5

  227 type_declaration: TYPE . UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE

    UDATATYPE  shift, and go to state 46


State 6

   87 simpleDatatype: ATOMIC . AUDATATYPE
  161 atomic_func_decl: ATOMIC . FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  162                 | ATOMIC . FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

    FUNC        shift, and go to state 47
    AUDATATYPE  shift, and go to state 48


State 7

  159 func_decl: FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  160          | FUNC . IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 49


State 8

   62 nonAtomicSimple: NNUM .

    $default  reduce using rule 62 (nonAtomicSimple)


State 9

   63 nonAtomicSimple: NDEC .

    $default  reduce using rule 63 (nonAtomicSimple)


State 10

   64 nonAtomicSimple: NBOOL .

    $default  reduce using rule 64 (nonAtomicSimple)


State 11

   65 nonAtomicSimple: NLET .

    $default  reduce using rule 65 (nonAtomicSimple)


State 12

   66 nonAtomicSimple: NTEXT .

    $default  reduce using rule 66 (nonAtomicSimple)


State 13

   67 nonAtomicSimple: NVOID .

    $default  reduce using rule 67 (nonAtomicSimple)


State 14

   73 nonAtomicArray: NARRNUM .

    $default  reduce using rule 73 (nonAtomicArray)


State 15

   74 nonAtomicArray: NARRDEC .

    $default  reduce using rule 74 (nonAtomicArray)


State 16

   75 nonAtomicArray: NARRBOOL .

    $default  reduce using rule 75 (nonAtomicArray)


State 17

   76 nonAtomicArray: NARRLET .

    $default  reduce using rule 76 (nonAtomicArray)


State 18

   77 nonAtomicArray: NARRTEXT .

    $default  reduce using rule 77 (nonAtomicArray)


State 19

   68 atomicSimple: ANUM .

    $default  reduce using rule 68 (atomicSimple)


State 20

   69 atomicSimple: ADEC .

    $default  reduce using rule 69 (atomicSimple)


State 21

   70 atomicSimple: ABOOL .

    $default  reduce using rule 70 (atomicSimple)


State 22

   71 atomicSimple: ALET .

    $default  reduce using rule 71 (atomicSimple)


State 23

   72 atomicSimple: ATEXT .

    $default  reduce using rule 72 (atomicSimple)


State 24

   78 atomicArray: AARRNUM .

    $default  reduce using rule 78 (atomicArray)


State 25

   79 atomicArray: AARRDEC .

    $default  reduce using rule 79 (atomicArray)


State 26

   80 atomicArray: AARRBOOL .

    $default  reduce using rule 80 (atomicArray)


State 27

   81 atomicArray: AARRLET .

    $default  reduce using rule 81 (atomicArray)


State 28

   82 atomicArray: AARRTEXT .

    $default  reduce using rule 82 (atomicArray)


State 29

   86 simpleDatatype: UDATATYPE .

    $default  reduce using rule 86 (simpleDatatype)


State 30

   84 simpleDatatype: nonAtomicSimple .

    $default  reduce using rule 84 (simpleDatatype)


State 31

   85 simpleDatatype: atomicSimple .

    $default  reduce using rule 85 (simpleDatatype)


State 32

   88 arrayDatatype: nonAtomicArray .

    $default  reduce using rule 88 (arrayDatatype)


State 33

   89 arrayDatatype: atomicArray .

    $default  reduce using rule 89 (arrayDatatype)


State 34

   37 begin: begin declaration .

    $default  reduce using rule 37 (begin)


State 35

   90 declarationStmt: simpleDatatype . simpleList

    IDENTIFIER  shift, and go to state 50

    simpleList  go to state 51


State 36

   91 declarationStmt: arrayDatatype . arrayList

    IDENTIFIER  shift, and go to state 52

    arrayList  go to state 53


State 37

   83 declaration: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 38

   38 begin: begin function .

    $default  reduce using rule 38 (begin)


State 39

  155 function: func_decl . func_body

    SCOPEOPEN  shift, and go to state 55

    func_body  go to state 56


State 40

  156 function: atomic_func_decl . func_body

    SCOPEOPEN  shift, and go to state 55

    func_body  go to state 57


State 41

   39 begin: begin task .

    $default  reduce using rule 39 (begin)


State 42

   35 begin: begin start_scope .

    $default  reduce using rule 35 (begin)


State 43

   40 begin: begin type_declaration .

    $default  reduce using rule 40 (begin)


State 44

  181 task: TASK IDENTIFIER . COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    COLON  shift, and go to state 58


State 45

  212 start_scope: START SCOPEOPEN . stt SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    SLEEP          shift, and go to state 63
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    COLON          shift, and go to state 69
    IDENTIFIER     shift, and go to state 70
    SCOPEOPEN      shift, and go to state 71
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 72
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 75
    loop                  go to state 76
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 79
    when_statement        go to state 80
    analyze_syntax        go to state 81
    func_invoke2          go to state 82
    func_invoke           go to state 83
    task_invoke           go to state 84
    sleep                 go to state 85
    input                 go to state 86
    output                go to state 87
    start_body            go to state 88
    stt                   go to state 89


State 46

  227 type_declaration: TYPE UDATATYPE . $@7 SCOPEOPEN attributes methods SCOPECLOSE

    $default  reduce using rule 226 ($@7)

    $@7  go to state 90


State 47

  161 atomic_func_decl: ATOMIC FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes
  162                 | ATOMIC FUNC . IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 91


State 48

   87 simpleDatatype: ATOMIC AUDATATYPE .

    $default  reduce using rule 87 (simpleDatatype)


State 49

  159 func_decl: FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes
  160          | FUNC IDENTIFIER . COLON NULL_ARGS COLON nonAtomic_datatypes

    COLON  shift, and go to state 92


State 50

   92 simpleList: IDENTIFIER .
   94           | IDENTIFIER . EQ RHS

    EQ  shift, and go to state 93

    $default  reduce using rule 92 (simpleList)


State 51

   90 declarationStmt: simpleDatatype simpleList .
   93 simpleList: simpleList . COMMA IDENTIFIER
   95           | simpleList . COMMA IDENTIFIER EQ RHS

    COMMA  shift, and go to state 94

    $default  reduce using rule 90 (declarationStmt)


State 52

   96 arrayList: IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   98          | IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 95


State 53

   91 declarationStmt: arrayDatatype arrayList .
   97 arrayList: arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   99          | arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    COMMA  shift, and go to state 96

    $default  reduce using rule 91 (declarationStmt)


State 54

   83 declaration: declarationStmt SEMICOLON .

    $default  reduce using rule 83 (declaration)


State 55

  163 func_body: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPEOPEN      shift, and go to state 100
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 101
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 102
    loop                  go to state 103
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 104
    when_statement        go to state 80
    analyze_statement     go to state 105
    func_invoke2          go to state 106
    func_invoke           go to state 83
    task_invoke           go to state 107
    sleep                 go to state 108
    input                 go to state 109
    return_statement      go to state 110
    output                go to state 111
    func_scope            go to state 112
    func_statements       go to state 113
    access                go to state 114
    method_invoke         go to state 115


State 56

  155 function: func_decl func_body .

    $default  reduce using rule 155 (function)


State 57

  156 function: atomic_func_decl func_body .

    $default  reduce using rule 156 (function)


State 58

  181 task: TASK IDENTIFIER COLON . func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    NNUM        shift, and go to state 116
    NDEC        shift, and go to state 117
    NBOOL       shift, and go to state 118
    NLET        shift, and go to state 119
    NTEXT       shift, and go to state 120
    ANUM        shift, and go to state 121
    ADEC        shift, and go to state 122
    ABOOL       shift, and go to state 123
    ALET        shift, and go to state 124
    ATEXT       shift, and go to state 125
    UDATATYPE   shift, and go to state 126
    AUDATATYPE  shift, and go to state 127

    all_datatypes  go to state 128
    func_args      go to state 129


State 59

  118 when_statement: WHEN . SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 130


State 60

  115 while_loop: REPEAT . SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 131


State 61

  113 for_loop: FOR . SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 132


State 62

  138 task_invoke: MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON
  139            | MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    IDENTIFIER  shift, and go to state 133


State 63

  141 sleep: SLEEP . ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

    ROUNDOPEN  shift, and go to state 134


State 64

   87 simpleDatatype: ATOMIC . AUDATATYPE

    AUDATATYPE  shift, and go to state 48


State 65

  134 func_invoke: INVOKE . IDENTIFIER COLON arguments
  135            | INVOKE . IDENTIFIER COLON NULL_ARGS

    IDENTIFIER  shift, and go to state 135


State 66

  145 input: IP . file_name COLON IDENTIFIER nextip

    ARROW  shift, and go to state 136

    $default  reduce using rule 144 (file_name)

    file_name  go to state 137


State 67

  151 output: OP . COLON opstring file_name SEMICOLON

    COLON  shift, and go to state 138


State 68

  132 analyze_syntax: SEMICOLON .

    $default  reduce using rule 132 (analyze_syntax)


State 69

  131 analyze_syntax: COLON . analysis_arrays analyze_syntax

    NARRNUM  shift, and go to state 139
    NARRDEC  shift, and go to state 140
    AARRNUM  shift, and go to state 141
    AARRDEC  shift, and go to state 142

    analysis_arrays  go to state 143


State 70

  102 assignment_statement: IDENTIFIER . EQ RHS
  103 expression_statement: IDENTIFIER . expression_op RHS

    EQ             shift, and go to state 144
    INCR           shift, and go to state 145
    DECR           shift, and go to state 146
    ASSN_MODULO    shift, and go to state 147
    ASSN_EXPONENT  shift, and go to state 148
    ASSN_DIV       shift, and go to state 149
    ASSN_MUL       shift, and go to state 150

    expression_op  go to state 151


State 71

  222 start_body: SCOPEOPEN . stt SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    SLEEP          shift, and go to state 63
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    COLON          shift, and go to state 69
    IDENTIFIER     shift, and go to state 70
    SCOPEOPEN      shift, and go to state 71
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 72
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 75
    loop                  go to state 76
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 79
    when_statement        go to state 80
    analyze_syntax        go to state 81
    func_invoke2          go to state 82
    func_invoke           go to state 83
    task_invoke           go to state 84
    sleep                 go to state 85
    input                 go to state 86
    output                go to state 87
    start_body            go to state 88
    stt                   go to state 152


State 72

  213 start_body: declaration .

    $default  reduce using rule 213 (start_body)


State 73

  104 log: assignment_statement . SEMICOLON

    SEMICOLON  shift, and go to state 153


State 74

  105 log: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 154


State 75

  214 start_body: log .

    $default  reduce using rule 214 (start_body)


State 76

  216 start_body: loop .

    $default  reduce using rule 216 (start_body)


State 77

  110 loop: for_loop .

    $default  reduce using rule 110 (loop)


State 78

  111 loop: while_loop .

    $default  reduce using rule 111 (loop)


State 79

  215 start_body: conditional .

    $default  reduce using rule 215 (start_body)


State 80

  116 conditional: when_statement . when_default
  120 when_statement: when_statement . ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    ELSE_WHEN  shift, and go to state 155
    DEFAULT    shift, and go to state 156

    $default  reduce using rule 123 (when_default)

    when_default  go to state 157


State 81

  219 start_body: analyze_syntax .

    $default  reduce using rule 219 (start_body)


State 82

  217 start_body: func_invoke2 .

    $default  reduce using rule 217 (start_body)


State 83

  133 func_invoke2: func_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 84

  218 start_body: task_invoke .

    $default  reduce using rule 218 (start_body)


State 85

  223 start_body: sleep .

    $default  reduce using rule 223 (start_body)


State 86

  221 start_body: input .

    $default  reduce using rule 221 (start_body)


State 87

  220 start_body: output .

    $default  reduce using rule 220 (start_body)


State 88

  224 stt: start_body .

    $default  reduce using rule 224 (stt)


State 89

  212 start_scope: START SCOPEOPEN stt . SCOPECLOSE
  225 stt: stt . start_body

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    SLEEP          shift, and go to state 63
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    COLON          shift, and go to state 69
    IDENTIFIER     shift, and go to state 70
    SCOPEOPEN      shift, and go to state 71
    SCOPECLOSE     shift, and go to state 159
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 72
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 75
    loop                  go to state 76
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 79
    when_statement        go to state 80
    analyze_syntax        go to state 81
    func_invoke2          go to state 82
    func_invoke           go to state 83
    task_invoke           go to state 84
    sleep                 go to state 85
    input                 go to state 86
    output                go to state 87
    start_body            go to state 160


State 90

  227 type_declaration: TYPE UDATATYPE $@7 . SCOPEOPEN attributes methods SCOPECLOSE

    SCOPEOPEN  shift, and go to state 161


State 91

  161 atomic_func_decl: ATOMIC FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes
  162                 | ATOMIC FUNC IDENTIFIER . COLON NULL_ARGS COLON nonAtomic_datatypes

    COLON  shift, and go to state 162


State 92

  159 func_decl: FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes
  160          | FUNC IDENTIFIER COLON . NULL_ARGS COLON nonAtomic_datatypes

    NULL_ARGS   shift, and go to state 163
    NNUM        shift, and go to state 116
    NDEC        shift, and go to state 117
    NBOOL       shift, and go to state 118
    NLET        shift, and go to state 119
    NTEXT       shift, and go to state 120
    ANUM        shift, and go to state 121
    ADEC        shift, and go to state 122
    ABOOL       shift, and go to state 123
    ALET        shift, and go to state 124
    ATEXT       shift, and go to state 125
    UDATATYPE   shift, and go to state 126
    AUDATATYPE  shift, and go to state 127

    all_datatypes  go to state 128
    func_args      go to state 164


State 93

   94 simpleList: IDENTIFIER EQ . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 177
    func_invoke  go to state 178
    get_invoke   go to state 179


State 94

   93 simpleList: simpleList COMMA . IDENTIFIER
   95           | simpleList COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 180


State 95

   96 arrayList: IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   98          | IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 181

    dimlist  go to state 182


State 96

   97 arrayList: arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   99          | arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    IDENTIFIER  shift, and go to state 183


State 97

  130 analyze_statement: ANALYZE . analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax

    STRINGLITERAL  shift, and go to state 184
    IDENTIFIER     shift, and go to state 185

    analyze_label  go to state 186


State 98

  150 return_statement: RETURN . RHS SEMICOLON

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 187
    func_invoke  go to state 178
    get_invoke   go to state 179


State 99

  102 assignment_statement: IDENTIFIER . EQ RHS
  103 expression_statement: IDENTIFIER . expression_op RHS
  209 access: IDENTIFIER . id
  233 method_invoke: IDENTIFIER . ARROW IDENTIFIER COLON arguments
  234              | IDENTIFIER . id ARROW IDENTIFIER COLON arguments

    ARROW          shift, and go to state 188
    EQ             shift, and go to state 144
    INCR           shift, and go to state 145
    DECR           shift, and go to state 146
    ASSN_MODULO    shift, and go to state 147
    ASSN_EXPONENT  shift, and go to state 148
    ASSN_DIV       shift, and go to state 149
    ASSN_MUL       shift, and go to state 150

    expression_op  go to state 151
    id             go to state 189


State 100

  175 func_scope: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPEOPEN      shift, and go to state 100
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 101
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 102
    loop                  go to state 103
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 104
    when_statement        go to state 80
    analyze_statement     go to state 105
    func_invoke2          go to state 106
    func_invoke           go to state 83
    task_invoke           go to state 107
    sleep                 go to state 108
    input                 go to state 109
    return_statement      go to state 110
    output                go to state 111
    func_scope            go to state 112
    func_statements       go to state 190
    access                go to state 114
    method_invoke         go to state 115


State 101

  164 func_scope: declaration .

    $default  reduce using rule 164 (func_scope)


State 102

  165 func_scope: log .

    $default  reduce using rule 165 (func_scope)


State 103

  168 func_scope: loop .

    $default  reduce using rule 168 (func_scope)


State 104

  170 func_scope: conditional .

    $default  reduce using rule 170 (func_scope)


State 105

  171 func_scope: analyze_statement .

    $default  reduce using rule 171 (func_scope)


State 106

  167 func_scope: func_invoke2 .

    $default  reduce using rule 167 (func_scope)


State 107

  166 func_scope: task_invoke .

    $default  reduce using rule 166 (func_scope)


State 108

  174 func_scope: sleep .

    $default  reduce using rule 174 (func_scope)


State 109

  172 func_scope: input .

    $default  reduce using rule 172 (func_scope)


State 110

  169 func_scope: return_statement .

    $default  reduce using rule 169 (func_scope)


State 111

  173 func_scope: output .

    $default  reduce using rule 173 (func_scope)


State 112

  178 func_statements: func_scope .

    $default  reduce using rule 178 (func_statements)


State 113

  163 func_body: SCOPEOPEN func_statements . SCOPECLOSE
  179 func_statements: func_statements . func_scope

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPEOPEN      shift, and go to state 100
    SCOPECLOSE     shift, and go to state 191
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 101
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 102
    loop                  go to state 103
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 104
    when_statement        go to state 80
    analyze_statement     go to state 105
    func_invoke2          go to state 106
    func_invoke           go to state 83
    task_invoke           go to state 107
    sleep                 go to state 108
    input                 go to state 109
    return_statement      go to state 110
    output                go to state 111
    func_scope            go to state 192
    access                go to state 114
    method_invoke         go to state 115


State 114

  177 func_scope: access .

    $default  reduce using rule 177 (func_scope)


State 115

  176 func_scope: method_invoke .

    $default  reduce using rule 176 (func_scope)


State 116

    5 all_datatypes: NNUM .

    $default  reduce using rule 5 (all_datatypes)


State 117

    4 all_datatypes: NDEC .

    $default  reduce using rule 4 (all_datatypes)


State 118

    3 all_datatypes: NBOOL .

    $default  reduce using rule 3 (all_datatypes)


State 119

    7 all_datatypes: NLET .

    $default  reduce using rule 7 (all_datatypes)


State 120

    6 all_datatypes: NTEXT .

    $default  reduce using rule 6 (all_datatypes)


State 121

   12 all_datatypes: ANUM .

    $default  reduce using rule 12 (all_datatypes)


State 122

    9 all_datatypes: ADEC .

    $default  reduce using rule 9 (all_datatypes)


State 123

    8 all_datatypes: ABOOL .

    $default  reduce using rule 8 (all_datatypes)


State 124

   10 all_datatypes: ALET .

    $default  reduce using rule 10 (all_datatypes)


State 125

   11 all_datatypes: ATEXT .

    $default  reduce using rule 11 (all_datatypes)


State 126

    1 all_datatypes: UDATATYPE .

    $default  reduce using rule 1 (all_datatypes)


State 127

    2 all_datatypes: AUDATATYPE .

    $default  reduce using rule 2 (all_datatypes)


State 128

  157 func_args: all_datatypes . IDENTIFIER

    IDENTIFIER  shift, and go to state 193


State 129

  158 func_args: func_args . COMMA all_datatypes IDENTIFIER
  181 task: TASK IDENTIFIER COLON func_args . $@6 SCOPEOPEN taskscope SCOPECLOSE

    COMMA  shift, and go to state 194

    $default  reduce using rule 180 ($@6)

    $@6  go to state 195


State 130

  118 when_statement: WHEN SQUAREOPEN . RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 196
    func_invoke  go to state 178
    get_invoke   go to state 179


State 131

  115 while_loop: REPEAT SQUAREOPEN . RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 197
    func_invoke  go to state 178
    get_invoke   go to state 179


State 132

  113 for_loop: FOR SQUAREOPEN . both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    ATOMIC      shift, and go to state 64
    IDENTIFIER  shift, and go to state 198
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    simpleDatatype        go to state 199
    assignment_statement  go to state 200
    both_assignment       go to state 201


State 133

  138 task_invoke: MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON
  139            | MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    COLON  shift, and go to state 202


State 134

  141 sleep: SLEEP ROUNDOPEN . FLOATLITERAL ROUNDCLOSE SEMICOLON

    FLOATLITERAL  shift, and go to state 203


State 135

  134 func_invoke: INVOKE IDENTIFIER . COLON arguments
  135            | INVOKE IDENTIFIER . COLON NULL_ARGS

    COLON  shift, and go to state 204


State 136

  142 file_name: ARROW . STRINGLITERAL
  143          | ARROW . IDENTIFIER

    STRINGLITERAL  shift, and go to state 205
    IDENTIFIER     shift, and go to state 206


State 137

  145 input: IP file_name . COLON IDENTIFIER nextip

    COLON  shift, and go to state 207


State 138

  151 output: OP COLON . opstring file_name SEMICOLON

    STRINGLITERAL  shift, and go to state 208
    IDENTIFIER     shift, and go to state 209

    stringvalues  go to state 210
    opstring      go to state 211


State 139

  125 analysis_arrays: NARRNUM .

    $default  reduce using rule 125 (analysis_arrays)


State 140

  124 analysis_arrays: NARRDEC .

    $default  reduce using rule 124 (analysis_arrays)


State 141

  127 analysis_arrays: AARRNUM .

    $default  reduce using rule 127 (analysis_arrays)


State 142

  126 analysis_arrays: AARRDEC .

    $default  reduce using rule 126 (analysis_arrays)


State 143

  131 analyze_syntax: COLON analysis_arrays . analyze_syntax

    SEMICOLON  shift, and go to state 68
    COLON      shift, and go to state 69

    analyze_syntax  go to state 212


State 144

  102 assignment_statement: IDENTIFIER EQ . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 213
    func_invoke  go to state 178
    get_invoke   go to state 179


State 145

   17 expression_op: INCR .

    $default  reduce using rule 17 (expression_op)


State 146

   18 expression_op: DECR .

    $default  reduce using rule 18 (expression_op)


State 147

   15 expression_op: ASSN_MODULO .

    $default  reduce using rule 15 (expression_op)


State 148

   14 expression_op: ASSN_EXPONENT .

    $default  reduce using rule 14 (expression_op)


State 149

   13 expression_op: ASSN_DIV .

    $default  reduce using rule 13 (expression_op)


State 150

   16 expression_op: ASSN_MUL .

    $default  reduce using rule 16 (expression_op)


State 151

  103 expression_statement: IDENTIFIER expression_op . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 214
    func_invoke  go to state 178
    get_invoke   go to state 179


State 152

  222 start_body: SCOPEOPEN stt . SCOPECLOSE
  225 stt: stt . start_body

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    SLEEP          shift, and go to state 63
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    SEMICOLON      shift, and go to state 68
    COLON          shift, and go to state 69
    IDENTIFIER     shift, and go to state 70
    SCOPEOPEN      shift, and go to state 71
    SCOPECLOSE     shift, and go to state 215
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 72
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 75
    loop                  go to state 76
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 79
    when_statement        go to state 80
    analyze_syntax        go to state 81
    func_invoke2          go to state 82
    func_invoke           go to state 83
    task_invoke           go to state 84
    sleep                 go to state 85
    input                 go to state 86
    output                go to state 87
    start_body            go to state 160


State 153

  104 log: assignment_statement SEMICOLON .

    $default  reduce using rule 104 (log)


State 154

  105 log: expression_statement SEMICOLON .

    $default  reduce using rule 105 (log)


State 155

  120 when_statement: when_statement ELSE_WHEN . SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 216


State 156

  122 when_default: DEFAULT . SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 217


State 157

  116 conditional: when_statement when_default .

    $default  reduce using rule 116 (conditional)


State 158

  133 func_invoke2: func_invoke SEMICOLON .

    $default  reduce using rule 133 (func_invoke2)


State 159

  212 start_scope: START SCOPEOPEN stt SCOPECLOSE .

    $default  reduce using rule 212 (start_scope)


State 160

  225 stt: stt start_body .

    $default  reduce using rule 225 (stt)


State 161

  227 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN . attributes methods SCOPECLOSE

    ATOMIC     shift, and go to state 64
    NNUM       shift, and go to state 8
    NDEC       shift, and go to state 9
    NBOOL      shift, and go to state 10
    NLET       shift, and go to state 11
    NTEXT      shift, and go to state 12
    NVOID      shift, and go to state 13
    NARRNUM    shift, and go to state 14
    NARRDEC    shift, and go to state 15
    NARRBOOL   shift, and go to state 16
    NARRLET    shift, and go to state 17
    NARRTEXT   shift, and go to state 18
    ANUM       shift, and go to state 19
    ADEC       shift, and go to state 20
    ABOOL      shift, and go to state 21
    ALET       shift, and go to state 22
    ATEXT      shift, and go to state 23
    AARRNUM    shift, and go to state 24
    AARRDEC    shift, and go to state 25
    AARRBOOL   shift, and go to state 26
    AARRLET    shift, and go to state 27
    AARRTEXT   shift, and go to state 28
    UDATATYPE  shift, and go to state 29

    nonAtomicSimple  go to state 30
    atomicSimple     go to state 31
    nonAtomicArray   go to state 32
    atomicArray      go to state 33
    simpleDatatype   go to state 35
    arrayDatatype    go to state 36
    declarationStmt  go to state 218
    attributes       go to state 219


State 162

  161 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes
  162                 | ATOMIC FUNC IDENTIFIER COLON . NULL_ARGS COLON nonAtomic_datatypes

    NULL_ARGS   shift, and go to state 220
    NNUM        shift, and go to state 116
    NDEC        shift, and go to state 117
    NBOOL       shift, and go to state 118
    NLET        shift, and go to state 119
    NTEXT       shift, and go to state 120
    ANUM        shift, and go to state 121
    ADEC        shift, and go to state 122
    ABOOL       shift, and go to state 123
    ALET        shift, and go to state 124
    ATEXT       shift, and go to state 125
    UDATATYPE   shift, and go to state 126
    AUDATATYPE  shift, and go to state 127

    all_datatypes  go to state 128
    func_args      go to state 221


State 163

  160 func_decl: FUNC IDENTIFIER COLON NULL_ARGS . COLON nonAtomic_datatypes

    COLON  shift, and go to state 222


State 164

  158 func_args: func_args . COMMA all_datatypes IDENTIFIER
  159 func_decl: FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 194
    COLON  shift, and go to state 223


State 165

   57 RHS: TID .

    $default  reduce using rule 57 (RHS)


State 166

  140 get_invoke: GET . ARROW TIME

    ARROW  shift, and go to state 224


State 167

   61 RHS: NEG . ROUNDOPEN RHS ROUNDCLOSE

    ROUNDOPEN  shift, and go to state 225


State 168

   48 constants: INTEGERLITERAL .

    $default  reduce using rule 48 (constants)


State 169

   52 constants: STRINGLITERAL .

    $default  reduce using rule 52 (constants)


State 170

   49 constants: CHARACTERLITERAL .

    $default  reduce using rule 49 (constants)


State 171

   51 constants: BOOLEANLITERAL .

    $default  reduce using rule 51 (constants)


State 172

   50 constants: FLOATLITERAL .

    $default  reduce using rule 50 (constants)


State 173

   41 T: IDENTIFIER .

    $default  reduce using rule 41 (T)


State 174

   59 RHS: ROUNDOPEN . RHS all_ops next ROUNDCLOSE
   60    | ROUNDOPEN . RHS ROUNDCLOSE

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 226
    func_invoke  go to state 178
    get_invoke   go to state 179


State 175

   56 RHS: T .

    $default  reduce using rule 56 (RHS)


State 176

   55 RHS: constants .

    $default  reduce using rule 55 (RHS)


State 177

   94 simpleList: IDENTIFIER EQ RHS .

    $default  reduce using rule 94 (simpleList)


State 178

   42 T: func_invoke .

    $default  reduce using rule 42 (T)


State 179

   58 RHS: get_invoke .

    $default  reduce using rule 58 (RHS)


State 180

   93 simpleList: simpleList COMMA IDENTIFIER .
   95           | simpleList COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 227

    $default  reduce using rule 93 (simpleList)


State 181

  101 dimlist: INTEGERLITERAL .

    $default  reduce using rule 101 (dimlist)


State 182

   96 arrayList: IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   98          | IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
  100 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 228
    SQUARECLOSE  shift, and go to state 229


State 183

   97 arrayList: arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   99          | arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 230


State 184

  128 analyze_label: STRINGLITERAL .

    $default  reduce using rule 128 (analyze_label)


State 185

  129 analyze_label: IDENTIFIER .

    $default  reduce using rule 129 (analyze_label)


State 186

  130 analyze_statement: ANALYZE analyze_label . COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax

    COLON  shift, and go to state 231


State 187

  150 return_statement: RETURN RHS . SEMICOLON

    SEMICOLON  shift, and go to state 232


State 188

  210 id: ARROW . IDENTIFIER
  233 method_invoke: IDENTIFIER ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 233


State 189

  209 access: IDENTIFIER id .
  211 id: id . ARROW IDENTIFIER
  234 method_invoke: IDENTIFIER id . ARROW IDENTIFIER COLON arguments

    ARROW  shift, and go to state 234

    $default  reduce using rule 209 (access)


State 190

  175 func_scope: SCOPEOPEN func_statements . SCOPECLOSE
  179 func_statements: func_statements . func_scope

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPEOPEN      shift, and go to state 100
    SCOPECLOSE     shift, and go to state 235
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 101
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 102
    loop                  go to state 103
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 104
    when_statement        go to state 80
    analyze_statement     go to state 105
    func_invoke2          go to state 106
    func_invoke           go to state 83
    task_invoke           go to state 107
    sleep                 go to state 108
    input                 go to state 109
    return_statement      go to state 110
    output                go to state 111
    func_scope            go to state 192
    access                go to state 114
    method_invoke         go to state 115


State 191

  163 func_body: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 163 (func_body)


State 192

  179 func_statements: func_statements func_scope .

    $default  reduce using rule 179 (func_statements)


State 193

  157 func_args: all_datatypes IDENTIFIER .

    $default  reduce using rule 157 (func_args)


State 194

  158 func_args: func_args COMMA . all_datatypes IDENTIFIER

    NNUM        shift, and go to state 116
    NDEC        shift, and go to state 117
    NBOOL       shift, and go to state 118
    NLET        shift, and go to state 119
    NTEXT       shift, and go to state 120
    ANUM        shift, and go to state 121
    ADEC        shift, and go to state 122
    ABOOL       shift, and go to state 123
    ALET        shift, and go to state 124
    ATEXT       shift, and go to state 125
    UDATATYPE   shift, and go to state 126
    AUDATATYPE  shift, and go to state 127

    all_datatypes  go to state 236


State 195

  181 task: TASK IDENTIFIER COLON func_args $@6 . SCOPEOPEN taskscope SCOPECLOSE

    SCOPEOPEN  shift, and go to state 237


State 196

  118 when_statement: WHEN SQUAREOPEN RHS . SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 238


State 197

  115 while_loop: REPEAT SQUAREOPEN RHS . SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 239


State 198

  102 assignment_statement: IDENTIFIER . EQ RHS

    EQ  shift, and go to state 144


State 199

  109 both_assignment: simpleDatatype . g

    IDENTIFIER  shift, and go to state 240

    g  go to state 241


State 200

  108 both_assignment: assignment_statement .

    $default  reduce using rule 108 (both_assignment)


State 201

  113 for_loop: FOR SQUAREOPEN both_assignment . SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 242


State 202

  138 task_invoke: MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON
  139            | MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    INTEGERLITERAL  shift, and go to state 243


State 203

  141 sleep: SLEEP ROUNDOPEN FLOATLITERAL . ROUNDCLOSE SEMICOLON

    ROUNDCLOSE  shift, and go to state 244


State 204

  134 func_invoke: INVOKE IDENTIFIER COLON . arguments
  135            | INVOKE IDENTIFIER COLON . NULL_ARGS

    NULL_ARGS         shift, and go to state 245
    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 246
    func_invoke  go to state 178
    arguments    go to state 247
    get_invoke   go to state 179


State 205

  142 file_name: ARROW STRINGLITERAL .

    $default  reduce using rule 142 (file_name)


State 206

  143 file_name: ARROW IDENTIFIER .

    $default  reduce using rule 143 (file_name)


State 207

  145 input: IP file_name COLON . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 248


State 208

  148 stringvalues: STRINGLITERAL .

    $default  reduce using rule 148 (stringvalues)


State 209

  149 stringvalues: IDENTIFIER .

    $default  reduce using rule 149 (stringvalues)


State 210

  152 opstring: stringvalues . nextop

    HASH  shift, and go to state 249

    $default  reduce using rule 154 (nextop)

    nextop  go to state 250


State 211

  151 output: OP COLON opstring . file_name SEMICOLON

    ARROW  shift, and go to state 136

    $default  reduce using rule 144 (file_name)

    file_name  go to state 251


State 212

  131 analyze_syntax: COLON analysis_arrays analyze_syntax .

    $default  reduce using rule 131 (analyze_syntax)


State 213

  102 assignment_statement: IDENTIFIER EQ RHS .

    $default  reduce using rule 102 (assignment_statement)


State 214

  103 expression_statement: IDENTIFIER expression_op RHS .

    $default  reduce using rule 103 (expression_statement)


State 215

  222 start_body: SCOPEOPEN stt SCOPECLOSE .

    $default  reduce using rule 222 (start_body)


State 216

  120 when_statement: when_statement ELSE_WHEN SQUAREOPEN . RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 252
    func_invoke  go to state 178
    get_invoke   go to state 179


State 217

  122 when_default: DEFAULT SQUAREOPEN . RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 253
    func_invoke  go to state 178
    get_invoke   go to state 179


State 218

  228 attributes: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 254


State 219

  227 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes . methods SCOPECLOSE
  229 attributes: attributes . declarationStmt SEMICOLON

    ATOMIC     shift, and go to state 64
    NNUM       shift, and go to state 8
    NDEC       shift, and go to state 9
    NBOOL      shift, and go to state 10
    NLET       shift, and go to state 11
    NTEXT      shift, and go to state 12
    NVOID      shift, and go to state 13
    NARRNUM    shift, and go to state 14
    NARRDEC    shift, and go to state 15
    NARRBOOL   shift, and go to state 16
    NARRLET    shift, and go to state 17
    NARRTEXT   shift, and go to state 18
    ANUM       shift, and go to state 19
    ADEC       shift, and go to state 20
    ABOOL      shift, and go to state 21
    ALET       shift, and go to state 22
    ATEXT      shift, and go to state 23
    AARRNUM    shift, and go to state 24
    AARRDEC    shift, and go to state 25
    AARRBOOL   shift, and go to state 26
    AARRLET    shift, and go to state 27
    AARRTEXT   shift, and go to state 28
    UDATATYPE  shift, and go to state 29

    $default  reduce using rule 231 (methods)

    nonAtomicSimple  go to state 30
    atomicSimple     go to state 31
    nonAtomicArray   go to state 32
    atomicArray      go to state 33
    simpleDatatype   go to state 35
    arrayDatatype    go to state 36
    declarationStmt  go to state 255
    methods          go to state 256


State 220

  162 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON NULL_ARGS . COLON nonAtomic_datatypes

    COLON  shift, and go to state 257


State 221

  158 func_args: func_args . COMMA all_datatypes IDENTIFIER
  161 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 194
    COLON  shift, and go to state 258


State 222

  160 func_decl: FUNC IDENTIFIER COLON NULL_ARGS COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 8
    NDEC      shift, and go to state 9
    NBOOL     shift, and go to state 10
    NLET      shift, and go to state 11
    NTEXT     shift, and go to state 12
    NVOID     shift, and go to state 13
    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18

    nonAtomic_datatypes  go to state 259
    nonAtomicSimple      go to state 260
    nonAtomicArray       go to state 261


State 223

  159 func_decl: FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 8
    NDEC      shift, and go to state 9
    NBOOL     shift, and go to state 10
    NLET      shift, and go to state 11
    NTEXT     shift, and go to state 12
    NVOID     shift, and go to state 13
    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18

    nonAtomic_datatypes  go to state 262
    nonAtomicSimple      go to state 260
    nonAtomicArray       go to state 261


State 224

  140 get_invoke: GET ARROW . TIME

    TIME  shift, and go to state 263


State 225

   61 RHS: NEG ROUNDOPEN . RHS ROUNDCLOSE

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 264
    func_invoke  go to state 178
    get_invoke   go to state 179


State 226

   59 RHS: ROUNDOPEN RHS . all_ops next ROUNDCLOSE
   60    | ROUNDOPEN RHS . ROUNDCLOSE

    DIV         shift, and go to state 265
    ADD         shift, and go to state 266
    SUB         shift, and go to state 267
    MUL         shift, and go to state 268
    EXPONENT    shift, and go to state 269
    MODULO      shift, and go to state 270
    ARROW       shift, and go to state 271
    AND         shift, and go to state 272
    OR          shift, and go to state 273
    GT          shift, and go to state 274
    LT          shift, and go to state 275
    GTEQ        shift, and go to state 276
    LTEQ        shift, and go to state 277
    NOT_EQ      shift, and go to state 278
    EQUAL_TWO   shift, and go to state 279
    ROUNDCLOSE  shift, and go to state 280
    HASH        shift, and go to state 281

    comparison_op  go to state 282
    arithmetic_op  go to state 283
    logical_op     go to state 284
    all_ops        go to state 285


State 227

   95 simpleList: simpleList COMMA IDENTIFIER EQ . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 286
    func_invoke  go to state 178
    get_invoke   go to state 179


State 228

  100 dimlist: dimlist COMMA . INTEGERLITERAL

    INTEGERLITERAL  shift, and go to state 287


State 229

   96 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   98          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 288

    $default  reduce using rule 96 (arrayList)


State 230

   97 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   99          | arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 181

    dimlist  go to state 289


State 231

  130 analyze_statement: ANALYZE analyze_label COLON . analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax

    STRINGLITERAL  shift, and go to state 184
    IDENTIFIER     shift, and go to state 185

    analyze_label  go to state 290


State 232

  150 return_statement: RETURN RHS SEMICOLON .

    $default  reduce using rule 150 (return_statement)


State 233

  210 id: ARROW IDENTIFIER .
  233 method_invoke: IDENTIFIER ARROW IDENTIFIER . COLON arguments

    COLON  shift, and go to state 291

    $default  reduce using rule 210 (id)


State 234

  211 id: id ARROW . IDENTIFIER
  234 method_invoke: IDENTIFIER id ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 292


State 235

  175 func_scope: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 175 (func_scope)


State 236

  158 func_args: func_args COMMA all_datatypes . IDENTIFIER

    IDENTIFIER  shift, and go to state 293


State 237

  181 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN . taskscope SCOPECLOSE

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 302
    access                go to state 303
    method_invoke         go to state 304


State 238

  118 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE . $@3 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 117 ($@3)

    $@3  go to state 305


State 239

  115 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE . $@2 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 114 ($@2)

    $@2  go to state 306


State 240

  106 g: IDENTIFIER . EQ RHS

    EQ  shift, and go to state 307


State 241

  107 g: g . COMMA IDENTIFIER EQ RHS
  109 both_assignment: simpleDatatype g .

    COMMA  shift, and go to state 308

    $default  reduce using rule 109 (both_assignment)


State 242

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON . RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 309
    func_invoke  go to state 178
    get_invoke   go to state 179


State 243

  138 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON arguments SEMICOLON
  139            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    COLON  shift, and go to state 310


State 244

  141 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 311


State 245

  135 func_invoke: INVOKE IDENTIFIER COLON NULL_ARGS .

    $default  reduce using rule 135 (func_invoke)


State 246

  136 arguments: RHS .

    $default  reduce using rule 136 (arguments)


State 247

  134 func_invoke: INVOKE IDENTIFIER COLON arguments .
  137 arguments: arguments . COMMA RHS

    COMMA  shift, and go to state 312

    COMMA     [reduce using rule 134 (func_invoke)]
    $default  reduce using rule 134 (func_invoke)


State 248

  145 input: IP file_name COLON IDENTIFIER . nextip

    COMMA      shift, and go to state 313
    SEMICOLON  shift, and go to state 314

    nextip  go to state 315


State 249

  153 nextop: HASH . stringvalues nextop

    STRINGLITERAL  shift, and go to state 208
    IDENTIFIER     shift, and go to state 209

    stringvalues  go to state 316


State 250

  152 opstring: stringvalues nextop .

    $default  reduce using rule 152 (opstring)


State 251

  151 output: OP COLON opstring file_name . SEMICOLON

    SEMICOLON  shift, and go to state 317


State 252

  120 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS . SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 318


State 253

  122 when_default: DEFAULT SQUAREOPEN RHS . SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 319


State 254

  228 attributes: declarationStmt SEMICOLON .

    $default  reduce using rule 228 (attributes)


State 255

  229 attributes: attributes declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 320


State 256

  227 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods . SCOPECLOSE
  230 methods: methods . method

    FUNC        shift, and go to state 7
    SCOPECLOSE  shift, and go to state 321

    func_decl  go to state 322
    method     go to state 323


State 257

  162 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON NULL_ARGS COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 8
    NDEC      shift, and go to state 9
    NBOOL     shift, and go to state 10
    NLET      shift, and go to state 11
    NTEXT     shift, and go to state 12
    NVOID     shift, and go to state 13
    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18

    nonAtomic_datatypes  go to state 324
    nonAtomicSimple      go to state 260
    nonAtomicArray       go to state 261


State 258

  161 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 8
    NDEC      shift, and go to state 9
    NBOOL     shift, and go to state 10
    NLET      shift, and go to state 11
    NTEXT     shift, and go to state 12
    NVOID     shift, and go to state 13
    NARRNUM   shift, and go to state 14
    NARRDEC   shift, and go to state 15
    NARRBOOL  shift, and go to state 16
    NARRLET   shift, and go to state 17
    NARRTEXT  shift, and go to state 18

    nonAtomic_datatypes  go to state 325
    nonAtomicSimple      go to state 260
    nonAtomicArray       go to state 261


State 259

  160 func_decl: FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes .

    $default  reduce using rule 160 (func_decl)


State 260

   34 nonAtomic_datatypes: nonAtomicSimple .

    $default  reduce using rule 34 (nonAtomic_datatypes)


State 261

   33 nonAtomic_datatypes: nonAtomicArray .

    $default  reduce using rule 33 (nonAtomic_datatypes)


State 262

  159 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 159 (func_decl)


State 263

  140 get_invoke: GET ARROW TIME .

    $default  reduce using rule 140 (get_invoke)


State 264

   61 RHS: NEG ROUNDOPEN RHS . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 326


State 265

   28 arithmetic_op: DIV .

    $default  reduce using rule 28 (arithmetic_op)


State 266

   25 arithmetic_op: ADD .

    $default  reduce using rule 25 (arithmetic_op)


State 267

   26 arithmetic_op: SUB .

    $default  reduce using rule 26 (arithmetic_op)


State 268

   27 arithmetic_op: MUL .

    $default  reduce using rule 27 (arithmetic_op)


State 269

   30 arithmetic_op: EXPONENT .

    $default  reduce using rule 30 (arithmetic_op)


State 270

   29 arithmetic_op: MODULO .

    $default  reduce using rule 29 (arithmetic_op)


State 271

   47 all_ops: ARROW .

    $default  reduce using rule 47 (all_ops)


State 272

   31 logical_op: AND .

    $default  reduce using rule 31 (logical_op)


State 273

   32 logical_op: OR .

    $default  reduce using rule 32 (logical_op)


State 274

   20 comparison_op: GT .

    $default  reduce using rule 20 (comparison_op)


State 275

   19 comparison_op: LT .

    $default  reduce using rule 19 (comparison_op)


State 276

   21 comparison_op: GTEQ .

    $default  reduce using rule 21 (comparison_op)


State 277

   22 comparison_op: LTEQ .

    $default  reduce using rule 22 (comparison_op)


State 278

   23 comparison_op: NOT_EQ .

    $default  reduce using rule 23 (comparison_op)


State 279

   24 comparison_op: EQUAL_TWO .

    $default  reduce using rule 24 (comparison_op)


State 280

   60 RHS: ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 60 (RHS)


State 281

   46 all_ops: HASH .

    $default  reduce using rule 46 (all_ops)


State 282

   44 all_ops: comparison_op .

    $default  reduce using rule 44 (all_ops)


State 283

   43 all_ops: arithmetic_op .

    $default  reduce using rule 43 (all_ops)


State 284

   45 all_ops: logical_op .

    $default  reduce using rule 45 (all_ops)


State 285

   59 RHS: ROUNDOPEN RHS all_ops . next ROUNDCLOSE

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    next         go to state 327
    RHS          go to state 328
    func_invoke  go to state 178
    get_invoke   go to state 179


State 286

   95 simpleList: simpleList COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 95 (simpleList)


State 287

  100 dimlist: dimlist COMMA INTEGERLITERAL .

    $default  reduce using rule 100 (dimlist)


State 288

   98 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 329
    func_invoke  go to state 178
    get_invoke   go to state 179


State 289

   97 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   99          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
  100 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 228
    SQUARECLOSE  shift, and go to state 330


State 290

  130 analyze_statement: ANALYZE analyze_label COLON analyze_label . COLON analysis_arrays COLON analysis_arrays analyze_syntax

    COLON  shift, and go to state 331


State 291

  233 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON . arguments

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 246
    func_invoke  go to state 178
    arguments    go to state 332
    get_invoke   go to state 179


State 292

  211 id: id ARROW IDENTIFIER .
  234 method_invoke: IDENTIFIER id ARROW IDENTIFIER . COLON arguments

    COLON  shift, and go to state 333

    $default  reduce using rule 211 (id)


State 293

  158 func_args: func_args COMMA all_datatypes IDENTIFIER .

    $default  reduce using rule 158 (func_args)


State 294

  188 taskscope: SCOPEOPEN . taskscope SCOPECLOSE taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 334
    access                go to state 303
    method_invoke         go to state 304


State 295

  182 taskscope: declaration . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 335
    access                go to state 303
    method_invoke         go to state 304


State 296

  183 taskscope: log . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 336
    access                go to state 303
    method_invoke         go to state 304


State 297

  185 taskscope: loop . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 337
    access                go to state 303
    method_invoke         go to state 304


State 298

  184 taskscope: conditional . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 338
    access                go to state 303
    method_invoke         go to state 304


State 299

  186 taskscope: func_invoke2 . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 339
    access                go to state 303
    method_invoke         go to state 304


State 300

  189 taskscope: sleep . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 340
    access                go to state 303
    method_invoke         go to state 304


State 301

  187 taskscope: output . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 341
    access                go to state 303
    method_invoke         go to state 304


State 302

  181 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 342


State 303

  191 taskscope: access .

    $default  reduce using rule 191 (taskscope)


State 304

  190 taskscope: method_invoke .

    $default  reduce using rule 190 (taskscope)


State 305

  118 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 343


State 306

  115 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 344


State 307

  106 g: IDENTIFIER EQ . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 345
    func_invoke  go to state 178
    get_invoke   go to state 179


State 308

  107 g: g COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 346


State 309

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS . SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 347


State 310

  138 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON arguments SEMICOLON
  139            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON NULL_ARGS SEMICOLON

    INTEGERLITERAL  shift, and go to state 348


State 311

  141 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON .

    $default  reduce using rule 141 (sleep)


State 312

  137 arguments: arguments COMMA . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 349
    func_invoke  go to state 178
    get_invoke   go to state 179


State 313

  146 nextip: COMMA . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 350


State 314

  147 nextip: SEMICOLON .

    $default  reduce using rule 147 (nextip)


State 315

  145 input: IP file_name COLON IDENTIFIER nextip .

    $default  reduce using rule 145 (input)


State 316

  153 nextop: HASH stringvalues . nextop

    HASH  shift, and go to state 249

    $default  reduce using rule 154 (nextop)

    nextop  go to state 351


State 317

  151 output: OP COLON opstring file_name SEMICOLON .

    $default  reduce using rule 151 (output)


State 318

  120 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE . $@4 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 119 ($@4)

    $@4  go to state 352


State 319

  122 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE . $@5 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 121 ($@5)

    $@5  go to state 353


State 320

  229 attributes: attributes declarationStmt SEMICOLON .

    $default  reduce using rule 229 (attributes)


State 321

  227 type_declaration: TYPE UDATATYPE $@7 SCOPEOPEN attributes methods SCOPECLOSE .

    $default  reduce using rule 227 (type_declaration)


State 322

  232 method: func_decl . SCOPEOPEN method_body SCOPECLOSE

    SCOPEOPEN  shift, and go to state 354


State 323

  230 methods: methods method .

    $default  reduce using rule 230 (methods)


State 324

  162 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON NULL_ARGS COLON nonAtomic_datatypes .

    $default  reduce using rule 162 (atomic_func_decl)


State 325

  161 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 161 (atomic_func_decl)


State 326

   61 RHS: NEG ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 61 (RHS)


State 327

   59 RHS: ROUNDOPEN RHS all_ops next . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 355


State 328

   53 next: RHS . all_ops next
   54     | RHS .

    DIV        shift, and go to state 265
    ADD        shift, and go to state 266
    SUB        shift, and go to state 267
    MUL        shift, and go to state 268
    EXPONENT   shift, and go to state 269
    MODULO     shift, and go to state 270
    ARROW      shift, and go to state 271
    AND        shift, and go to state 272
    OR         shift, and go to state 273
    GT         shift, and go to state 274
    LT         shift, and go to state 275
    GTEQ       shift, and go to state 276
    LTEQ       shift, and go to state 277
    NOT_EQ     shift, and go to state 278
    EQUAL_TWO  shift, and go to state 279
    HASH       shift, and go to state 281

    $default  reduce using rule 54 (next)

    comparison_op  go to state 282
    arithmetic_op  go to state 283
    logical_op     go to state 284
    all_ops        go to state 356


State 329

   98 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 98 (arrayList)


State 330

   97 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   99          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 357

    $default  reduce using rule 97 (arrayList)


State 331

  130 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON . analysis_arrays COLON analysis_arrays analyze_syntax

    NARRNUM  shift, and go to state 139
    NARRDEC  shift, and go to state 140
    AARRNUM  shift, and go to state 141
    AARRDEC  shift, and go to state 142

    analysis_arrays  go to state 358


State 332

  137 arguments: arguments . COMMA RHS
  233 method_invoke: IDENTIFIER ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 312

    $default  reduce using rule 233 (method_invoke)


State 333

  234 method_invoke: IDENTIFIER id ARROW IDENTIFIER COLON . arguments

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 246
    func_invoke  go to state 178
    arguments    go to state 359
    get_invoke   go to state 179


State 334

  188 taskscope: SCOPEOPEN taskscope . SCOPECLOSE taskscope

    SCOPECLOSE  shift, and go to state 360


State 335

  182 taskscope: declaration taskscope .

    $default  reduce using rule 182 (taskscope)


State 336

  183 taskscope: log taskscope .

    $default  reduce using rule 183 (taskscope)


State 337

  185 taskscope: loop taskscope .

    $default  reduce using rule 185 (taskscope)


State 338

  184 taskscope: conditional taskscope .

    $default  reduce using rule 184 (taskscope)


State 339

  186 taskscope: func_invoke2 taskscope .

    $default  reduce using rule 186 (taskscope)


State 340

  189 taskscope: sleep taskscope .

    $default  reduce using rule 189 (taskscope)


State 341

  187 taskscope: output taskscope .

    $default  reduce using rule 187 (taskscope)


State 342

  181 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE .

    $default  reduce using rule 181 (task)


State 343

  118 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 374
    statements            go to state 375
    access                go to state 376
    method_invoke         go to state 377


State 344

  115 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 374
    statements            go to state 378
    access                go to state 376
    method_invoke         go to state 377


State 345

  106 g: IDENTIFIER EQ RHS .

    $default  reduce using rule 106 (g)


State 346

  107 g: g COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 379


State 347

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON . expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    IDENTIFIER  shift, and go to state 380

    expression_statement  go to state 381


State 348

  138 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON arguments SEMICOLON
  139            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON NULL_ARGS SEMICOLON

    COLON  shift, and go to state 382


State 349

  137 arguments: arguments COMMA RHS .

    $default  reduce using rule 137 (arguments)


State 350

  146 nextip: COMMA IDENTIFIER . nextip

    COMMA      shift, and go to state 313
    SEMICOLON  shift, and go to state 314

    nextip  go to state 383


State 351

  153 nextop: HASH stringvalues nextop .

    $default  reduce using rule 153 (nextop)


State 352

  120 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 384


State 353

  122 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 385


State 354

  232 method: func_decl SCOPEOPEN . method_body SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    IN             shift, and go to state 386
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPEOPEN      shift, and go to state 387
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 391
    when_statement        go to state 80
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 83
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    access                go to state 399
    method_invoke         go to state 400
    in_statement          go to state 401
    method_statements     go to state 402
    method_body           go to state 403


State 355

   59 RHS: ROUNDOPEN RHS all_ops next ROUNDCLOSE .

    $default  reduce using rule 59 (RHS)


State 356

   53 next: RHS all_ops . next

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    next         go to state 404
    RHS          go to state 328
    func_invoke  go to state 178
    get_invoke   go to state 179


State 357

   99 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 405
    func_invoke  go to state 178
    get_invoke   go to state 179


State 358

  130 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays . COLON analysis_arrays analyze_syntax

    COLON  shift, and go to state 406


State 359

  137 arguments: arguments . COMMA RHS
  234 method_invoke: IDENTIFIER id ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 312

    $default  reduce using rule 234 (method_invoke)


State 360

  188 taskscope: SCOPEOPEN taskscope SCOPECLOSE . taskscope

    WHEN        shift, and go to state 59
    REPEAT      shift, and go to state 60
    FOR         shift, and go to state 61
    SLEEP       shift, and go to state 63
    ATOMIC      shift, and go to state 64
    INVOKE      shift, and go to state 65
    OP          shift, and go to state 67
    IDENTIFIER  shift, and go to state 99
    SCOPEOPEN   shift, and go to state 294
    NNUM        shift, and go to state 8
    NDEC        shift, and go to state 9
    NBOOL       shift, and go to state 10
    NLET        shift, and go to state 11
    NTEXT       shift, and go to state 12
    NVOID       shift, and go to state 13
    NARRNUM     shift, and go to state 14
    NARRDEC     shift, and go to state 15
    NARRBOOL    shift, and go to state 16
    NARRLET     shift, and go to state 17
    NARRTEXT    shift, and go to state 18
    ANUM        shift, and go to state 19
    ADEC        shift, and go to state 20
    ABOOL       shift, and go to state 21
    ALET        shift, and go to state 22
    ATEXT       shift, and go to state 23
    AARRNUM     shift, and go to state 24
    AARRDEC     shift, and go to state 25
    AARRBOOL    shift, and go to state 26
    AARRLET     shift, and go to state 27
    AARRTEXT    shift, and go to state 28
    UDATATYPE   shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 295
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 296
    loop                  go to state 297
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 298
    when_statement        go to state 80
    func_invoke2          go to state 299
    func_invoke           go to state 83
    sleep                 go to state 300
    output                go to state 301
    taskscope             go to state 407
    access                go to state 303
    method_invoke         go to state 304


State 361

  202 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 408


State 362

  203 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 409


State 363

  192 statement: declaration .

    $default  reduce using rule 192 (statement)


State 364

  193 statement: log .

    $default  reduce using rule 193 (statement)


State 365

  195 statement: loop .

    $default  reduce using rule 195 (statement)


State 366

  194 statement: conditional .

    $default  reduce using rule 194 (statement)


State 367

  199 statement: analyze_statement .

    $default  reduce using rule 199 (statement)


State 368

  197 statement: func_invoke2 .

    $default  reduce using rule 197 (statement)


State 369

  198 statement: task_invoke .

    $default  reduce using rule 198 (statement)


State 370

  201 statement: sleep .

    $default  reduce using rule 201 (statement)


State 371

  204 statement: input .

    $default  reduce using rule 204 (statement)


State 372

  196 statement: return_statement .

    $default  reduce using rule 196 (statement)


State 373

  200 statement: output .

    $default  reduce using rule 200 (statement)


State 374

  207 statements: statement .

    $default  reduce using rule 207 (statements)


State 375

  118 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements . SCOPECLOSE
  208 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPECLOSE     shift, and go to state 410
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 411
    access                go to state 376
    method_invoke         go to state 377


State 376

  206 statement: access .

    $default  reduce using rule 206 (statement)


State 377

  205 statement: method_invoke .

    $default  reduce using rule 205 (statement)


State 378

  115 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements . SCOPECLOSE
  208 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPECLOSE     shift, and go to state 412
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 411
    access                go to state 376
    method_invoke         go to state 377


State 379

  107 g: g COMMA IDENTIFIER EQ . RHS

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 413
    func_invoke  go to state 178
    get_invoke   go to state 179


State 380

  103 expression_statement: IDENTIFIER . expression_op RHS

    INCR           shift, and go to state 145
    DECR           shift, and go to state 146
    ASSN_MODULO    shift, and go to state 147
    ASSN_EXPONENT  shift, and go to state 148
    ASSN_DIV       shift, and go to state 149
    ASSN_MUL       shift, and go to state 150

    expression_op  go to state 151


State 381

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement . SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 414


State 382

  138 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . arguments SEMICOLON
  139            | MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . NULL_ARGS SEMICOLON

    NULL_ARGS         shift, and go to state 415
    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 246
    func_invoke  go to state 178
    arguments    go to state 416
    get_invoke   go to state 179


State 383

  146 nextip: COMMA IDENTIFIER nextip .

    $default  reduce using rule 146 (nextip)


State 384

  120 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 374
    statements            go to state 417
    access                go to state 376
    method_invoke         go to state 377


State 385

  122 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 374
    statements            go to state 418
    access                go to state 376
    method_invoke         go to state 377


State 386

  235 in_statement: IN . ARROW IDENTIFIER SEMICOLON
  236             | IN . ARROW IDENTIFIER COLON arguments

    ARROW  shift, and go to state 419


State 387

  248 method_statements: SCOPEOPEN . method_statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    IN             shift, and go to state 386
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPEOPEN      shift, and go to state 387
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 391
    when_statement        go to state 80
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 83
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    access                go to state 399
    method_invoke         go to state 400
    in_statement          go to state 401
    method_statements     go to state 420


State 388

  237 method_statements: declaration .

    $default  reduce using rule 237 (method_statements)


State 389

  238 method_statements: log .

    $default  reduce using rule 238 (method_statements)


State 390

  241 method_statements: loop .

    $default  reduce using rule 241 (method_statements)


State 391

  243 method_statements: conditional .

    $default  reduce using rule 243 (method_statements)


State 392

  244 method_statements: analyze_statement .

    $default  reduce using rule 244 (method_statements)


State 393

  240 method_statements: func_invoke2 .

    $default  reduce using rule 240 (method_statements)


State 394

  239 method_statements: task_invoke .

    $default  reduce using rule 239 (method_statements)


State 395

  247 method_statements: sleep .

    $default  reduce using rule 247 (method_statements)


State 396

  245 method_statements: input .

    $default  reduce using rule 245 (method_statements)


State 397

  242 method_statements: return_statement .

    $default  reduce using rule 242 (method_statements)


State 398

  246 method_statements: output .

    $default  reduce using rule 246 (method_statements)


State 399

  251 method_statements: access .

    $default  reduce using rule 251 (method_statements)


State 400

  250 method_statements: method_invoke .

    $default  reduce using rule 250 (method_statements)


State 401

  249 method_statements: in_statement .

    $default  reduce using rule 249 (method_statements)


State 402

  252 method_body: method_statements .

    $default  reduce using rule 252 (method_body)


State 403

  232 method: func_decl SCOPEOPEN method_body . SCOPECLOSE
  253 method_body: method_body . method_statements

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    IN             shift, and go to state 386
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPEOPEN      shift, and go to state 387
    SCOPECLOSE     shift, and go to state 421
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 388
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 389
    loop                  go to state 390
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 391
    when_statement        go to state 80
    analyze_statement     go to state 392
    func_invoke2          go to state 393
    func_invoke           go to state 83
    task_invoke           go to state 394
    sleep                 go to state 395
    input                 go to state 396
    return_statement      go to state 397
    output                go to state 398
    access                go to state 399
    method_invoke         go to state 400
    in_statement          go to state 401
    method_statements     go to state 422


State 404

   53 next: RHS all_ops next .

    $default  reduce using rule 53 (next)


State 405

   99 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 99 (arrayList)


State 406

  130 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON . analysis_arrays analyze_syntax

    NARRNUM  shift, and go to state 139
    NARRDEC  shift, and go to state 140
    AARRNUM  shift, and go to state 141
    AARRDEC  shift, and go to state 142

    analysis_arrays  go to state 423


State 407

  188 taskscope: SCOPEOPEN taskscope SCOPECLOSE taskscope .

    $default  reduce using rule 188 (taskscope)


State 408

  202 statement: BREAK SEMICOLON .

    $default  reduce using rule 202 (statement)


State 409

  203 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 203 (statement)


State 410

  118 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 118 (when_statement)


State 411

  208 statements: statements statement .

    $default  reduce using rule 208 (statements)


State 412

  115 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 115 (while_loop)


State 413

  107 g: g COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 107 (g)


State 414

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE . $@1 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 112 ($@1)

    $@1  go to state 424


State 415

  139 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS . SEMICOLON

    SEMICOLON  shift, and go to state 425


State 416

  137 arguments: arguments . COMMA RHS
  138 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments . SEMICOLON

    COMMA      shift, and go to state 312
    SEMICOLON  shift, and go to state 426


State 417

  120 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements . SCOPECLOSE
  208 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPECLOSE     shift, and go to state 427
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 411
    access                go to state 376
    method_invoke         go to state 377


State 418

  122 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements . SCOPECLOSE
  208 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPECLOSE     shift, and go to state 428
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 411
    access                go to state 376
    method_invoke         go to state 377


State 419

  235 in_statement: IN ARROW . IDENTIFIER SEMICOLON
  236             | IN ARROW . IDENTIFIER COLON arguments

    IDENTIFIER  shift, and go to state 429


State 420

  248 method_statements: SCOPEOPEN method_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 430


State 421

  232 method: func_decl SCOPEOPEN method_body SCOPECLOSE .

    $default  reduce using rule 232 (method)


State 422

  253 method_body: method_body method_statements .

    $default  reduce using rule 253 (method_body)


State 423

  130 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays . analyze_syntax

    SEMICOLON  shift, and go to state 68
    COLON      shift, and go to state 69

    analyze_syntax  go to state 431


State 424

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 432


State 425

  139 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON NULL_ARGS SEMICOLON .

    $default  reduce using rule 139 (task_invoke)


State 426

  138 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON .

    $default  reduce using rule 138 (task_invoke)


State 427

  120 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 120 (when_statement)


State 428

  122 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 122 (when_default)


State 429

  235 in_statement: IN ARROW IDENTIFIER . SEMICOLON
  236             | IN ARROW IDENTIFIER . COLON arguments

    SEMICOLON  shift, and go to state 433
    COLON      shift, and go to state 434


State 430

  248 method_statements: SCOPEOPEN method_statements SCOPECLOSE .

    $default  reduce using rule 248 (method_statements)


State 431

  130 analyze_statement: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_syntax .

    $default  reduce using rule 130 (analyze_statement)


State 432

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 374
    statements            go to state 435
    access                go to state 376
    method_invoke         go to state 377


State 433

  235 in_statement: IN ARROW IDENTIFIER SEMICOLON .

    $default  reduce using rule 235 (in_statement)


State 434

  236 in_statement: IN ARROW IDENTIFIER COLON . arguments

    TID               shift, and go to state 165
    GET               shift, and go to state 166
    INVOKE            shift, and go to state 65
    NEG               shift, and go to state 167
    INTEGERLITERAL    shift, and go to state 168
    STRINGLITERAL     shift, and go to state 169
    CHARACTERLITERAL  shift, and go to state 170
    BOOLEANLITERAL    shift, and go to state 171
    FLOATLITERAL      shift, and go to state 172
    IDENTIFIER        shift, and go to state 173
    ROUNDOPEN         shift, and go to state 174

    T            go to state 175
    constants    go to state 176
    RHS          go to state 246
    func_invoke  go to state 178
    arguments    go to state 436
    get_invoke   go to state 179


State 435

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements . SCOPECLOSE
  208 statements: statements . statement

    WHEN           shift, and go to state 59
    REPEAT         shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 361
    CONTINUE       shift, and go to state 362
    MAKE_PARALLEL  shift, and go to state 62
    ANALYZE        shift, and go to state 97
    SLEEP          shift, and go to state 63
    RETURN         shift, and go to state 98
    ATOMIC         shift, and go to state 64
    INVOKE         shift, and go to state 65
    IP             shift, and go to state 66
    OP             shift, and go to state 67
    IDENTIFIER     shift, and go to state 99
    SCOPECLOSE     shift, and go to state 437
    NNUM           shift, and go to state 8
    NDEC           shift, and go to state 9
    NBOOL          shift, and go to state 10
    NLET           shift, and go to state 11
    NTEXT          shift, and go to state 12
    NVOID          shift, and go to state 13
    NARRNUM        shift, and go to state 14
    NARRDEC        shift, and go to state 15
    NARRBOOL       shift, and go to state 16
    NARRLET        shift, and go to state 17
    NARRTEXT       shift, and go to state 18
    ANUM           shift, and go to state 19
    ADEC           shift, and go to state 20
    ABOOL          shift, and go to state 21
    ALET           shift, and go to state 22
    ATEXT          shift, and go to state 23
    AARRNUM        shift, and go to state 24
    AARRDEC        shift, and go to state 25
    AARRBOOL       shift, and go to state 26
    AARRLET        shift, and go to state 27
    AARRTEXT       shift, and go to state 28
    UDATATYPE      shift, and go to state 29

    nonAtomicSimple       go to state 30
    atomicSimple          go to state 31
    nonAtomicArray        go to state 32
    atomicArray           go to state 33
    declaration           go to state 363
    simpleDatatype        go to state 35
    arrayDatatype         go to state 36
    declarationStmt       go to state 37
    assignment_statement  go to state 73
    expression_statement  go to state 74
    log                   go to state 364
    loop                  go to state 365
    for_loop              go to state 77
    while_loop            go to state 78
    conditional           go to state 366
    when_statement        go to state 80
    analyze_statement     go to state 367
    func_invoke2          go to state 368
    func_invoke           go to state 83
    task_invoke           go to state 369
    sleep                 go to state 370
    input                 go to state 371
    return_statement      go to state 372
    output                go to state 373
    statement             go to state 411
    access                go to state 376
    method_invoke         go to state 377


State 436

  137 arguments: arguments . COMMA RHS
  236 in_statement: IN ARROW IDENTIFIER COLON arguments .

    COMMA  shift, and go to state 312

    $default  reduce using rule 236 (in_statement)


State 437

  113 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 113 (for_loop)
