Terminals unused in grammar

    START
    LEXERROR


Rules useless in parser due to conflicts

  116 is: IDENTIFIER
  117   | constants
  118   | func_invoke


State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 260 conflicts: 2 reduce/reduce
State 261 conflicts: 2 reduce/reduce
State 264 conflicts: 2 reduce/reduce
State 278 conflicts: 1 shift/reduce
State 279 conflicts: 1 shift/reduce


Grammar

    0 $accept: begin $end

    1 expression_op: ASSN_DIV
    2              | ASSN_EXPONENT
    3              | ASSN_MODULO
    4              | ASSN_MUL
    5              | INCR
    6              | DECR

    7 comparison_op: LT
    8              | GT
    9              | GTEQ
   10              | LTEQ
   11              | NOT_EQ
   12              | EQUAL_TWO

   13 arithmetic_op: ADD
   14              | SUB
   15              | MUL
   16              | DIV
   17              | MODULO
   18              | EXPONENT

   19 logical_op: AND
   20           | OR

   21 nonAtomic_datatypes: nonAtomicArray
   22                    | nonAtomicSimple

   23 begin: %empty
   24      | begin declaration
   25      | begin function
   26      | begin task
   27      | begin type_declaration

   28 T: IDENTIFIER
   29  | func_invoke

   30 all_ops: arithmetic_op
   31        | comparison_op
   32        | logical_op
   33        | HASH

   34 constants: INTEGERLITERAL
   35          | CHARACTERLITERAL
   36          | FLOATLITERAL
   37          | BOOLEANLITERAL
   38          | STRINGLITERAL

   39 next: RHS all_ops next
   40     | RHS

   41 RHS: constants
   42    | T
   43    | ROUNDOPEN RHS all_ops next ROUNDCLOSE
   44    | ROUNDOPEN RHS ROUNDCLOSE
   45    | NEG ROUNDOPEN RHS ROUNDCLOSE
   46    | get_invoke

   47 nonAtomicSimple: NNUM
   48                | NDEC
   49                | NBOOL
   50                | NLET
   51                | NTEXT
   52                | NVOID

   53 atomicSimple: ANUM
   54             | ADEC
   55             | ABOOL
   56             | ALET
   57             | ATEXT

   58 nonAtomicArray: NARRNUM
   59               | NARRDEC
   60               | NARRBOOL
   61               | NARRLET
   62               | NARRTEXT

   63 atomicArray: AARRNUM
   64            | AARRDEC
   65            | AARRBOOL
   66            | AARRLET
   67            | AARRTEXT

   68 declaration: declarationStmt SEMICOLON

   69 simpleDatatype: nonAtomicSimple
   70               | atomicSimple
   71               | UDATATYPE
   72               | ATOMIC AUDATATYPE

   73 arrayDatatype: nonAtomicArray
   74              | atomicArray

   75 declarationStmt: simpleDatatype simpleList
   76                | arrayDatatype arrayList

   77 simpleList: IDENTIFIER
   78           | simpleList COMMA IDENTIFIER
   79           | IDENTIFIER EQ RHS
   80           | simpleList COMMA IDENTIFIER EQ RHS

   81 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   82          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   83          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS
   84          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

   85 dimlist: dimlist COMMA INTEGERLITERAL
   86        | INTEGERLITERAL

   87 assignment_statement: IDENTIFIER EQ RHS

   88 expression_statement: IDENTIFIER expression_op RHS

   89 log: assignment_statement SEMICOLON
   90    | expression_statement SEMICOLON

   91 both_assignment: assignment_statement
   92                | declarationStmt

   93 loop: for_loop
   94     | while_loop

   95 $@1: %empty

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

   97 $@2: %empty

   98 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

   99 conditional: when_statement when_default

  100 $@3: %empty

  101 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

  102 $@4: %empty

  103 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

  104 $@5: %empty

  105 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE
  106             | %empty

  107 analysis_arrays: NARRDEC
  108                | NARRNUM
  109                | AARRDEC
  110                | AARRNUM

  111 analyze_label: STRINGLITERAL
  112              | IDENTIFIER

  113 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

  114 analyze_statement: COLON analysis_arrays analyze_statement
  115                  | SEMICOLON

  116 is: IDENTIFIER
  117   | constants
  118   | func_invoke
  119   | RHS

  120 func_invoke: INVOKE IDENTIFIER COLON arguments SEMICOLON

  121 arguments: is
  122          | arguments COMMA is
  123          | NULL_ARGS

  124 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

  125 get_invoke: GET ARROW TIME

  126 get_statement: NDEC IDENTIFIER EQ get_invoke SEMICOLON
  127              | ADEC IDENTIFIER EQ get_invoke SEMICOLON

  128 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

  129 file_name: ARROW STRINGLITERAL
  130          | ARROW IDENTIFIER
  131          | %empty

  132 input: IP file_name COLON IDENTIFIER nextip

  133 nextip: COMMA IDENTIFIER nextip
  134       | SEMICOLON

  135 stringvalues: STRINGLITERAL
  136             | IDENTIFIER

  137 return_statement: RETURN RHS SEMICOLON

  138 output: OP COLON opstring file_name SEMICOLON

  139 opstring: stringvalues nextop

  140 nextop: HASH stringvalues nextop
  141       | %empty

  142 function: func_decl func_body
  143         | atomic_func_decl func_body

  144 func_args: IDENTIFIER
  145          | func_args COMMA IDENTIFIER

  146 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  147 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

  148 func_body: SCOPEOPEN func_statements SCOPECLOSE

  149 func_statements: declaration func_statements
  150                | log func_statements
  151                | task_invoke func_statements
  152                | func_invoke func_statements
  153                | loop func_statements
  154                | return_statement func_statements
  155                | conditional func_statements
  156                | analyze_syntax func_statements
  157                | input func_statements
  158                | output func_statements
  159                | sleep func_statements
  160                | SCOPEOPEN func_statements SCOPECLOSE func_statements
  161                | get_statement func_statements
  162                | method_invoke func_statements
  163                | access func_statements
  164                | %empty

  165 $@6: %empty

  166 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

  167 tid_expr: NNUM IDENTIFIER EQ TID SEMICOLON
  168         | ANUM IDENTIFIER EQ TID SEMICOLON

  169 taskscope: declaration taskscope
  170          | log taskscope
  171          | conditional taskscope
  172          | loop taskscope
  173          | func_invoke taskscope
  174          | output taskscope
  175          | tid_expr taskscope
  176          | SCOPEOPEN taskscope SCOPECLOSE taskscope
  177          | sleep taskscope
  178          | method_invoke
  179          | access

  180 statement: declaration
  181          | log
  182          | conditional
  183          | loop
  184          | return_statement
  185          | func_invoke
  186          | task_invoke
  187          | analyze_syntax
  188          | output
  189          | sleep
  190          | BREAK SEMICOLON
  191          | CONTINUE SEMICOLON
  192          | input
  193          | method_invoke
  194          | access

  195 statements: statement
  196           | statements statement

  197 access: IDENTIFIER id

  198 id: ARROW IDENTIFIER
  199   | id ARROW IDENTIFIER

  200 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE

  201 attributes: attribute SEMICOLON
  202           | attributes attribute SEMICOLON

  203 attribute: simpleDatatype IDENTIFIER
  204          | arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

  205 methods: method
  206        | methods method

  207 method: func_decl SCOPEOPEN method_body SCOPECLOSE

  208 method_invoke: IDENTIFIER ARROW func_invoke
  209              | IDENTIFIER id ARROW func_invoke

  210 in_statement: IN ARROW IDENTIFIER SEMICOLON
  211             | IN ARROW func_invoke

  212 method_statements: declaration
  213                  | log
  214                  | task_invoke
  215                  | func_invoke
  216                  | loop
  217                  | return_statement
  218                  | conditional
  219                  | analyze_statement
  220                  | input
  221                  | output
  222                  | sleep
  223                  | SCOPEOPEN method_statements SCOPECLOSE
  224                  | get_statement
  225                  | in_statement
  226                  | method_invoke
  227                  | access

  228 method_body: method_statements
  229            | method_body method_statements


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHEN (258) 101
    REPEAT (259) 98
    ELSE_WHEN (260) 103
    DEFAULT (261) 105
    FOR (262) 96
    BREAK (263) 190
    CONTINUE (264) 191
    TASK (265) 166
    MAKE_PARALLEL (266) 124
    NULL_ARGS (267) 123
    TID (268) 167 168
    ANALYZE (269) 113
    GET (270) 125
    SLEEP (271) 128
    TIME (272) 125
    START (273)
    RETURN (274) 137
    TYPE (275) 200
    ATOMIC (276) 72 147
    IN (277) 210 211
    FUNC (278) 146 147
    INVOKE (279) 120
    IP (280) 132
    OP (281) 138
    DIV (282) 16
    ADD (283) 13
    SUB (284) 14
    MUL (285) 15
    EXPONENT (286) 18
    MODULO (287) 17
    ARROW (288) 125 129 130 198 199 208 209 210 211
    EQ (289) 79 80 83 84 87 126 127 167 168
    INCR (290) 5
    DECR (291) 6
    ASSN_MODULO (292) 3
    ASSN_EXPONENT (293) 2
    ASSN_DIV (294) 1
    ASSN_MUL (295) 4
    AND (296) 19
    OR (297) 20
    GT (298) 8
    LT (299) 7
    GTEQ (300) 9
    LTEQ (301) 10
    NOT_EQ (302) 11
    NEG (303) 45
    EQUAL_TWO (304) 12
    INTEGERLITERAL (305) 34 85 86 124
    STRINGLITERAL (306) 38 111 129 135
    CHARACTERLITERAL (307) 35
    BOOLEANLITERAL (308) 37
    FLOATLITERAL (309) 36 128
    COMMA (310) 78 80 82 84 85 122 133 145
    SEMICOLON (311) 68 89 90 96 115 120 124 126 127 128 134 137 138 167 168 190 191 201 202 210
    COLON (312) 113 114 120 124 132 138 146 147 166
    IDENTIFIER (313) 28 77 78 79 80 81 82 83 84 87 88 112 116 120 124 126 127 130 132 133 136 144 145 146 147 166 167 168 197 198 199 203 204 208 209 210
    SCOPEOPEN (314) 96 98 101 103 105 148 160 166 176 200 207 223
    SCOPECLOSE (315) 96 98 101 103 105 148 160 166 176 200 207 223
    ROUNDOPEN (316) 43 44 45 128
    ROUNDCLOSE (317) 43 44 45 128
    SQUAREOPEN (318) 81 82 83 84 96 98 101 103 105 204
    SQUARECLOSE (319) 81 82 83 84 96 98 101 103 105 204
    HASH (320) 33 140
    LEXERROR (321)
    NNUM (322) 47 167
    NDEC (323) 48 126
    NBOOL (324) 49
    NLET (325) 50
    NTEXT (326) 51
    NVOID (327) 52
    NARRNUM (328) 58 108
    NARRDEC (329) 59 107
    NARRBOOL (330) 60
    NARRLET (331) 61
    NARRTEXT (332) 62
    ANUM (333) 53 168
    ADEC (334) 54 127
    ABOOL (335) 55
    ALET (336) 56
    ATEXT (337) 57
    AARRNUM (338) 63 110
    AARRDEC (339) 64 109
    AARRBOOL (340) 65
    AARRLET (341) 66
    AARRTEXT (342) 67
    UDATATYPE (343) 71 200
    AUDATATYPE (344) 72


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    expression_op (91)
        on left: 1 2 3 4 5 6
        on right: 88
    comparison_op (92)
        on left: 7 8 9 10 11 12
        on right: 31
    arithmetic_op (93)
        on left: 13 14 15 16 17 18
        on right: 30
    logical_op (94)
        on left: 19 20
        on right: 32
    nonAtomic_datatypes (95)
        on left: 21 22
        on right: 146 147
    begin (96)
        on left: 23 24 25 26 27
        on right: 0 24 25 26 27
    T (97)
        on left: 28 29
        on right: 42
    all_ops (98)
        on left: 30 31 32 33
        on right: 39 43
    constants (99)
        on left: 34 35 36 37 38
        on right: 41 117
    next (100)
        on left: 39 40
        on right: 39 43
    RHS (101)
        on left: 41 42 43 44 45 46
        on right: 39 40 43 44 45 79 80 83 84 87 88 96 98 101 103 105 119 137
    nonAtomicSimple (102)
        on left: 47 48 49 50 51 52
        on right: 22 69
    atomicSimple (103)
        on left: 53 54 55 56 57
        on right: 70
    nonAtomicArray (104)
        on left: 58 59 60 61 62
        on right: 21 73
    atomicArray (105)
        on left: 63 64 65 66 67
        on right: 74
    declaration (106)
        on left: 68
        on right: 24 149 169 180 212
    simpleDatatype (107)
        on left: 69 70 71 72
        on right: 75 203
    arrayDatatype (108)
        on left: 73 74
        on right: 76 204
    declarationStmt (109)
        on left: 75 76
        on right: 68 92
    simpleList (110)
        on left: 77 78 79 80
        on right: 75 78 80
    arrayList (111)
        on left: 81 82 83 84
        on right: 76 82 84
    dimlist (112)
        on left: 85 86
        on right: 81 82 83 84 85 204
    assignment_statement (113)
        on left: 87
        on right: 89 91
    expression_statement (114)
        on left: 88
        on right: 90 96
    log (115)
        on left: 89 90
        on right: 150 170 181 213
    both_assignment (116)
        on left: 91 92
        on right: 96
    loop (117)
        on left: 93 94
        on right: 153 172 183 216
    for_loop (118)
        on left: 96
        on right: 93
    $@1 (119)
        on left: 95
        on right: 96
    while_loop (120)
        on left: 98
        on right: 94
    $@2 (121)
        on left: 97
        on right: 98
    conditional (122)
        on left: 99
        on right: 155 171 182 218
    when_statement (123)
        on left: 101 103
        on right: 99 103
    $@3 (124)
        on left: 100
        on right: 101
    $@4 (125)
        on left: 102
        on right: 103
    when_default (126)
        on left: 105 106
        on right: 99
    $@5 (127)
        on left: 104
        on right: 105
    analysis_arrays (128)
        on left: 107 108 109 110
        on right: 113 114
    analyze_label (129)
        on left: 111 112
        on right: 113
    analyze_syntax (130)
        on left: 113
        on right: 156 187
    analyze_statement (131)
        on left: 114 115
        on right: 113 114 219
    is (132)
        on left: 116 117 118 119
        on right: 121 122
    func_invoke (133)
        on left: 120
        on right: 29 118 152 173 185 208 209 211 215
    arguments (134)
        on left: 121 122 123
        on right: 120 122 124
    task_invoke (135)
        on left: 124
        on right: 151 186 214
    get_invoke (136)
        on left: 125
        on right: 46 126 127
    get_statement (137)
        on left: 126 127
        on right: 161 224
    sleep (138)
        on left: 128
        on right: 159 177 189 222
    file_name (139)
        on left: 129 130 131
        on right: 132 138
    input (140)
        on left: 132
        on right: 157 192 220
    nextip (141)
        on left: 133 134
        on right: 132 133
    stringvalues (142)
        on left: 135 136
        on right: 139 140
    return_statement (143)
        on left: 137
        on right: 154 184 217
    output (144)
        on left: 138
        on right: 158 174 188 221
    opstring (145)
        on left: 139
        on right: 138
    nextop (146)
        on left: 140 141
        on right: 139 140
    function (147)
        on left: 142 143
        on right: 25
    func_args (148)
        on left: 144 145
        on right: 145 146 147 166
    func_decl (149)
        on left: 146
        on right: 142 207
    atomic_func_decl (150)
        on left: 147
        on right: 143
    func_body (151)
        on left: 148
        on right: 142 143
    func_statements (152)
        on left: 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
        on right: 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
    task (153)
        on left: 166
        on right: 26
    $@6 (154)
        on left: 165
        on right: 166
    tid_expr (155)
        on left: 167 168
        on right: 175
    taskscope (156)
        on left: 169 170 171 172 173 174 175 176 177 178 179
        on right: 166 169 170 171 172 173 174 175 176 177
    statement (157)
        on left: 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194
        on right: 195 196
    statements (158)
        on left: 195 196
        on right: 96 98 101 103 105 196
    access (159)
        on left: 197
        on right: 163 179 194 227
    id (160)
        on left: 198 199
        on right: 197 199 209
    type_declaration (161)
        on left: 200
        on right: 27
    attributes (162)
        on left: 201 202
        on right: 200 202
    attribute (163)
        on left: 203 204
        on right: 201 202
    methods (164)
        on left: 205 206
        on right: 200 206
    method (165)
        on left: 207
        on right: 205 206
    method_invoke (166)
        on left: 208 209
        on right: 162 178 193 226
    in_statement (167)
        on left: 210 211
        on right: 225
    method_statements (168)
        on left: 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
        on right: 223 228 229
    method_body (169)
        on left: 228 229
        on right: 207 229


State 0

    0 $accept: . begin $end

    $default  reduce using rule 23 (begin)

    begin  go to state 1


State 1

    0 $accept: begin . $end
   24 begin: begin . declaration
   25      | begin . function
   26      | begin . task
   27      | begin . type_declaration

    $end       shift, and go to state 2
    TASK       shift, and go to state 3
    TYPE       shift, and go to state 4
    ATOMIC     shift, and go to state 5
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple   go to state 29
    atomicSimple      go to state 30
    nonAtomicArray    go to state 31
    atomicArray       go to state 32
    declaration       go to state 33
    simpleDatatype    go to state 34
    arrayDatatype     go to state 35
    declarationStmt   go to state 36
    function          go to state 37
    func_decl         go to state 38
    atomic_func_decl  go to state 39
    task              go to state 40
    type_declaration  go to state 41


State 2

    0 $accept: begin $end .

    $default  accept


State 3

  166 task: TASK . IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 42


State 4

  200 type_declaration: TYPE . UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE

    UDATATYPE  shift, and go to state 43


State 5

   72 simpleDatatype: ATOMIC . AUDATATYPE
  147 atomic_func_decl: ATOMIC . FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    FUNC        shift, and go to state 44
    AUDATATYPE  shift, and go to state 45


State 6

  146 func_decl: FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 46


State 7

   47 nonAtomicSimple: NNUM .

    $default  reduce using rule 47 (nonAtomicSimple)


State 8

   48 nonAtomicSimple: NDEC .

    $default  reduce using rule 48 (nonAtomicSimple)


State 9

   49 nonAtomicSimple: NBOOL .

    $default  reduce using rule 49 (nonAtomicSimple)


State 10

   50 nonAtomicSimple: NLET .

    $default  reduce using rule 50 (nonAtomicSimple)


State 11

   51 nonAtomicSimple: NTEXT .

    $default  reduce using rule 51 (nonAtomicSimple)


State 12

   52 nonAtomicSimple: NVOID .

    $default  reduce using rule 52 (nonAtomicSimple)


State 13

   58 nonAtomicArray: NARRNUM .

    $default  reduce using rule 58 (nonAtomicArray)


State 14

   59 nonAtomicArray: NARRDEC .

    $default  reduce using rule 59 (nonAtomicArray)


State 15

   60 nonAtomicArray: NARRBOOL .

    $default  reduce using rule 60 (nonAtomicArray)


State 16

   61 nonAtomicArray: NARRLET .

    $default  reduce using rule 61 (nonAtomicArray)


State 17

   62 nonAtomicArray: NARRTEXT .

    $default  reduce using rule 62 (nonAtomicArray)


State 18

   53 atomicSimple: ANUM .

    $default  reduce using rule 53 (atomicSimple)


State 19

   54 atomicSimple: ADEC .

    $default  reduce using rule 54 (atomicSimple)


State 20

   55 atomicSimple: ABOOL .

    $default  reduce using rule 55 (atomicSimple)


State 21

   56 atomicSimple: ALET .

    $default  reduce using rule 56 (atomicSimple)


State 22

   57 atomicSimple: ATEXT .

    $default  reduce using rule 57 (atomicSimple)


State 23

   63 atomicArray: AARRNUM .

    $default  reduce using rule 63 (atomicArray)


State 24

   64 atomicArray: AARRDEC .

    $default  reduce using rule 64 (atomicArray)


State 25

   65 atomicArray: AARRBOOL .

    $default  reduce using rule 65 (atomicArray)


State 26

   66 atomicArray: AARRLET .

    $default  reduce using rule 66 (atomicArray)


State 27

   67 atomicArray: AARRTEXT .

    $default  reduce using rule 67 (atomicArray)


State 28

   71 simpleDatatype: UDATATYPE .

    $default  reduce using rule 71 (simpleDatatype)


State 29

   69 simpleDatatype: nonAtomicSimple .

    $default  reduce using rule 69 (simpleDatatype)


State 30

   70 simpleDatatype: atomicSimple .

    $default  reduce using rule 70 (simpleDatatype)


State 31

   73 arrayDatatype: nonAtomicArray .

    $default  reduce using rule 73 (arrayDatatype)


State 32

   74 arrayDatatype: atomicArray .

    $default  reduce using rule 74 (arrayDatatype)


State 33

   24 begin: begin declaration .

    $default  reduce using rule 24 (begin)


State 34

   75 declarationStmt: simpleDatatype . simpleList

    IDENTIFIER  shift, and go to state 47

    simpleList  go to state 48


State 35

   76 declarationStmt: arrayDatatype . arrayList

    IDENTIFIER  shift, and go to state 49

    arrayList  go to state 50


State 36

   68 declaration: declarationStmt . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 37

   25 begin: begin function .

    $default  reduce using rule 25 (begin)


State 38

  142 function: func_decl . func_body

    SCOPEOPEN  shift, and go to state 52

    func_body  go to state 53


State 39

  143 function: atomic_func_decl . func_body

    SCOPEOPEN  shift, and go to state 52

    func_body  go to state 54


State 40

   26 begin: begin task .

    $default  reduce using rule 26 (begin)


State 41

   27 begin: begin type_declaration .

    $default  reduce using rule 27 (begin)


State 42

  166 task: TASK IDENTIFIER . COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    COLON  shift, and go to state 55


State 43

  200 type_declaration: TYPE UDATATYPE . SCOPEOPEN attributes methods SCOPECLOSE

    SCOPEOPEN  shift, and go to state 56


State 44

  147 atomic_func_decl: ATOMIC FUNC . IDENTIFIER COLON func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 57


State 45

   72 simpleDatatype: ATOMIC AUDATATYPE .

    $default  reduce using rule 72 (simpleDatatype)


State 46

  146 func_decl: FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 58


State 47

   77 simpleList: IDENTIFIER .
   79           | IDENTIFIER . EQ RHS

    EQ  shift, and go to state 59

    $default  reduce using rule 77 (simpleList)


State 48

   75 declarationStmt: simpleDatatype simpleList .
   78 simpleList: simpleList . COMMA IDENTIFIER
   80           | simpleList . COMMA IDENTIFIER EQ RHS

    COMMA  shift, and go to state 60

    $default  reduce using rule 75 (declarationStmt)


State 49

   81 arrayList: IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   83          | IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 61


State 50

   76 declarationStmt: arrayDatatype arrayList .
   82 arrayList: arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   84          | arrayList . COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    COMMA  shift, and go to state 62

    $default  reduce using rule 76 (declarationStmt)


State 51

   68 declaration: declarationStmt SEMICOLON .

    $default  reduce using rule 68 (declaration)


State 52

  148 func_body: SCOPEOPEN . func_statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 95
    access                go to state 96
    method_invoke         go to state 97


State 53

  142 function: func_decl func_body .

    $default  reduce using rule 142 (function)


State 54

  143 function: atomic_func_decl func_body .

    $default  reduce using rule 143 (function)


State 55

  166 task: TASK IDENTIFIER COLON . func_args $@6 SCOPEOPEN taskscope SCOPECLOSE

    IDENTIFIER  shift, and go to state 98

    func_args  go to state 99


State 56

  200 type_declaration: TYPE UDATATYPE SCOPEOPEN . attributes methods SCOPECLOSE

    ATOMIC     shift, and go to state 70
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 100
    arrayDatatype    go to state 101
    attributes       go to state 102
    attribute        go to state 103


State 57

  147 atomic_func_decl: ATOMIC FUNC IDENTIFIER . COLON func_args COLON nonAtomic_datatypes

    COLON  shift, and go to state 104


State 58

  146 func_decl: FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 98

    func_args  go to state 105


State 59

   79 simpleList: IDENTIFIER EQ . RHS

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 117
    func_invoke  go to state 118
    get_invoke   go to state 119


State 60

   78 simpleList: simpleList COMMA . IDENTIFIER
   80           | simpleList COMMA . IDENTIFIER EQ RHS

    IDENTIFIER  shift, and go to state 120


State 61

   81 arrayList: IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   83          | IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 121

    dimlist  go to state 122


State 62

   82 arrayList: arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE
   84          | arrayList COMMA . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    IDENTIFIER  shift, and go to state 123


State 63

  101 when_statement: WHEN . SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 124


State 64

   98 while_loop: REPEAT . SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 125


State 65

   96 for_loop: FOR . SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 126


State 66

  124 task_invoke: MAKE_PARALLEL . IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 127


State 67

  113 analyze_syntax: ANALYZE . analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 128
    IDENTIFIER     shift, and go to state 129

    analyze_label  go to state 130


State 68

  128 sleep: SLEEP . ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON

    ROUNDOPEN  shift, and go to state 131


State 69

  137 return_statement: RETURN . RHS SEMICOLON

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 132
    func_invoke  go to state 118
    get_invoke   go to state 119


State 70

   72 simpleDatatype: ATOMIC . AUDATATYPE

    AUDATATYPE  shift, and go to state 45


State 71

  120 func_invoke: INVOKE . IDENTIFIER COLON arguments SEMICOLON

    IDENTIFIER  shift, and go to state 133


State 72

  132 input: IP . file_name COLON IDENTIFIER nextip

    ARROW  shift, and go to state 134

    $default  reduce using rule 131 (file_name)

    file_name  go to state 135


State 73

  138 output: OP . COLON opstring file_name SEMICOLON

    COLON  shift, and go to state 136


State 74

   87 assignment_statement: IDENTIFIER . EQ RHS
   88 expression_statement: IDENTIFIER . expression_op RHS
  197 access: IDENTIFIER . id
  208 method_invoke: IDENTIFIER . ARROW func_invoke
  209              | IDENTIFIER . id ARROW func_invoke

    ARROW          shift, and go to state 137
    EQ             shift, and go to state 138
    INCR           shift, and go to state 139
    DECR           shift, and go to state 140
    ASSN_MODULO    shift, and go to state 141
    ASSN_EXPONENT  shift, and go to state 142
    ASSN_DIV       shift, and go to state 143
    ASSN_MUL       shift, and go to state 144

    expression_op  go to state 145
    id             go to state 146


State 75

  160 func_statements: SCOPEOPEN . func_statements SCOPECLOSE func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 147
    access                go to state 96
    method_invoke         go to state 97


State 76

   48 nonAtomicSimple: NDEC .
  126 get_statement: NDEC . IDENTIFIER EQ get_invoke SEMICOLON

    IDENTIFIER  shift, and go to state 148

    IDENTIFIER  [reduce using rule 48 (nonAtomicSimple)]


State 77

   54 atomicSimple: ADEC .
  127 get_statement: ADEC . IDENTIFIER EQ get_invoke SEMICOLON

    IDENTIFIER  shift, and go to state 149

    IDENTIFIER  [reduce using rule 54 (atomicSimple)]


State 78

  149 func_statements: declaration . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 150
    access                go to state 96
    method_invoke         go to state 97


State 79

   89 log: assignment_statement . SEMICOLON

    SEMICOLON  shift, and go to state 151


State 80

   90 log: expression_statement . SEMICOLON

    SEMICOLON  shift, and go to state 152


State 81

  150 func_statements: log . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 153
    access                go to state 96
    method_invoke         go to state 97


State 82

  153 func_statements: loop . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 154
    access                go to state 96
    method_invoke         go to state 97


State 83

   93 loop: for_loop .

    $default  reduce using rule 93 (loop)


State 84

   94 loop: while_loop .

    $default  reduce using rule 94 (loop)


State 85

  155 func_statements: conditional . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 155
    access                go to state 96
    method_invoke         go to state 97


State 86

   99 conditional: when_statement . when_default
  103 when_statement: when_statement . ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    ELSE_WHEN  shift, and go to state 156
    DEFAULT    shift, and go to state 157

    $default  reduce using rule 106 (when_default)

    when_default  go to state 158


State 87

  156 func_statements: analyze_syntax . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 159
    access                go to state 96
    method_invoke         go to state 97


State 88

  152 func_statements: func_invoke . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 160
    access                go to state 96
    method_invoke         go to state 97


State 89

  151 func_statements: task_invoke . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 161
    access                go to state 96
    method_invoke         go to state 97


State 90

  161 func_statements: get_statement . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 162
    access                go to state 96
    method_invoke         go to state 97


State 91

  159 func_statements: sleep . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 163
    access                go to state 96
    method_invoke         go to state 97


State 92

  157 func_statements: input . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 164
    access                go to state 96
    method_invoke         go to state 97


State 93

  154 func_statements: return_statement . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 165
    access                go to state 96
    method_invoke         go to state 97


State 94

  158 func_statements: output . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 166
    access                go to state 96
    method_invoke         go to state 97


State 95

  148 func_body: SCOPEOPEN func_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 167


State 96

  163 func_statements: access . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 168
    access                go to state 96
    method_invoke         go to state 97


State 97

  162 func_statements: method_invoke . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 169
    access                go to state 96
    method_invoke         go to state 97


State 98

  144 func_args: IDENTIFIER .

    $default  reduce using rule 144 (func_args)


State 99

  145 func_args: func_args . COMMA IDENTIFIER
  166 task: TASK IDENTIFIER COLON func_args . $@6 SCOPEOPEN taskscope SCOPECLOSE

    COMMA  shift, and go to state 170

    $default  reduce using rule 165 ($@6)

    $@6  go to state 171


State 100

  203 attribute: simpleDatatype . IDENTIFIER

    IDENTIFIER  shift, and go to state 172


State 101

  204 attribute: arrayDatatype . IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE

    IDENTIFIER  shift, and go to state 173


State 102

  200 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes . methods SCOPECLOSE
  202 attributes: attributes . attribute SEMICOLON

    ATOMIC     shift, and go to state 70
    FUNC       shift, and go to state 6
    NNUM       shift, and go to state 7
    NDEC       shift, and go to state 8
    NBOOL      shift, and go to state 9
    NLET       shift, and go to state 10
    NTEXT      shift, and go to state 11
    NVOID      shift, and go to state 12
    NARRNUM    shift, and go to state 13
    NARRDEC    shift, and go to state 14
    NARRBOOL   shift, and go to state 15
    NARRLET    shift, and go to state 16
    NARRTEXT   shift, and go to state 17
    ANUM       shift, and go to state 18
    ADEC       shift, and go to state 19
    ABOOL      shift, and go to state 20
    ALET       shift, and go to state 21
    ATEXT      shift, and go to state 22
    AARRNUM    shift, and go to state 23
    AARRDEC    shift, and go to state 24
    AARRBOOL   shift, and go to state 25
    AARRLET    shift, and go to state 26
    AARRTEXT   shift, and go to state 27
    UDATATYPE  shift, and go to state 28

    nonAtomicSimple  go to state 29
    atomicSimple     go to state 30
    nonAtomicArray   go to state 31
    atomicArray      go to state 32
    simpleDatatype   go to state 100
    arrayDatatype    go to state 101
    func_decl        go to state 174
    attribute        go to state 175
    methods          go to state 176
    method           go to state 177


State 103

  201 attributes: attribute . SEMICOLON

    SEMICOLON  shift, and go to state 178


State 104

  147 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON . func_args COLON nonAtomic_datatypes

    IDENTIFIER  shift, and go to state 98

    func_args  go to state 179


State 105

  145 func_args: func_args . COMMA IDENTIFIER
  146 func_decl: FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 170
    COLON  shift, and go to state 180


State 106

  125 get_invoke: GET . ARROW TIME

    ARROW  shift, and go to state 181


State 107

   45 RHS: NEG . ROUNDOPEN RHS ROUNDCLOSE

    ROUNDOPEN  shift, and go to state 182


State 108

   34 constants: INTEGERLITERAL .

    $default  reduce using rule 34 (constants)


State 109

   38 constants: STRINGLITERAL .

    $default  reduce using rule 38 (constants)


State 110

   35 constants: CHARACTERLITERAL .

    $default  reduce using rule 35 (constants)


State 111

   37 constants: BOOLEANLITERAL .

    $default  reduce using rule 37 (constants)


State 112

   36 constants: FLOATLITERAL .

    $default  reduce using rule 36 (constants)


State 113

   28 T: IDENTIFIER .

    $default  reduce using rule 28 (T)


State 114

   43 RHS: ROUNDOPEN . RHS all_ops next ROUNDCLOSE
   44    | ROUNDOPEN . RHS ROUNDCLOSE

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 183
    func_invoke  go to state 118
    get_invoke   go to state 119


State 115

   42 RHS: T .

    $default  reduce using rule 42 (RHS)


State 116

   41 RHS: constants .

    $default  reduce using rule 41 (RHS)


State 117

   79 simpleList: IDENTIFIER EQ RHS .

    $default  reduce using rule 79 (simpleList)


State 118

   29 T: func_invoke .

    $default  reduce using rule 29 (T)


State 119

   46 RHS: get_invoke .

    $default  reduce using rule 46 (RHS)


State 120

   78 simpleList: simpleList COMMA IDENTIFIER .
   80           | simpleList COMMA IDENTIFIER . EQ RHS

    EQ  shift, and go to state 184

    $default  reduce using rule 78 (simpleList)


State 121

   86 dimlist: INTEGERLITERAL .

    $default  reduce using rule 86 (dimlist)


State 122

   81 arrayList: IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   83          | IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   85 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 185
    SQUARECLOSE  shift, and go to state 186


State 123

   82 arrayList: arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE
   84          | arrayList COMMA IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE EQ RHS

    SQUAREOPEN  shift, and go to state 187


State 124

  101 when_statement: WHEN SQUAREOPEN . RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 188
    func_invoke  go to state 118
    get_invoke   go to state 119


State 125

   98 while_loop: REPEAT SQUAREOPEN . RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 189
    func_invoke  go to state 118
    get_invoke   go to state 119


State 126

   96 for_loop: FOR SQUAREOPEN . both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    ATOMIC      shift, and go to state 70
    IDENTIFIER  shift, and go to state 190
    NNUM        shift, and go to state 7
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 18
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 191
    assignment_statement  go to state 192
    both_assignment       go to state 193


State 127

  124 task_invoke: MAKE_PARALLEL IDENTIFIER . COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 194


State 128

  111 analyze_label: STRINGLITERAL .

    $default  reduce using rule 111 (analyze_label)


State 129

  112 analyze_label: IDENTIFIER .

    $default  reduce using rule 112 (analyze_label)


State 130

  113 analyze_syntax: ANALYZE analyze_label . COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 195


State 131

  128 sleep: SLEEP ROUNDOPEN . FLOATLITERAL ROUNDCLOSE SEMICOLON

    FLOATLITERAL  shift, and go to state 196


State 132

  137 return_statement: RETURN RHS . SEMICOLON

    SEMICOLON  shift, and go to state 197


State 133

  120 func_invoke: INVOKE IDENTIFIER . COLON arguments SEMICOLON

    COLON  shift, and go to state 198


State 134

  129 file_name: ARROW . STRINGLITERAL
  130          | ARROW . IDENTIFIER

    STRINGLITERAL  shift, and go to state 199
    IDENTIFIER     shift, and go to state 200


State 135

  132 input: IP file_name . COLON IDENTIFIER nextip

    COLON  shift, and go to state 201


State 136

  138 output: OP COLON . opstring file_name SEMICOLON

    STRINGLITERAL  shift, and go to state 202
    IDENTIFIER     shift, and go to state 203

    stringvalues  go to state 204
    opstring      go to state 205


State 137

  198 id: ARROW . IDENTIFIER
  208 method_invoke: IDENTIFIER ARROW . func_invoke

    INVOKE      shift, and go to state 71
    IDENTIFIER  shift, and go to state 206

    func_invoke  go to state 207


State 138

   87 assignment_statement: IDENTIFIER EQ . RHS

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 208
    func_invoke  go to state 118
    get_invoke   go to state 119


State 139

    5 expression_op: INCR .

    $default  reduce using rule 5 (expression_op)


State 140

    6 expression_op: DECR .

    $default  reduce using rule 6 (expression_op)


State 141

    3 expression_op: ASSN_MODULO .

    $default  reduce using rule 3 (expression_op)


State 142

    2 expression_op: ASSN_EXPONENT .

    $default  reduce using rule 2 (expression_op)


State 143

    1 expression_op: ASSN_DIV .

    $default  reduce using rule 1 (expression_op)


State 144

    4 expression_op: ASSN_MUL .

    $default  reduce using rule 4 (expression_op)


State 145

   88 expression_statement: IDENTIFIER expression_op . RHS

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 209
    func_invoke  go to state 118
    get_invoke   go to state 119


State 146

  197 access: IDENTIFIER id .
  199 id: id . ARROW IDENTIFIER
  209 method_invoke: IDENTIFIER id . ARROW func_invoke

    ARROW  shift, and go to state 210

    $default  reduce using rule 197 (access)


State 147

  160 func_statements: SCOPEOPEN func_statements . SCOPECLOSE func_statements

    SCOPECLOSE  shift, and go to state 211


State 148

  126 get_statement: NDEC IDENTIFIER . EQ get_invoke SEMICOLON

    EQ  shift, and go to state 212


State 149

  127 get_statement: ADEC IDENTIFIER . EQ get_invoke SEMICOLON

    EQ  shift, and go to state 213


State 150

  149 func_statements: declaration func_statements .

    $default  reduce using rule 149 (func_statements)


State 151

   89 log: assignment_statement SEMICOLON .

    $default  reduce using rule 89 (log)


State 152

   90 log: expression_statement SEMICOLON .

    $default  reduce using rule 90 (log)


State 153

  150 func_statements: log func_statements .

    $default  reduce using rule 150 (func_statements)


State 154

  153 func_statements: loop func_statements .

    $default  reduce using rule 153 (func_statements)


State 155

  155 func_statements: conditional func_statements .

    $default  reduce using rule 155 (func_statements)


State 156

  103 when_statement: when_statement ELSE_WHEN . SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 214


State 157

  105 when_default: DEFAULT . SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUAREOPEN  shift, and go to state 215


State 158

   99 conditional: when_statement when_default .

    $default  reduce using rule 99 (conditional)


State 159

  156 func_statements: analyze_syntax func_statements .

    $default  reduce using rule 156 (func_statements)


State 160

  152 func_statements: func_invoke func_statements .

    $default  reduce using rule 152 (func_statements)


State 161

  151 func_statements: task_invoke func_statements .

    $default  reduce using rule 151 (func_statements)


State 162

  161 func_statements: get_statement func_statements .

    $default  reduce using rule 161 (func_statements)


State 163

  159 func_statements: sleep func_statements .

    $default  reduce using rule 159 (func_statements)


State 164

  157 func_statements: input func_statements .

    $default  reduce using rule 157 (func_statements)


State 165

  154 func_statements: return_statement func_statements .

    $default  reduce using rule 154 (func_statements)


State 166

  158 func_statements: output func_statements .

    $default  reduce using rule 158 (func_statements)


State 167

  148 func_body: SCOPEOPEN func_statements SCOPECLOSE .

    $default  reduce using rule 148 (func_body)


State 168

  163 func_statements: access func_statements .

    $default  reduce using rule 163 (func_statements)


State 169

  162 func_statements: method_invoke func_statements .

    $default  reduce using rule 162 (func_statements)


State 170

  145 func_args: func_args COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 216


State 171

  166 task: TASK IDENTIFIER COLON func_args $@6 . SCOPEOPEN taskscope SCOPECLOSE

    SCOPEOPEN  shift, and go to state 217


State 172

  203 attribute: simpleDatatype IDENTIFIER .

    $default  reduce using rule 203 (attribute)


State 173

  204 attribute: arrayDatatype IDENTIFIER . SQUAREOPEN dimlist SQUARECLOSE

    SQUAREOPEN  shift, and go to state 218


State 174

  207 method: func_decl . SCOPEOPEN method_body SCOPECLOSE

    SCOPEOPEN  shift, and go to state 219


State 175

  202 attributes: attributes attribute . SEMICOLON

    SEMICOLON  shift, and go to state 220


State 176

  200 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods . SCOPECLOSE
  206 methods: methods . method

    FUNC        shift, and go to state 6
    SCOPECLOSE  shift, and go to state 221

    func_decl  go to state 174
    method     go to state 222


State 177

  205 methods: method .

    $default  reduce using rule 205 (methods)


State 178

  201 attributes: attribute SEMICOLON .

    $default  reduce using rule 201 (attributes)


State 179

  145 func_args: func_args . COMMA IDENTIFIER
  147 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args . COLON nonAtomic_datatypes

    COMMA  shift, and go to state 170
    COLON  shift, and go to state 223


State 180

  146 func_decl: FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 224
    nonAtomicSimple      go to state 225
    nonAtomicArray       go to state 226


State 181

  125 get_invoke: GET ARROW . TIME

    TIME  shift, and go to state 227


State 182

   45 RHS: NEG ROUNDOPEN . RHS ROUNDCLOSE

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 228
    func_invoke  go to state 118
    get_invoke   go to state 119


State 183

   43 RHS: ROUNDOPEN RHS . all_ops next ROUNDCLOSE
   44    | ROUNDOPEN RHS . ROUNDCLOSE

    DIV         shift, and go to state 229
    ADD         shift, and go to state 230
    SUB         shift, and go to state 231
    MUL         shift, and go to state 232
    EXPONENT    shift, and go to state 233
    MODULO      shift, and go to state 234
    AND         shift, and go to state 235
    OR          shift, and go to state 236
    GT          shift, and go to state 237
    LT          shift, and go to state 238
    GTEQ        shift, and go to state 239
    LTEQ        shift, and go to state 240
    NOT_EQ      shift, and go to state 241
    EQUAL_TWO   shift, and go to state 242
    ROUNDCLOSE  shift, and go to state 243
    HASH        shift, and go to state 244

    comparison_op  go to state 245
    arithmetic_op  go to state 246
    logical_op     go to state 247
    all_ops        go to state 248


State 184

   80 simpleList: simpleList COMMA IDENTIFIER EQ . RHS

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 249
    func_invoke  go to state 118
    get_invoke   go to state 119


State 185

   85 dimlist: dimlist COMMA . INTEGERLITERAL

    INTEGERLITERAL  shift, and go to state 250


State 186

   81 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   83          | IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 251

    $default  reduce using rule 81 (arrayList)


State 187

   82 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE
   84          | arrayList COMMA IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE EQ RHS

    INTEGERLITERAL  shift, and go to state 121

    dimlist  go to state 252


State 188

  101 when_statement: WHEN SQUAREOPEN RHS . SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 253


State 189

   98 while_loop: REPEAT SQUAREOPEN RHS . SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 254


State 190

   87 assignment_statement: IDENTIFIER . EQ RHS

    EQ  shift, and go to state 138


State 191

   92 both_assignment: declarationStmt .

    $default  reduce using rule 92 (both_assignment)


State 192

   91 both_assignment: assignment_statement .

    $default  reduce using rule 91 (both_assignment)


State 193

   96 for_loop: FOR SQUAREOPEN both_assignment . SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 255


State 194

  124 task_invoke: MAKE_PARALLEL IDENTIFIER COLON . INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 256


State 195

  113 analyze_syntax: ANALYZE analyze_label COLON . analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement

    STRINGLITERAL  shift, and go to state 128
    IDENTIFIER     shift, and go to state 129

    analyze_label  go to state 257


State 196

  128 sleep: SLEEP ROUNDOPEN FLOATLITERAL . ROUNDCLOSE SEMICOLON

    ROUNDCLOSE  shift, and go to state 258


State 197

  137 return_statement: RETURN RHS SEMICOLON .

    $default  reduce using rule 137 (return_statement)


State 198

  120 func_invoke: INVOKE IDENTIFIER COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 259
    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 260
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 261
    RHS          go to state 262
    is           go to state 263
    func_invoke  go to state 264
    arguments    go to state 265
    get_invoke   go to state 119


State 199

  129 file_name: ARROW STRINGLITERAL .

    $default  reduce using rule 129 (file_name)


State 200

  130 file_name: ARROW IDENTIFIER .

    $default  reduce using rule 130 (file_name)


State 201

  132 input: IP file_name COLON . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 266


State 202

  135 stringvalues: STRINGLITERAL .

    $default  reduce using rule 135 (stringvalues)


State 203

  136 stringvalues: IDENTIFIER .

    $default  reduce using rule 136 (stringvalues)


State 204

  139 opstring: stringvalues . nextop

    HASH  shift, and go to state 267

    $default  reduce using rule 141 (nextop)

    nextop  go to state 268


State 205

  138 output: OP COLON opstring . file_name SEMICOLON

    ARROW  shift, and go to state 134

    $default  reduce using rule 131 (file_name)

    file_name  go to state 269


State 206

  198 id: ARROW IDENTIFIER .

    $default  reduce using rule 198 (id)


State 207

  208 method_invoke: IDENTIFIER ARROW func_invoke .

    $default  reduce using rule 208 (method_invoke)


State 208

   87 assignment_statement: IDENTIFIER EQ RHS .

    $default  reduce using rule 87 (assignment_statement)


State 209

   88 expression_statement: IDENTIFIER expression_op RHS .

    $default  reduce using rule 88 (expression_statement)


State 210

  199 id: id ARROW . IDENTIFIER
  209 method_invoke: IDENTIFIER id ARROW . func_invoke

    INVOKE      shift, and go to state 71
    IDENTIFIER  shift, and go to state 270

    func_invoke  go to state 271


State 211

  160 func_statements: SCOPEOPEN func_statements SCOPECLOSE . func_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 75
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    $default  reduce using rule 164 (func_statements)

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 78
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 81
    loop                  go to state 82
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 85
    when_statement        go to state 86
    analyze_syntax        go to state 87
    func_invoke           go to state 88
    task_invoke           go to state 89
    get_statement         go to state 90
    sleep                 go to state 91
    input                 go to state 92
    return_statement      go to state 93
    output                go to state 94
    func_statements       go to state 272
    access                go to state 96
    method_invoke         go to state 97


State 212

  126 get_statement: NDEC IDENTIFIER EQ . get_invoke SEMICOLON

    GET  shift, and go to state 106

    get_invoke  go to state 273


State 213

  127 get_statement: ADEC IDENTIFIER EQ . get_invoke SEMICOLON

    GET  shift, and go to state 106

    get_invoke  go to state 274


State 214

  103 when_statement: when_statement ELSE_WHEN SQUAREOPEN . RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 275
    func_invoke  go to state 118
    get_invoke   go to state 119


State 215

  105 when_default: DEFAULT SQUAREOPEN . RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 276
    func_invoke  go to state 118
    get_invoke   go to state 119


State 216

  145 func_args: func_args COMMA IDENTIFIER .

    $default  reduce using rule 145 (func_args)


State 217

  166 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN . taskscope SCOPECLOSE

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 288
    access                go to state 289
    method_invoke         go to state 290


State 218

  204 attribute: arrayDatatype IDENTIFIER SQUAREOPEN . dimlist SQUARECLOSE

    INTEGERLITERAL  shift, and go to state 121

    dimlist  go to state 291


State 219

  207 method: func_decl SCOPEOPEN . method_body SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 292
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 293
    COLON          shift, and go to state 294
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 295
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 296
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 297
    loop                  go to state 298
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 299
    when_statement        go to state 86
    analyze_statement     go to state 300
    func_invoke           go to state 301
    task_invoke           go to state 302
    get_statement         go to state 303
    sleep                 go to state 304
    input                 go to state 305
    return_statement      go to state 306
    output                go to state 307
    access                go to state 308
    method_invoke         go to state 309
    in_statement          go to state 310
    method_statements     go to state 311
    method_body           go to state 312


State 220

  202 attributes: attributes attribute SEMICOLON .

    $default  reduce using rule 202 (attributes)


State 221

  200 type_declaration: TYPE UDATATYPE SCOPEOPEN attributes methods SCOPECLOSE .

    $default  reduce using rule 200 (type_declaration)


State 222

  206 methods: methods method .

    $default  reduce using rule 206 (methods)


State 223

  147 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON . nonAtomic_datatypes

    NNUM      shift, and go to state 7
    NDEC      shift, and go to state 8
    NBOOL     shift, and go to state 9
    NLET      shift, and go to state 10
    NTEXT     shift, and go to state 11
    NVOID     shift, and go to state 12
    NARRNUM   shift, and go to state 13
    NARRDEC   shift, and go to state 14
    NARRBOOL  shift, and go to state 15
    NARRLET   shift, and go to state 16
    NARRTEXT  shift, and go to state 17

    nonAtomic_datatypes  go to state 313
    nonAtomicSimple      go to state 225
    nonAtomicArray       go to state 226


State 224

  146 func_decl: FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 146 (func_decl)


State 225

   22 nonAtomic_datatypes: nonAtomicSimple .

    $default  reduce using rule 22 (nonAtomic_datatypes)


State 226

   21 nonAtomic_datatypes: nonAtomicArray .

    $default  reduce using rule 21 (nonAtomic_datatypes)


State 227

  125 get_invoke: GET ARROW TIME .

    $default  reduce using rule 125 (get_invoke)


State 228

   45 RHS: NEG ROUNDOPEN RHS . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 314


State 229

   16 arithmetic_op: DIV .

    $default  reduce using rule 16 (arithmetic_op)


State 230

   13 arithmetic_op: ADD .

    $default  reduce using rule 13 (arithmetic_op)


State 231

   14 arithmetic_op: SUB .

    $default  reduce using rule 14 (arithmetic_op)


State 232

   15 arithmetic_op: MUL .

    $default  reduce using rule 15 (arithmetic_op)


State 233

   18 arithmetic_op: EXPONENT .

    $default  reduce using rule 18 (arithmetic_op)


State 234

   17 arithmetic_op: MODULO .

    $default  reduce using rule 17 (arithmetic_op)


State 235

   19 logical_op: AND .

    $default  reduce using rule 19 (logical_op)


State 236

   20 logical_op: OR .

    $default  reduce using rule 20 (logical_op)


State 237

    8 comparison_op: GT .

    $default  reduce using rule 8 (comparison_op)


State 238

    7 comparison_op: LT .

    $default  reduce using rule 7 (comparison_op)


State 239

    9 comparison_op: GTEQ .

    $default  reduce using rule 9 (comparison_op)


State 240

   10 comparison_op: LTEQ .

    $default  reduce using rule 10 (comparison_op)


State 241

   11 comparison_op: NOT_EQ .

    $default  reduce using rule 11 (comparison_op)


State 242

   12 comparison_op: EQUAL_TWO .

    $default  reduce using rule 12 (comparison_op)


State 243

   44 RHS: ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 44 (RHS)


State 244

   33 all_ops: HASH .

    $default  reduce using rule 33 (all_ops)


State 245

   31 all_ops: comparison_op .

    $default  reduce using rule 31 (all_ops)


State 246

   30 all_ops: arithmetic_op .

    $default  reduce using rule 30 (all_ops)


State 247

   32 all_ops: logical_op .

    $default  reduce using rule 32 (all_ops)


State 248

   43 RHS: ROUNDOPEN RHS all_ops . next ROUNDCLOSE

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    next         go to state 315
    RHS          go to state 316
    func_invoke  go to state 118
    get_invoke   go to state 119


State 249

   80 simpleList: simpleList COMMA IDENTIFIER EQ RHS .

    $default  reduce using rule 80 (simpleList)


State 250

   85 dimlist: dimlist COMMA INTEGERLITERAL .

    $default  reduce using rule 85 (dimlist)


State 251

   83 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 317
    func_invoke  go to state 118
    get_invoke   go to state 119


State 252

   82 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE
   84          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE EQ RHS
   85 dimlist: dimlist . COMMA INTEGERLITERAL

    COMMA        shift, and go to state 185
    SQUARECLOSE  shift, and go to state 318


State 253

  101 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE . $@3 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 100 ($@3)

    $@3  go to state 319


State 254

   98 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE . $@2 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 97 ($@2)

    $@2  go to state 320


State 255

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON . RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 321
    func_invoke  go to state 118
    get_invoke   go to state 119


State 256

  124 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL . COLON INTEGERLITERAL COLON arguments SEMICOLON

    COLON  shift, and go to state 322


State 257

  113 analyze_syntax: ANALYZE analyze_label COLON analyze_label . COLON analysis_arrays COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 323


State 258

  128 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 324


State 259

  123 arguments: NULL_ARGS .

    $default  reduce using rule 123 (arguments)


State 260

   28 T: IDENTIFIER .
  116 is: IDENTIFIER .

    COMMA      reduce using rule 28 (T)
    COMMA      [reduce using rule 116 (is)]
    SEMICOLON  reduce using rule 28 (T)
    SEMICOLON  [reduce using rule 116 (is)]
    $default   reduce using rule 28 (T)


State 261

   41 RHS: constants .
  117 is: constants .

    COMMA      reduce using rule 41 (RHS)
    COMMA      [reduce using rule 117 (is)]
    SEMICOLON  reduce using rule 41 (RHS)
    SEMICOLON  [reduce using rule 117 (is)]
    $default   reduce using rule 41 (RHS)


State 262

  119 is: RHS .

    $default  reduce using rule 119 (is)


State 263

  121 arguments: is .

    $default  reduce using rule 121 (arguments)


State 264

   29 T: func_invoke .
  118 is: func_invoke .

    COMMA      reduce using rule 29 (T)
    COMMA      [reduce using rule 118 (is)]
    SEMICOLON  reduce using rule 29 (T)
    SEMICOLON  [reduce using rule 118 (is)]
    $default   reduce using rule 29 (T)


State 265

  120 func_invoke: INVOKE IDENTIFIER COLON arguments . SEMICOLON
  122 arguments: arguments . COMMA is

    COMMA      shift, and go to state 325
    SEMICOLON  shift, and go to state 326


State 266

  132 input: IP file_name COLON IDENTIFIER . nextip

    COMMA      shift, and go to state 327
    SEMICOLON  shift, and go to state 328

    nextip  go to state 329


State 267

  140 nextop: HASH . stringvalues nextop

    STRINGLITERAL  shift, and go to state 202
    IDENTIFIER     shift, and go to state 203

    stringvalues  go to state 330


State 268

  139 opstring: stringvalues nextop .

    $default  reduce using rule 139 (opstring)


State 269

  138 output: OP COLON opstring file_name . SEMICOLON

    SEMICOLON  shift, and go to state 331


State 270

  199 id: id ARROW IDENTIFIER .

    $default  reduce using rule 199 (id)


State 271

  209 method_invoke: IDENTIFIER id ARROW func_invoke .

    $default  reduce using rule 209 (method_invoke)


State 272

  160 func_statements: SCOPEOPEN func_statements SCOPECLOSE func_statements .

    $default  reduce using rule 160 (func_statements)


State 273

  126 get_statement: NDEC IDENTIFIER EQ get_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 332


State 274

  127 get_statement: ADEC IDENTIFIER EQ get_invoke . SEMICOLON

    SEMICOLON  shift, and go to state 333


State 275

  103 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS . SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 334


State 276

  105 when_default: DEFAULT SQUAREOPEN RHS . SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 335


State 277

  176 taskscope: SCOPEOPEN . taskscope SCOPECLOSE taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 336
    access                go to state 289
    method_invoke         go to state 290


State 278

   47 nonAtomicSimple: NNUM .
  167 tid_expr: NNUM . IDENTIFIER EQ TID SEMICOLON

    IDENTIFIER  shift, and go to state 337

    IDENTIFIER  [reduce using rule 47 (nonAtomicSimple)]


State 279

   53 atomicSimple: ANUM .
  168 tid_expr: ANUM . IDENTIFIER EQ TID SEMICOLON

    IDENTIFIER  shift, and go to state 338

    IDENTIFIER  [reduce using rule 53 (atomicSimple)]


State 280

  169 taskscope: declaration . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 339
    access                go to state 289
    method_invoke         go to state 290


State 281

  170 taskscope: log . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 340
    access                go to state 289
    method_invoke         go to state 290


State 282

  172 taskscope: loop . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 341
    access                go to state 289
    method_invoke         go to state 290


State 283

  171 taskscope: conditional . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 342
    access                go to state 289
    method_invoke         go to state 290


State 284

  173 taskscope: func_invoke . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 343
    access                go to state 289
    method_invoke         go to state 290


State 285

  177 taskscope: sleep . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 344
    access                go to state 289
    method_invoke         go to state 290


State 286

  174 taskscope: output . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 345
    access                go to state 289
    method_invoke         go to state 290


State 287

  175 taskscope: tid_expr . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 346
    access                go to state 289
    method_invoke         go to state 290


State 288

  166 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 347


State 289

  179 taskscope: access .

    $default  reduce using rule 179 (taskscope)


State 290

  178 taskscope: method_invoke .

    $default  reduce using rule 178 (taskscope)


State 291

   85 dimlist: dimlist . COMMA INTEGERLITERAL
  204 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist . SQUARECLOSE

    COMMA        shift, and go to state 185
    SQUARECLOSE  shift, and go to state 348


State 292

  210 in_statement: IN . ARROW IDENTIFIER SEMICOLON
  211             | IN . ARROW func_invoke

    ARROW  shift, and go to state 349


State 293

  115 analyze_statement: SEMICOLON .

    $default  reduce using rule 115 (analyze_statement)


State 294

  114 analyze_statement: COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 350
    NARRDEC  shift, and go to state 351
    AARRNUM  shift, and go to state 352
    AARRDEC  shift, and go to state 353

    analysis_arrays  go to state 354


State 295

  223 method_statements: SCOPEOPEN . method_statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 292
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 293
    COLON          shift, and go to state 294
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 295
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 296
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 297
    loop                  go to state 298
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 299
    when_statement        go to state 86
    analyze_statement     go to state 300
    func_invoke           go to state 301
    task_invoke           go to state 302
    get_statement         go to state 303
    sleep                 go to state 304
    input                 go to state 305
    return_statement      go to state 306
    output                go to state 307
    access                go to state 308
    method_invoke         go to state 309
    in_statement          go to state 310
    method_statements     go to state 355


State 296

  212 method_statements: declaration .

    $default  reduce using rule 212 (method_statements)


State 297

  213 method_statements: log .

    $default  reduce using rule 213 (method_statements)


State 298

  216 method_statements: loop .

    $default  reduce using rule 216 (method_statements)


State 299

  218 method_statements: conditional .

    $default  reduce using rule 218 (method_statements)


State 300

  219 method_statements: analyze_statement .

    $default  reduce using rule 219 (method_statements)


State 301

  215 method_statements: func_invoke .

    $default  reduce using rule 215 (method_statements)


State 302

  214 method_statements: task_invoke .

    $default  reduce using rule 214 (method_statements)


State 303

  224 method_statements: get_statement .

    $default  reduce using rule 224 (method_statements)


State 304

  222 method_statements: sleep .

    $default  reduce using rule 222 (method_statements)


State 305

  220 method_statements: input .

    $default  reduce using rule 220 (method_statements)


State 306

  217 method_statements: return_statement .

    $default  reduce using rule 217 (method_statements)


State 307

  221 method_statements: output .

    $default  reduce using rule 221 (method_statements)


State 308

  227 method_statements: access .

    $default  reduce using rule 227 (method_statements)


State 309

  226 method_statements: method_invoke .

    $default  reduce using rule 226 (method_statements)


State 310

  225 method_statements: in_statement .

    $default  reduce using rule 225 (method_statements)


State 311

  228 method_body: method_statements .

    $default  reduce using rule 228 (method_body)


State 312

  207 method: func_decl SCOPEOPEN method_body . SCOPECLOSE
  229 method_body: method_body . method_statements

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    MAKE_PARALLEL  shift, and go to state 66
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    IN             shift, and go to state 292
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    SEMICOLON      shift, and go to state 293
    COLON          shift, and go to state 294
    IDENTIFIER     shift, and go to state 74
    SCOPEOPEN      shift, and go to state 295
    SCOPECLOSE     shift, and go to state 356
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 76
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 77
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 296
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 297
    loop                  go to state 298
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 299
    when_statement        go to state 86
    analyze_statement     go to state 300
    func_invoke           go to state 301
    task_invoke           go to state 302
    get_statement         go to state 303
    sleep                 go to state 304
    input                 go to state 305
    return_statement      go to state 306
    output                go to state 307
    access                go to state 308
    method_invoke         go to state 309
    in_statement          go to state 310
    method_statements     go to state 357


State 313

  147 atomic_func_decl: ATOMIC FUNC IDENTIFIER COLON func_args COLON nonAtomic_datatypes .

    $default  reduce using rule 147 (atomic_func_decl)


State 314

   45 RHS: NEG ROUNDOPEN RHS ROUNDCLOSE .

    $default  reduce using rule 45 (RHS)


State 315

   43 RHS: ROUNDOPEN RHS all_ops next . ROUNDCLOSE

    ROUNDCLOSE  shift, and go to state 358


State 316

   39 next: RHS . all_ops next
   40     | RHS .

    DIV        shift, and go to state 229
    ADD        shift, and go to state 230
    SUB        shift, and go to state 231
    MUL        shift, and go to state 232
    EXPONENT   shift, and go to state 233
    MODULO     shift, and go to state 234
    AND        shift, and go to state 235
    OR         shift, and go to state 236
    GT         shift, and go to state 237
    LT         shift, and go to state 238
    GTEQ       shift, and go to state 239
    LTEQ       shift, and go to state 240
    NOT_EQ     shift, and go to state 241
    EQUAL_TWO  shift, and go to state 242
    HASH       shift, and go to state 244

    $default  reduce using rule 40 (next)

    comparison_op  go to state 245
    arithmetic_op  go to state 246
    logical_op     go to state 247
    all_ops        go to state 359


State 317

   83 arrayList: IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 83 (arrayList)


State 318

   82 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .
   84          | arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE . EQ RHS

    EQ  shift, and go to state 360

    $default  reduce using rule 82 (arrayList)


State 319

  101 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 361


State 320

   98 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 362


State 321

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS . SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SEMICOLON  shift, and go to state 363


State 322

  124 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON . INTEGERLITERAL COLON arguments SEMICOLON

    INTEGERLITERAL  shift, and go to state 364


State 323

  113 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON . analysis_arrays COLON analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 350
    NARRDEC  shift, and go to state 351
    AARRNUM  shift, and go to state 352
    AARRDEC  shift, and go to state 353

    analysis_arrays  go to state 365


State 324

  128 sleep: SLEEP ROUNDOPEN FLOATLITERAL ROUNDCLOSE SEMICOLON .

    $default  reduce using rule 128 (sleep)


State 325

  122 arguments: arguments COMMA . is

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 260
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 261
    RHS          go to state 262
    is           go to state 366
    func_invoke  go to state 264
    get_invoke   go to state 119


State 326

  120 func_invoke: INVOKE IDENTIFIER COLON arguments SEMICOLON .

    $default  reduce using rule 120 (func_invoke)


State 327

  133 nextip: COMMA . IDENTIFIER nextip

    IDENTIFIER  shift, and go to state 367


State 328

  134 nextip: SEMICOLON .

    $default  reduce using rule 134 (nextip)


State 329

  132 input: IP file_name COLON IDENTIFIER nextip .

    $default  reduce using rule 132 (input)


State 330

  140 nextop: HASH stringvalues . nextop

    HASH  shift, and go to state 267

    $default  reduce using rule 141 (nextop)

    nextop  go to state 368


State 331

  138 output: OP COLON opstring file_name SEMICOLON .

    $default  reduce using rule 138 (output)


State 332

  126 get_statement: NDEC IDENTIFIER EQ get_invoke SEMICOLON .

    $default  reduce using rule 126 (get_statement)


State 333

  127 get_statement: ADEC IDENTIFIER EQ get_invoke SEMICOLON .

    $default  reduce using rule 127 (get_statement)


State 334

  103 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE . $@4 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 102 ($@4)

    $@4  go to state 369


State 335

  105 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE . $@5 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 104 ($@5)

    $@5  go to state 370


State 336

  176 taskscope: SCOPEOPEN taskscope . SCOPECLOSE taskscope

    SCOPECLOSE  shift, and go to state 371


State 337

  167 tid_expr: NNUM IDENTIFIER . EQ TID SEMICOLON

    EQ  shift, and go to state 372


State 338

  168 tid_expr: ANUM IDENTIFIER . EQ TID SEMICOLON

    EQ  shift, and go to state 373


State 339

  169 taskscope: declaration taskscope .

    $default  reduce using rule 169 (taskscope)


State 340

  170 taskscope: log taskscope .

    $default  reduce using rule 170 (taskscope)


State 341

  172 taskscope: loop taskscope .

    $default  reduce using rule 172 (taskscope)


State 342

  171 taskscope: conditional taskscope .

    $default  reduce using rule 171 (taskscope)


State 343

  173 taskscope: func_invoke taskscope .

    $default  reduce using rule 173 (taskscope)


State 344

  177 taskscope: sleep taskscope .

    $default  reduce using rule 177 (taskscope)


State 345

  174 taskscope: output taskscope .

    $default  reduce using rule 174 (taskscope)


State 346

  175 taskscope: tid_expr taskscope .

    $default  reduce using rule 175 (taskscope)


State 347

  166 task: TASK IDENTIFIER COLON func_args $@6 SCOPEOPEN taskscope SCOPECLOSE .

    $default  reduce using rule 166 (task)


State 348

  204 attribute: arrayDatatype IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE .

    $default  reduce using rule 204 (attribute)


State 349

  210 in_statement: IN ARROW . IDENTIFIER SEMICOLON
  211             | IN ARROW . func_invoke

    INVOKE      shift, and go to state 71
    IDENTIFIER  shift, and go to state 374

    func_invoke  go to state 375


State 350

  108 analysis_arrays: NARRNUM .

    $default  reduce using rule 108 (analysis_arrays)


State 351

  107 analysis_arrays: NARRDEC .

    $default  reduce using rule 107 (analysis_arrays)


State 352

  110 analysis_arrays: AARRNUM .

    $default  reduce using rule 110 (analysis_arrays)


State 353

  109 analysis_arrays: AARRDEC .

    $default  reduce using rule 109 (analysis_arrays)


State 354

  114 analyze_statement: COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 293
    COLON      shift, and go to state 294

    analyze_statement  go to state 376


State 355

  223 method_statements: SCOPEOPEN method_statements . SCOPECLOSE

    SCOPECLOSE  shift, and go to state 377


State 356

  207 method: func_decl SCOPEOPEN method_body SCOPECLOSE .

    $default  reduce using rule 207 (method)


State 357

  229 method_body: method_body method_statements .

    $default  reduce using rule 229 (method_body)


State 358

   43 RHS: ROUNDOPEN RHS all_ops next ROUNDCLOSE .

    $default  reduce using rule 43 (RHS)


State 359

   39 next: RHS all_ops . next

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    next         go to state 378
    RHS          go to state 316
    func_invoke  go to state 118
    get_invoke   go to state 119


State 360

   84 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ . RHS

    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 113
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 116
    RHS          go to state 379
    func_invoke  go to state 118
    get_invoke   go to state 119


State 361

  101 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 393
    statements            go to state 394
    access                go to state 395
    method_invoke         go to state 396


State 362

   98 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 393
    statements            go to state 397
    access                go to state 395
    method_invoke         go to state 396


State 363

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON . expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    IDENTIFIER  shift, and go to state 398

    expression_statement  go to state 399


State 364

  124 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL . COLON arguments SEMICOLON

    COLON  shift, and go to state 400


State 365

  113 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays . COLON analysis_arrays analyze_statement

    COLON  shift, and go to state 401


State 366

  122 arguments: arguments COMMA is .

    $default  reduce using rule 122 (arguments)


State 367

  133 nextip: COMMA IDENTIFIER . nextip

    COMMA      shift, and go to state 327
    SEMICOLON  shift, and go to state 328

    nextip  go to state 402


State 368

  140 nextop: HASH stringvalues nextop .

    $default  reduce using rule 140 (nextop)


State 369

  103 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 403


State 370

  105 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 404


State 371

  176 taskscope: SCOPEOPEN taskscope SCOPECLOSE . taskscope

    WHEN        shift, and go to state 63
    REPEAT      shift, and go to state 64
    FOR         shift, and go to state 65
    SLEEP       shift, and go to state 68
    ATOMIC      shift, and go to state 70
    INVOKE      shift, and go to state 71
    OP          shift, and go to state 73
    IDENTIFIER  shift, and go to state 74
    SCOPEOPEN   shift, and go to state 277
    NNUM        shift, and go to state 278
    NDEC        shift, and go to state 8
    NBOOL       shift, and go to state 9
    NLET        shift, and go to state 10
    NTEXT       shift, and go to state 11
    NVOID       shift, and go to state 12
    NARRNUM     shift, and go to state 13
    NARRDEC     shift, and go to state 14
    NARRBOOL    shift, and go to state 15
    NARRLET     shift, and go to state 16
    NARRTEXT    shift, and go to state 17
    ANUM        shift, and go to state 279
    ADEC        shift, and go to state 19
    ABOOL       shift, and go to state 20
    ALET        shift, and go to state 21
    ATEXT       shift, and go to state 22
    AARRNUM     shift, and go to state 23
    AARRDEC     shift, and go to state 24
    AARRBOOL    shift, and go to state 25
    AARRLET     shift, and go to state 26
    AARRTEXT    shift, and go to state 27
    UDATATYPE   shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 280
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 281
    loop                  go to state 282
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 283
    when_statement        go to state 86
    func_invoke           go to state 284
    sleep                 go to state 285
    output                go to state 286
    tid_expr              go to state 287
    taskscope             go to state 405
    access                go to state 289
    method_invoke         go to state 290


State 372

  167 tid_expr: NNUM IDENTIFIER EQ . TID SEMICOLON

    TID  shift, and go to state 406


State 373

  168 tid_expr: ANUM IDENTIFIER EQ . TID SEMICOLON

    TID  shift, and go to state 407


State 374

  210 in_statement: IN ARROW IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 408


State 375

  211 in_statement: IN ARROW func_invoke .

    $default  reduce using rule 211 (in_statement)


State 376

  114 analyze_statement: COLON analysis_arrays analyze_statement .

    $default  reduce using rule 114 (analyze_statement)


State 377

  223 method_statements: SCOPEOPEN method_statements SCOPECLOSE .

    $default  reduce using rule 223 (method_statements)


State 378

   39 next: RHS all_ops next .

    $default  reduce using rule 39 (next)


State 379

   84 arrayList: arrayList COMMA IDENTIFIER SQUAREOPEN dimlist SQUARECLOSE EQ RHS .

    $default  reduce using rule 84 (arrayList)


State 380

  190 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 409


State 381

  191 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 410


State 382

  180 statement: declaration .

    $default  reduce using rule 180 (statement)


State 383

  181 statement: log .

    $default  reduce using rule 181 (statement)


State 384

  183 statement: loop .

    $default  reduce using rule 183 (statement)


State 385

  182 statement: conditional .

    $default  reduce using rule 182 (statement)


State 386

  187 statement: analyze_syntax .

    $default  reduce using rule 187 (statement)


State 387

  185 statement: func_invoke .

    $default  reduce using rule 185 (statement)


State 388

  186 statement: task_invoke .

    $default  reduce using rule 186 (statement)


State 389

  189 statement: sleep .

    $default  reduce using rule 189 (statement)


State 390

  192 statement: input .

    $default  reduce using rule 192 (statement)


State 391

  184 statement: return_statement .

    $default  reduce using rule 184 (statement)


State 392

  188 statement: output .

    $default  reduce using rule 188 (statement)


State 393

  195 statements: statement .

    $default  reduce using rule 195 (statements)


State 394

  101 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements . SCOPECLOSE
  196 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 411
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 412
    access                go to state 395
    method_invoke         go to state 396


State 395

  194 statement: access .

    $default  reduce using rule 194 (statement)


State 396

  193 statement: method_invoke .

    $default  reduce using rule 193 (statement)


State 397

   98 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements . SCOPECLOSE
  196 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 413
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 412
    access                go to state 395
    method_invoke         go to state 396


State 398

   88 expression_statement: IDENTIFIER . expression_op RHS

    INCR           shift, and go to state 139
    DECR           shift, and go to state 140
    ASSN_MODULO    shift, and go to state 141
    ASSN_EXPONENT  shift, and go to state 142
    ASSN_DIV       shift, and go to state 143
    ASSN_MUL       shift, and go to state 144

    expression_op  go to state 145


State 399

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement . SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE

    SQUARECLOSE  shift, and go to state 414


State 400

  124 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON . arguments SEMICOLON

    NULL_ARGS         shift, and go to state 259
    GET               shift, and go to state 106
    INVOKE            shift, and go to state 71
    NEG               shift, and go to state 107
    INTEGERLITERAL    shift, and go to state 108
    STRINGLITERAL     shift, and go to state 109
    CHARACTERLITERAL  shift, and go to state 110
    BOOLEANLITERAL    shift, and go to state 111
    FLOATLITERAL      shift, and go to state 112
    IDENTIFIER        shift, and go to state 260
    ROUNDOPEN         shift, and go to state 114

    T            go to state 115
    constants    go to state 261
    RHS          go to state 262
    is           go to state 263
    func_invoke  go to state 264
    arguments    go to state 415
    get_invoke   go to state 119


State 401

  113 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON . analysis_arrays analyze_statement

    NARRNUM  shift, and go to state 350
    NARRDEC  shift, and go to state 351
    AARRNUM  shift, and go to state 352
    AARRDEC  shift, and go to state 353

    analysis_arrays  go to state 416


State 402

  133 nextip: COMMA IDENTIFIER nextip .

    $default  reduce using rule 133 (nextip)


State 403

  103 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 393
    statements            go to state 417
    access                go to state 395
    method_invoke         go to state 396


State 404

  105 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 393
    statements            go to state 418
    access                go to state 395
    method_invoke         go to state 396


State 405

  176 taskscope: SCOPEOPEN taskscope SCOPECLOSE taskscope .

    $default  reduce using rule 176 (taskscope)


State 406

  167 tid_expr: NNUM IDENTIFIER EQ TID . SEMICOLON

    SEMICOLON  shift, and go to state 419


State 407

  168 tid_expr: ANUM IDENTIFIER EQ TID . SEMICOLON

    SEMICOLON  shift, and go to state 420


State 408

  210 in_statement: IN ARROW IDENTIFIER SEMICOLON .

    $default  reduce using rule 210 (in_statement)


State 409

  190 statement: BREAK SEMICOLON .

    $default  reduce using rule 190 (statement)


State 410

  191 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 191 (statement)


State 411

  101 when_statement: WHEN SQUAREOPEN RHS SQUARECLOSE $@3 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 101 (when_statement)


State 412

  196 statements: statements statement .

    $default  reduce using rule 196 (statements)


State 413

   98 while_loop: REPEAT SQUAREOPEN RHS SQUARECLOSE $@2 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 98 (while_loop)


State 414

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE . $@1 SCOPEOPEN statements SCOPECLOSE

    $default  reduce using rule 95 ($@1)

    $@1  go to state 421


State 415

  122 arguments: arguments . COMMA is
  124 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments . SEMICOLON

    COMMA      shift, and go to state 325
    SEMICOLON  shift, and go to state 422


State 416

  113 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays . analyze_statement

    SEMICOLON  shift, and go to state 293
    COLON      shift, and go to state 294

    analyze_statement  go to state 423


State 417

  103 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements . SCOPECLOSE
  196 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 424
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 412
    access                go to state 395
    method_invoke         go to state 396


State 418

  105 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements . SCOPECLOSE
  196 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 425
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 412
    access                go to state 395
    method_invoke         go to state 396


State 419

  167 tid_expr: NNUM IDENTIFIER EQ TID SEMICOLON .

    $default  reduce using rule 167 (tid_expr)


State 420

  168 tid_expr: ANUM IDENTIFIER EQ TID SEMICOLON .

    $default  reduce using rule 168 (tid_expr)


State 421

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 . SCOPEOPEN statements SCOPECLOSE

    SCOPEOPEN  shift, and go to state 426


State 422

  124 task_invoke: MAKE_PARALLEL IDENTIFIER COLON INTEGERLITERAL COLON INTEGERLITERAL COLON arguments SEMICOLON .

    $default  reduce using rule 124 (task_invoke)


State 423

  113 analyze_syntax: ANALYZE analyze_label COLON analyze_label COLON analysis_arrays COLON analysis_arrays analyze_statement .

    $default  reduce using rule 113 (analyze_syntax)


State 424

  103 when_statement: when_statement ELSE_WHEN SQUAREOPEN RHS SQUARECLOSE $@4 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 103 (when_statement)


State 425

  105 when_default: DEFAULT SQUAREOPEN RHS SQUARECLOSE $@5 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 105 (when_default)


State 426

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN . statements SCOPECLOSE

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 393
    statements            go to state 427
    access                go to state 395
    method_invoke         go to state 396


State 427

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements . SCOPECLOSE
  196 statements: statements . statement

    WHEN           shift, and go to state 63
    REPEAT         shift, and go to state 64
    FOR            shift, and go to state 65
    BREAK          shift, and go to state 380
    CONTINUE       shift, and go to state 381
    MAKE_PARALLEL  shift, and go to state 66
    ANALYZE        shift, and go to state 67
    SLEEP          shift, and go to state 68
    RETURN         shift, and go to state 69
    ATOMIC         shift, and go to state 70
    INVOKE         shift, and go to state 71
    IP             shift, and go to state 72
    OP             shift, and go to state 73
    IDENTIFIER     shift, and go to state 74
    SCOPECLOSE     shift, and go to state 428
    NNUM           shift, and go to state 7
    NDEC           shift, and go to state 8
    NBOOL          shift, and go to state 9
    NLET           shift, and go to state 10
    NTEXT          shift, and go to state 11
    NVOID          shift, and go to state 12
    NARRNUM        shift, and go to state 13
    NARRDEC        shift, and go to state 14
    NARRBOOL       shift, and go to state 15
    NARRLET        shift, and go to state 16
    NARRTEXT       shift, and go to state 17
    ANUM           shift, and go to state 18
    ADEC           shift, and go to state 19
    ABOOL          shift, and go to state 20
    ALET           shift, and go to state 21
    ATEXT          shift, and go to state 22
    AARRNUM        shift, and go to state 23
    AARRDEC        shift, and go to state 24
    AARRBOOL       shift, and go to state 25
    AARRLET        shift, and go to state 26
    AARRTEXT       shift, and go to state 27
    UDATATYPE      shift, and go to state 28

    nonAtomicSimple       go to state 29
    atomicSimple          go to state 30
    nonAtomicArray        go to state 31
    atomicArray           go to state 32
    declaration           go to state 382
    simpleDatatype        go to state 34
    arrayDatatype         go to state 35
    declarationStmt       go to state 36
    assignment_statement  go to state 79
    expression_statement  go to state 80
    log                   go to state 383
    loop                  go to state 384
    for_loop              go to state 83
    while_loop            go to state 84
    conditional           go to state 385
    when_statement        go to state 86
    analyze_syntax        go to state 386
    func_invoke           go to state 387
    task_invoke           go to state 388
    sleep                 go to state 389
    input                 go to state 390
    return_statement      go to state 391
    output                go to state 392
    statement             go to state 412
    access                go to state 395
    method_invoke         go to state 396


State 428

   96 for_loop: FOR SQUAREOPEN both_assignment SEMICOLON RHS SEMICOLON expression_statement SQUARECLOSE $@1 SCOPEOPEN statements SCOPECLOSE .

    $default  reduce using rule 96 (for_loop)
